from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.e as __e__
import py4godot.classes.d as __d__
import py4godot.classes.T as __t__
import py4godot.classes.I as __i__
import py4godot.classes.RefCounted as __refcounted__
import py4godot.classes.p as __p__
import py4godot.classes.D as __d__
import py4godot.classes.R as __r__
import py4godot.classes.r as __r__
import py4godot.classes.a as __a__
import py4godot.classes.A as __a__
import py4godot.classes.y as __y__


class PathSegmentType:
  PATH_SEGMENT_KIND_REGION:int = 0
  PATH_SEGMENT_KIND_LINK:int = 1


class NavigationPathQueryResult2D(__refcounted__.RefCounted):
  """
		This class stores the result of a 2D navigation path query from the `NavigationServer2D`.
	"""

  @staticmethod
  def constructor()->NavigationPathQueryResult2D:pass



  @staticmethod
  def cast(other:__object__.Object)->NavigationPathQueryResult2D:pass


  @property
  def path(self)->__core__.PackedVector2Array:
    """"""
    pass
  @path.setter
  def path(self,  value:__core__.PackedVector2Array)->None:
    """"""
    pass
  @property
  def path_types(self)->__core__.PackedInt32Array:
    """"""
    pass
  @path_types.setter
  def path_types(self,  value:__core__.PackedInt32Array)->None:
    """"""
    pass
  @property
  def path_rids(self)->typedarray::RID:
    """"""
    pass
  @path_rids.setter
  def path_rids(self,  value:__core__.Array)->None:
    """"""
    pass
  @property
  def path_owner_ids(self)->__core__.PackedInt64Array:
    """"""
    pass
  @path_owner_ids.setter
  def path_owner_ids(self,  value:__core__.PackedInt64Array)->None:
    """"""
    pass
  def set_path(self, path:__core__.PackedVector2Array)->None:
    """"""
    pass

  def get_path(self)->__core__.PackedVector2Array:
    """"""
    pass

  def set_path_types(self, path_types:__core__.PackedInt32Array)->None:
    """"""
    pass

  def get_path_types(self)->__core__.PackedInt32Array:
    """"""
    pass

  def set_path_rids(self, path_rids:__core__.Array)->None:
    """"""
    pass

  def get_path_rids(self)->typedarray::RID:
    """"""
    pass

  def set_path_owner_ids(self, path_owner_ids:__core__.PackedInt64Array)->None:
    """"""
    pass

  def get_path_owner_ids(self)->__core__.PackedInt64Array:
    """"""
    pass

  def reset(self)->None:
    """
				Reset the result object to its initial state. This is useful to reuse the object across multiple queries.
			"""
    pass


