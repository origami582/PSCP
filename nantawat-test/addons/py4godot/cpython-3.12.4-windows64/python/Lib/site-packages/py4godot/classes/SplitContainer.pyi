from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.MenuBar as __menubar__
import py4godot.classes.VScrollBar as __vscrollbar__
import py4godot.classes.VSplitContainer as __vsplitcontainer__
import py4godot.classes.GraphElement as __graphelement__
import py4godot.classes.Button as __button__
import py4godot.classes.GraphNode as __graphnode__
import py4godot.classes.HFlowContainer as __hflowcontainer__
import py4godot.classes.Panel as __panel__
import py4godot.classes.OpenXRBindingModifierEditor as __openxrbindingmodifiereditor__
import py4godot.classes.ProgressBar as __progressbar__
import py4godot.classes.GraphFrame as __graphframe__
import py4godot.classes.TextEdit as __textedit__
import py4godot.classes.BoxContainer as __boxcontainer__
import py4godot.classes.MarginContainer as __margincontainer__
import py4godot.classes.HBoxContainer as __hboxcontainer__
import py4godot.classes.OpenXRInteractionProfileEditor as __openxrinteractionprofileeditor__
import py4godot.classes.TabContainer as __tabcontainer__
import py4godot.classes.HSeparator as __hseparator__
import py4godot.classes.Control as __control__
import py4godot.classes.ColorPickerButton as __colorpickerbutton__
import py4godot.classes.Tree as __tree__
import py4godot.classes.Label as __label__
import py4godot.classes.LineEdit as __lineedit__
import py4godot.classes.TextureButton as __texturebutton__
import py4godot.classes.RichTextLabel as __richtextlabel__
import py4godot.classes.TextureRect as __texturerect__
import py4godot.classes.Slider as __slider__
import py4godot.classes.CodeEdit as __codeedit__
import py4godot.classes.ColorPicker as __colorpicker__
import py4godot.classes.NinePatchRect as __ninepatchrect__
import py4godot.classes.ColorRect as __colorrect__
import py4godot.classes.GraphEdit as __graphedit__
import py4godot.classes.VFlowContainer as __vflowcontainer__
import py4godot.classes.EditorInspector as __editorinspector__
import py4godot.classes.EditorSpinSlider as __editorspinslider__
import py4godot.classes.VSeparator as __vseparator__
import py4godot.classes.PanelContainer as __panelcontainer__
import py4godot.classes.CenterContainer as __centercontainer__
import py4godot.classes.EditorProperty as __editorproperty__
import py4godot.classes.AspectRatioContainer as __aspectratiocontainer__
import py4godot.classes.CheckBox as __checkbox__
import py4godot.classes.Separator as __separator__
import py4godot.classes.TextureProgressBar as __textureprogressbar__
import py4godot.classes.Range as __range__
import py4godot.classes.VBoxContainer as __vboxcontainer__
import py4godot.classes.TabBar as __tabbar__
import py4godot.classes.HSplitContainer as __hsplitcontainer__
import py4godot.classes.ScrollBar as __scrollbar__
import py4godot.classes.CheckButton as __checkbutton__
import py4godot.classes.GridContainer as __gridcontainer__
import py4godot.classes.OpenXRInteractionProfileEditorBase as __openxrinteractionprofileeditorbase__
import py4godot.classes.EditorScriptPicker as __editorscriptpicker__
import py4godot.classes.SplitContainer as __splitcontainer__
import py4godot.classes.EditorResourcePicker as __editorresourcepicker__
import py4godot.classes.SpinBox as __spinbox__
import py4godot.classes.VideoStreamPlayer as __videostreamplayer__
import py4godot.classes.ReferenceRect as __referencerect__
import py4godot.classes.ScriptEditor as __scripteditor__
import py4godot.classes.ScriptEditorBase as __scripteditorbase__
import py4godot.classes.MenuButton as __menubutton__
import py4godot.classes.Container as __container__
import py4godot.classes.FlowContainer as __flowcontainer__
import py4godot.classes.ScrollContainer as __scrollcontainer__
import py4godot.classes.ItemList as __itemlist__
import py4godot.classes.EditorToaster as __editortoaster__
import py4godot.classes.SubViewportContainer as __subviewportcontainer__
import py4godot.classes.FileSystemDock as __filesystemdock__
import py4godot.classes.HSlider as __hslider__
import py4godot.classes.HScrollBar as __hscrollbar__
import py4godot.classes.BaseButton as __basebutton__
import py4godot.classes.VSlider as __vslider__
import py4godot.classes.OptionButton as __optionbutton__
import py4godot.classes.LinkButton as __linkbutton__


class DraggerVisibility:
  DRAGGER_VISIBLE:int = 0
  DRAGGER_HIDDEN:int = 1
  DRAGGER_HIDDEN_COLLAPSED:int = 2


class SplitContainer(__container__.Container):
  """
		A container that accepts only two child controls, then arranges them horizontally or vertically and creates a divisor between them. The divisor can be dragged around to change the size relation between the child controls.
	"""
  dragged: BuiltinSignal
  drag_started: BuiltinSignal
  drag_ended: BuiltinSignal

  @staticmethod
  def constructor()->SplitContainer:pass



  @staticmethod
  def cast(other:__object__.Object)->SplitContainer:pass


  @property
  def split_offset(self)->int:
    """"""
    pass
  @split_offset.setter
  def split_offset(self,  value:int)->None:
    """"""
    pass
  @property
  def collapsed(self)->bool:
    """"""
    pass
  @collapsed.setter
  def collapsed(self,  value:bool)->None:
    """"""
    pass
  @property
  def dragging_enabled(self)->bool:
    """"""
    pass
  @dragging_enabled.setter
  def dragging_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def dragger_visibility(self)->int:
    """"""
    pass
  @dragger_visibility.setter
  def dragger_visibility(self,  value:int)->None:
    """"""
    pass
  @property
  def vertical(self)->bool:
    """"""
    pass
  @vertical.setter
  def vertical(self,  value:bool)->None:
    """"""
    pass
  @property
  def drag_area_margin_begin(self)->int:
    """"""
    pass
  @drag_area_margin_begin.setter
  def drag_area_margin_begin(self,  value:int)->None:
    """"""
    pass
  @property
  def drag_area_margin_end(self)->int:
    """"""
    pass
  @drag_area_margin_end.setter
  def drag_area_margin_end(self,  value:int)->None:
    """"""
    pass
  @property
  def drag_area_offset(self)->int:
    """"""
    pass
  @drag_area_offset.setter
  def drag_area_offset(self,  value:int)->None:
    """"""
    pass
  @property
  def drag_area_highlight_in_editor(self)->bool:
    """"""
    pass
  @drag_area_highlight_in_editor.setter
  def drag_area_highlight_in_editor(self,  value:bool)->None:
    """"""
    pass
  def set_split_offset(self, offset:int)->None:
    """"""
    pass

  def get_split_offset(self)->int:
    """"""
    pass

  def clamp_split_offset(self)->None:
    """
				Clamps the `split_offset` value to not go outside the currently possible minimal and maximum values.
			"""
    pass

  def set_collapsed(self, collapsed:bool)->None:
    """"""
    pass

  def is_collapsed(self)->bool:
    """"""
    pass

  def set_dragger_visibility(self, mode:int )->None:
    """"""
    pass

  def get_dragger_visibility(self)->int:
    """"""
    pass

  def set_vertical(self, vertical:bool)->None:
    """"""
    pass

  def is_vertical(self)->bool:
    """"""
    pass

  def set_dragging_enabled(self, dragging_enabled:bool)->None:
    """"""
    pass

  def is_dragging_enabled(self)->bool:
    """"""
    pass

  def set_drag_area_margin_begin(self, margin:int)->None:
    """"""
    pass

  def get_drag_area_margin_begin(self)->int:
    """"""
    pass

  def set_drag_area_margin_end(self, margin:int)->None:
    """"""
    pass

  def get_drag_area_margin_end(self)->int:
    """"""
    pass

  def set_drag_area_offset(self, offset:int)->None:
    """"""
    pass

  def get_drag_area_offset(self)->int:
    """"""
    pass

  def set_drag_area_highlight_in_editor(self, drag_area_highlight_in_editor:bool)->None:
    """"""
    pass

  def is_drag_area_highlight_in_editor_enabled(self)->bool:
    """"""
    pass

  def get_drag_area_control(self)->__menubar__.MenuBar|__vscrollbar__.VScrollBar|__vsplitcontainer__.VSplitContainer|__graphelement__.GraphElement|__button__.Button|__graphnode__.GraphNode|__hflowcontainer__.HFlowContainer|__panel__.Panel|__openxrbindingmodifiereditor__.OpenXRBindingModifierEditor|__progressbar__.ProgressBar|__graphframe__.GraphFrame|__textedit__.TextEdit|__boxcontainer__.BoxContainer|__margincontainer__.MarginContainer|__hboxcontainer__.HBoxContainer|__openxrinteractionprofileeditor__.OpenXRInteractionProfileEditor|__tabcontainer__.TabContainer|__hseparator__.HSeparator|__control__.Control|__colorpickerbutton__.ColorPickerButton|__tree__.Tree|__label__.Label|__lineedit__.LineEdit|__texturebutton__.TextureButton|__richtextlabel__.RichTextLabel|__texturerect__.TextureRect|__slider__.Slider|__codeedit__.CodeEdit|__colorpicker__.ColorPicker|__ninepatchrect__.NinePatchRect|__colorrect__.ColorRect|__graphedit__.GraphEdit|__vflowcontainer__.VFlowContainer|__editorinspector__.EditorInspector|__editorspinslider__.EditorSpinSlider|__vseparator__.VSeparator|__panelcontainer__.PanelContainer|__centercontainer__.CenterContainer|__editorproperty__.EditorProperty|__aspectratiocontainer__.AspectRatioContainer|__checkbox__.CheckBox|__separator__.Separator|__textureprogressbar__.TextureProgressBar|__range__.Range|__vboxcontainer__.VBoxContainer|__tabbar__.TabBar|__hsplitcontainer__.HSplitContainer|__scrollbar__.ScrollBar|__checkbutton__.CheckButton|__gridcontainer__.GridContainer|__openxrinteractionprofileeditorbase__.OpenXRInteractionProfileEditorBase|__editorscriptpicker__.EditorScriptPicker|__splitcontainer__.SplitContainer|__editorresourcepicker__.EditorResourcePicker|__spinbox__.SpinBox|__videostreamplayer__.VideoStreamPlayer|__referencerect__.ReferenceRect|__scripteditor__.ScriptEditor|__scripteditorbase__.ScriptEditorBase|__menubutton__.MenuButton|__container__.Container|__flowcontainer__.FlowContainer|__scrollcontainer__.ScrollContainer|__itemlist__.ItemList|__editortoaster__.EditorToaster|__subviewportcontainer__.SubViewportContainer|__filesystemdock__.FileSystemDock|__hslider__.HSlider|__hscrollbar__.HScrollBar|__basebutton__.BaseButton|__vslider__.VSlider|__optionbutton__.OptionButton|__linkbutton__.LinkButton:
    """
				Returns the drag area `Control`. For example, you can move a pre-configured button into the drag area `Control` so that it rides along with the split bar. Try setting the `Button` anchors to `center` prior to the `reparent()` call.
				```gdscript
				$BarnacleButton.reparent($SplitContainer.get_drag_area_control())
				```
				**Note:** The drag area `Control` is drawn over the `SplitContainer`'s children, so `CanvasItem` draw objects called from the `Control` and children added to the `Control` will also appear over the `SplitContainer`'s children. Try setting `Control.mouse_filter` of custom children to `constant Control.MOUSE_FILTER_IGNORE` to prevent blocking the mouse from dragging if desired.
				**Warning:** This is a required internal node, removing and freeing it may cause a crash.
			"""
    pass


