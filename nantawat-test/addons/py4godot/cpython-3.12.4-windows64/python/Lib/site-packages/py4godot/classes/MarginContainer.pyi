from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Container as __container__



class MarginContainer(__container__.Container):
  """
		`MarginContainer` adds an adjustable margin on each side of its child controls. The margins are added around all children, not around each individual one. To control the `MarginContainer`'s margins, use the `margin_*` theme properties listed below.
		**Note:** The margin sizes are theme overrides, not normal properties. This is an example of how to change them in code:
		
		```gdscript
		# This code sample assumes the current script is extending MarginContainer.
		var margin_value = 100
		add_theme_constant_override("margin_top", margin_value)
		add_theme_constant_override("margin_left", margin_value)
		add_theme_constant_override("margin_bottom", margin_value)
		add_theme_constant_override("margin_right", margin_value)
		```
		
		
	"""

  @staticmethod
  def constructor()->MarginContainer:pass



  @staticmethod
  def cast(other:__object__.Object)->MarginContainer:pass


