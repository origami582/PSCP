from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted as __refcounted__



class ZIPReader(__refcounted__.RefCounted):
  """"""

  @staticmethod
  def constructor()->ZIPReader:pass



  @staticmethod
  def cast(other:__object__.Object)->ZIPReader:pass


  def open(self, path:str)->int:
    """"""
    pass

  def close(self)->int:
    """"""
    pass

  def get_files(self)->__core__.PackedStringArray:
    """"""
    pass

  def read_file(self, path:str, case_sensitive:bool=True)->__core__.PackedByteArray:
    """"""
    pass

  def file_exists(self, path:str, case_sensitive:bool=True)->bool:
    """"""
    pass


