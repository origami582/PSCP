from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNode as __visualshadernode__
import py4godot.classes.VisualShaderNodeTransformFunc as __visualshadernodetransformfunc__


class Function:
  FUNC_INVERSE:int = 0
  FUNC_TRANSPOSE:int = 1
  FUNC_MAX:int = 2


class VisualShaderNodeTransformFunc(__visualshadernode__.VisualShaderNode):
  """
		Computes an inverse or transpose function on the provided `Transform3D`.
	"""

  @staticmethod
  def constructor()->VisualShaderNodeTransformFunc:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeTransformFunc:pass


  @property
  def function(self)->int:
    """"""
    pass
  @function.setter
  def function(self,  value:int)->None:
    """"""
    pass
  def set_function(self, func:int )->None:
    """"""
    pass

  def get_function(self)->int:
    """"""
    pass


