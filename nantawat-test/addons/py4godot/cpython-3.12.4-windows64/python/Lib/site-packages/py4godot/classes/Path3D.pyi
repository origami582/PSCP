from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Curve3D as __curve3d__
import py4godot.classes.Node3D as __node3d__



class Path3D(__node3d__.Node3D):
  """
		Can have `PathFollow3D` child nodes moving along the `Curve3D`. See `PathFollow3D` for more information on the usage.
		Note that the path is considered as relative to the moved nodes (children of `PathFollow3D`). As such, the curve should usually start with a zero vector `(0, 0, 0)`.
	"""
  curve_changed: BuiltinSignal

  @staticmethod
  def constructor()->Path3D:pass



  @staticmethod
  def cast(other:__object__.Object)->Path3D:pass


  @property
  def curve(self)->__curve3d__.Curve3D:
    """"""
    pass
  @curve.setter
  def curve(self,  value:__curve3d__.Curve3D)->None:
    """"""
    pass
  def set_curve(self, curve:__curve3d__.Curve3D)->None:
    """"""
    pass

  def get_curve(self)->__curve3d__.Curve3D:
    """"""
    pass


