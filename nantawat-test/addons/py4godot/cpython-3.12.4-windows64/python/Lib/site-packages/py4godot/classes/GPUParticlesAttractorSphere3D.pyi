from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.GPUParticlesAttractor3D as __gpuparticlesattractor3d__



class GPUParticlesAttractorSphere3D(__gpuparticlesattractor3d__.GPUParticlesAttractor3D):
  """
		A spheroid-shaped attractor that influences particles from `GPUParticles3D` nodes. Can be used to attract particles towards its origin, or to push them away from its origin.
		Particle attractors work in real-time and can be moved, rotated and scaled during gameplay. Unlike collision shapes, non-uniform scaling of attractors is also supported.
		**Note:** Particle attractors only affect `GPUParticles3D`, not `CPUParticles3D`.
	"""

  @staticmethod
  def constructor()->GPUParticlesAttractorSphere3D:pass



  @staticmethod
  def cast(other:__object__.Object)->GPUParticlesAttractorSphere3D:pass


  @property
  def radius(self)->float:
    """"""
    pass
  @radius.setter
  def radius(self,  value:float)->None:
    """"""
    pass
  def set_radius(self, radius:float)->None:
    """"""
    pass

  def get_radius(self)->float:
    """"""
    pass


