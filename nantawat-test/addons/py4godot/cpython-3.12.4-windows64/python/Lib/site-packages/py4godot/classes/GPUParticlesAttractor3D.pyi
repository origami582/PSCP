from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualInstance3D as __visualinstance3d__



class GPUParticlesAttractor3D(__visualinstance3d__.VisualInstance3D):
  """
		Particle attractors can be used to attract particles towards the attractor's origin, or to push them away from the attractor's origin.
		Particle attractors work in real-time and can be moved, rotated and scaled during gameplay. Unlike collision shapes, non-uniform scaling of attractors is also supported.
		Attractors can be temporarily disabled by hiding them, or by setting their `strength` to `0.0`.
		**Note:** Particle attractors only affect `GPUParticles3D`, not `CPUParticles3D`.
	"""

  @staticmethod
  def constructor()->GPUParticlesAttractor3D:pass



  @staticmethod
  def cast(other:__object__.Object)->GPUParticlesAttractor3D:pass


  @property
  def strength(self)->float:
    """"""
    pass
  @strength.setter
  def strength(self,  value:float)->None:
    """"""
    pass
  @property
  def attenuation(self)->float:
    """"""
    pass
  @attenuation.setter
  def attenuation(self,  value:float)->None:
    """"""
    pass
  @property
  def directionality(self)->float:
    """"""
    pass
  @directionality.setter
  def directionality(self,  value:float)->None:
    """"""
    pass
  @property
  def cull_mask(self)->int:
    """"""
    pass
  @cull_mask.setter
  def cull_mask(self,  value:int)->None:
    """"""
    pass
  def set_cull_mask(self, mask:int)->None:
    """"""
    pass

  def get_cull_mask(self)->int:
    """"""
    pass

  def set_strength(self, strength:float)->None:
    """"""
    pass

  def get_strength(self)->float:
    """"""
    pass

  def set_attenuation(self, attenuation:float)->None:
    """"""
    pass

  def get_attenuation(self)->float:
    """"""
    pass

  def set_directionality(self, amount:float)->None:
    """"""
    pass

  def get_directionality(self)->float:
    """"""
    pass


