from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted as __refcounted__



class RegExMatch(__refcounted__.RefCounted):
  """"""

  @staticmethod
  def constructor()->RegExMatch:pass



  @staticmethod
  def cast(other:__object__.Object)->RegExMatch:pass


  @property
  def subject(self)->str:
    """"""
    pass
  @property
  def names(self)->__core__.Dictionary:
    """"""
    pass
  @property
  def strings(self)->__core__.Array:
    """"""
    pass
  def get_subject(self)->str:
    """"""
    pass

  def get_group_count(self)->int:
    """"""
    pass

  def get_names(self)->__core__.Dictionary:
    """"""
    pass

  def get_strings(self)->__core__.PackedStringArray:
    """"""
    pass

  def get_string(self, name:Any=0)->str:
    """"""
    pass

  def get_start(self, name:Any=0)->int:
    """"""
    pass

  def get_end(self, name:Any=0)->int:
    """"""
    pass


