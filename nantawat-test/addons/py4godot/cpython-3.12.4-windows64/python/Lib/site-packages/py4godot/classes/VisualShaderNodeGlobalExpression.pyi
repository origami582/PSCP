from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNodeExpression as __visualshadernodeexpression__



class VisualShaderNodeGlobalExpression(__visualshadernodeexpression__.VisualShaderNodeExpression):
  """
		Custom Godot Shader Language expression, which is placed on top of the generated shader. You can place various function definitions inside to call later in `VisualShaderNodeExpression`s (which are injected in the main shader functions). You can also declare varyings, uniforms and global constants.
	"""

  @staticmethod
  def constructor()->VisualShaderNodeGlobalExpression:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeGlobalExpression:pass


