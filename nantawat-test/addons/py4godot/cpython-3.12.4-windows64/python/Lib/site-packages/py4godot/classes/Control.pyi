from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNodeDeterminant as __visualshadernodedeterminant__
import py4godot.classes.AudioStreamGeneratorPlayback as __audiostreamgeneratorplayback__
import py4godot.classes.PhysicsDirectBodyState2DExtension as __physicsdirectbodystate2dextension__
import py4godot.classes.NavigationServer3D as __navigationserver3d__
import py4godot.classes.XRBodyModifier3D as __xrbodymodifier3d__
import py4godot.classes.VSplitContainer as __vsplitcontainer__
import py4godot.classes.SurfaceTool as __surfacetool__
import py4godot.classes.VisualShaderNodeParticleEmitter as __visualshadernodeparticleemitter__
import py4godot.classes.TextServer as __textserver__
import py4godot.classes.LightmapGIData as __lightmapgidata__
import py4godot.classes.Generic6DOFJoint3D as __generic6dofjoint3d__
import py4godot.classes.ConeTwistJoint3D as __conetwistjoint3d__
import py4godot.classes.VisualShaderNodeTransformVecMult as __visualshadernodetransformvecmult__
import py4godot.classes.ResourcePreloader as __resourcepreloader__
import py4godot.classes.ImageFormatLoaderExtension as __imageformatloaderextension__
import py4godot.classes.AnimationNodeBlendSpace1D as __animationnodeblendspace1d__
import py4godot.classes.TileSet as __tileset__
import py4godot.classes.XRHandModifier3D as __xrhandmodifier3d__
import py4godot.classes.GPUParticles3D as __gpuparticles3d__
import py4godot.classes.EditorExportPlatformWindows as __editorexportplatformwindows__
import py4godot.classes.StreamPeer as __streampeer__
import py4godot.classes.Slider as __slider__
import py4godot.classes.PrimitiveMesh as __primitivemesh__
import py4godot.classes.VisualShaderNodeTransformOp as __visualshadernodetransformop__
import py4godot.classes.PopupMenu as __popupmenu__
import py4godot.classes.ParallaxBackground as __parallaxbackground__
import py4godot.classes.VisualShaderNodeInput as __visualshadernodeinput__
import py4godot.classes.GLTFObjectModelProperty as __gltfobjectmodelproperty__
import py4godot.classes.Thread as __thread__
import py4godot.classes.PhysicalBoneSimulator3D as __physicalbonesimulator3d__
import py4godot.classes.VisualShaderNodeLinearSceneDepth as __visualshadernodelinearscenedepth__
import py4godot.classes.XRInterface as __xrinterface__
import py4godot.classes.CollisionShape2D as __collisionshape2d__
import py4godot.classes.Sprite2D as __sprite2d__
import py4godot.classes.ORMMaterial3D as __ormmaterial3d__
import py4godot.classes.PointMesh as __pointmesh__
import py4godot.classes.GraphEdit as __graphedit__
import py4godot.classes.PhysicsDirectSpaceState2DExtension as __physicsdirectspacestate2dextension__
import py4godot.classes.ResourceFormatSaver as __resourceformatsaver__
import py4godot.classes.Separator as __separator__
import py4godot.classes.VisualShaderNodeParticleAccelerator as __visualshadernodeparticleaccelerator__
import py4godot.classes.RDPipelineMultisampleState as __rdpipelinemultisamplestate__
import py4godot.classes.Joint2D as __joint2d__
import py4godot.classes.SkinReference as __skinreference__
import py4godot.classes.VisualShaderNodeIs as __visualshadernodeis__
import py4godot.classes.VisualShaderNodeIntFunc as __visualshadernodeintfunc__
import py4godot.classes.VisualShaderNodeCurveXYZTexture as __visualshadernodecurvexyztexture__
import py4godot.classes.GridContainer as __gridcontainer__
import py4godot.classes.Texture as __texture__
import py4godot.classes.RDSamplerState as __rdsamplerstate__
import py4godot.classes.Lightmapper as __lightmapper__
import py4godot.classes.EditorNode3DGizmoPlugin as __editornode3dgizmoplugin__
import py4godot.classes.XRPositionalTracker as __xrpositionaltracker__
import py4godot.classes.JavaScriptBridge as __javascriptbridge__
import py4godot.classes.VisualShaderNodeTransformDecompose as __visualshadernodetransformdecompose__
import py4godot.classes.GLTFNode as __gltfnode__
import py4godot.classes.AnimatedSprite2D as __animatedsprite2d__
import py4godot.classes.NavigationPathQueryParameters2D as __navigationpathqueryparameters2d__
import py4godot.classes.BaseButton as __basebutton__
import py4godot.classes.AnimationNodeTimeScale as __animationnodetimescale__
import py4godot.classes.XRAnchor3D as __xranchor3d__
import py4godot.classes.XRTracker as __xrtracker__
import py4godot.classes.TileSetSource as __tilesetsource__
import py4godot.classes.LinkButton as __linkbutton__
import py4godot.classes.Shape2D as __shape2d__
import py4godot.classes.CameraFeed as __camerafeed__
import py4godot.classes.OpenXRBindingModifier as __openxrbindingmodifier__
import py4godot.classes.ResourceImporterBitMap as __resourceimporterbitmap__
import py4godot.classes.EngineDebugger as __enginedebugger__
import py4godot.classes.BoxOccluder3D as __boxoccluder3d__
import py4godot.classes.IP as __ip__
import py4godot.classes.EditorExportPlatformIOS as __editorexportplatformios__
import py4godot.classes.RenderingServer as __renderingserver__
import py4godot.classes.o as __o__
import py4godot.classes.FontVariation as __fontvariation__
import py4godot.classes.VisualShaderNodeParameter as __visualshadernodeparameter__
import py4godot.classes.AudioEffectPhaser as __audioeffectphaser__
import py4godot.classes.PanoramaSkyMaterial as __panoramaskymaterial__
import py4godot.classes.VisualShaderNodeColorOp as __visualshadernodecolorop__
import py4godot.classes.AudioEffectHighPassFilter as __audioeffecthighpassfilter__
import py4godot.classes.VisualShaderNodeParticleRandomness as __visualshadernodeparticlerandomness__
import py4godot.classes.MobileVRInterface as __mobilevrinterface__
import py4godot.classes.CharFXTransform as __charfxtransform__
import py4godot.classes.GPUParticlesCollisionSDF3D as __gpuparticlescollisionsdf3d__
import py4godot.classes.VisualShaderNode as __visualshadernode__
import py4godot.classes.ShaderIncludeDB as __shaderincludedb__
import py4godot.classes.VisualShaderNodeColorParameter as __visualshadernodecolorparameter__
import py4godot.classes.OpenXRHapticVibration as __openxrhapticvibration__
import py4godot.classes.EditorSceneFormatImporter as __editorsceneformatimporter__
import py4godot.classes.TextServerAdvanced as __textserveradvanced__
import py4godot.classes.InputEventAction as __inputeventaction__
import py4godot.classes.ResourceImporterTextureAtlas as __resourceimportertextureatlas__
import py4godot.classes.VFlowContainer as __vflowcontainer__
import py4godot.classes.VisualShaderNodeMix as __visualshadernodemix__
import py4godot.classes.NoiseTexture2D as __noisetexture2d__
import py4godot.classes.VisualShaderNodeSmoothStep as __visualshadernodesmoothstep__
import py4godot.classes.AnimationNodeAdd3 as __animationnodeadd3__
import py4godot.classes.Node as __node__
import py4godot.classes.RenderSceneBuffersConfiguration as __renderscenebuffersconfiguration__
import py4godot.classes.FileDialog as __filedialog__
import py4godot.classes.CharacterBody3D as __characterbody3d__
import py4godot.classes.VisualShaderNodeParticleEmit as __visualshadernodeparticleemit__
import py4godot.classes.OS as __os__
import py4godot.classes.VisualShaderNodeTexture2DArrayParameter as __visualshadernodetexture2darrayparameter__
import py4godot.classes.VideoStreamPlayback as __videostreamplayback__
import py4godot.classes.EditorScenePostImportPlugin as __editorscenepostimportplugin__
import py4godot.classes.NavigationMesh as __navigationmesh__
import py4godot.classes.BoxShape3D as __boxshape3d__
import py4godot.classes.SpinBox as __spinbox__
import py4godot.classes.RDFramebufferPass as __rdframebufferpass__
import py4godot.classes.ReferenceRect as __referencerect__
import py4godot.classes.ColorPalette as __colorpalette__
import py4godot.classes.RDPipelineDepthStencilState as __rdpipelinedepthstencilstate__
import py4godot.classes.CanvasItemMaterial as __canvasitemmaterial__
import py4godot.classes.VisualShaderNodeTexture3DParameter as __visualshadernodetexture3dparameter__
import py4godot.classes.MeshInstance3D as __meshinstance3d__
import py4godot.classes.AudioSamplePlayback as __audiosampleplayback__
import py4godot.classes.VisibleOnScreenNotifier2D as __visibleonscreennotifier2d__
import py4godot.classes.GLTFCamera as __gltfcamera__
import py4godot.classes.EditorPaths as __editorpaths__
import py4godot.classes.RemoteTransform3D as __remotetransform3d__
import py4godot.classes.Texture2DArrayRD as __texture2darrayrd__
import py4godot.classes.WebXRInterface as __webxrinterface__
import py4godot.classes.NavigationMeshSourceGeometryData3D as __navigationmeshsourcegeometrydata3d__
import py4godot.classes.NavigationAgent2D as __navigationagent2d__
import py4godot.classes.ImageFormatLoader as __imageformatloader__
import py4godot.classes.StreamPeerTCP as __streampeertcp__
import py4godot.classes.EditorScenePostImport as __editorscenepostimport__
import py4godot.classes.AnimationNodeStateMachineTransition as __animationnodestatemachinetransition__
import py4godot.classes.PortableCompressedTexture2D as __portablecompressedtexture2d__
import py4godot.classes.OpenXRIPBindingModifier as __openxripbindingmodifier__
import py4godot.classes.GLTFAnimation as __gltfanimation__
import py4godot.classes.MeshTexture as __meshtexture__
import py4godot.classes.XRPose as __xrpose__
import py4godot.classes.OpenXRActionSet as __openxractionset__
import py4godot.classes.CompressedTextureLayered as __compressedtexturelayered__
import py4godot.classes.VisualShaderNodeResizableBase as __visualshadernoderesizablebase__
import py4godot.classes.RDVertexAttribute as __rdvertexattribute__
import py4godot.classes.PathFollow2D as __pathfollow2d__
import py4godot.classes.Marker3D as __marker3d__
import py4godot.classes.JavaScriptObject as __javascriptobject__
import py4godot.classes.Tree as __tree__
import py4godot.classes.WorldBoundaryShape3D as __worldboundaryshape3d__
import py4godot.classes.VisualShaderNodeVectorDistance as __visualshadernodevectordistance__
import py4godot.classes.ShapeCast3D as __shapecast3d__
import py4godot.classes.ResourceImporterWAV as __resourceimporterwav__
import py4godot.classes.AudioEffectBandPassFilter as __audioeffectbandpassfilter__
import py4godot.classes.VisualShaderNodeTexture2DParameter as __visualshadernodetexture2dparameter__
import py4godot.classes.CameraAttributesPhysical as __cameraattributesphysical__
import py4godot.classes.GrooveJoint2D as __groovejoint2d__
import py4godot.classes.AudioEffectChorus as __audioeffectchorus__
import py4godot.classes.EditorFileSystemImportFormatSupportQuery as __editorfilesystemimportformatsupportquery__
import py4godot.classes.VisualShaderNodeVectorOp as __visualshadernodevectorop__
import py4godot.classes.AcceptDialog as __acceptdialog__
import py4godot.classes.PlaceholderTexture3D as __placeholdertexture3d__
import py4godot.classes.SyntaxHighlighter as __syntaxhighlighter__
import py4godot.classes.AudioStreamPlaylist as __audiostreamplaylist__
import py4godot.classes.JNISingleton as __jnisingleton__
import py4godot.classes.WebRTCDataChannelExtension as __webrtcdatachannelextension__
import py4godot.classes.StyleBoxTexture as __styleboxtexture__
import py4godot.classes.EditorExportPlatformExtension as __editorexportplatformextension__
import py4godot.classes.AudioStreamPlayer as __audiostreamplayer__
import py4godot.classes.TileMapLayer as __tilemaplayer__
import py4godot.classes.PhysicsServer3DExtension as __physicsserver3dextension__
import py4godot.classes.Tweener as __tweener__
import py4godot.classes.OccluderInstance3D as __occluderinstance3d__
import py4godot.classes.MultiMesh as __multimesh__
import py4godot.classes.SplitContainer as __splitcontainer__
import py4godot.classes.VisualShaderNodeIntParameter as __visualshadernodeintparameter__
import py4godot.classes.XRVRS as __xrvrs__
import py4godot.classes.VisualShader as __visualshader__
import py4godot.classes.LightmapGI as __lightmapgi__
import py4godot.classes.VideoStreamPlayer as __videostreamplayer__
import py4godot.classes.MultiMeshInstance2D as __multimeshinstance2d__
import py4godot.classes.Sprite3D as __sprite3d__
import py4godot.classes.Semaphore as __semaphore__
import py4godot.classes.HeightMapShape3D as __heightmapshape3d__
import py4godot.classes.VisualShaderNodeConstant as __visualshadernodeconstant__
import py4godot.classes.CompressedCubemap as __compressedcubemap__
import py4godot.classes.WorkerThreadPool as __workerthreadpool__
import py4godot.classes.Texture2DRD as __texture2drd__
import py4godot.classes.OpenXRHapticBase as __openxrhapticbase__
import py4godot.classes.VisualShaderNodeParticleRingEmitter as __visualshadernodeparticleringemitter__
import py4godot.classes.OpenXRCompositionLayerQuad as __openxrcompositionlayerquad__
import py4godot.classes.GLTFBufferView as __gltfbufferview__
import py4godot.classes.AStarGrid2D as __astargrid2d__
import py4godot.classes.MenuBar as __menubar__
import py4godot.classes.EditorDebuggerPlugin as __editordebuggerplugin__
import py4godot.classes.SubtweenTweener as __subtweentweener__
import py4godot.classes.Label3D as __label3d__
import py4godot.classes.Translation as __translation__
import py4godot.classes.PolygonOccluder3D as __polygonoccluder3d__
import py4godot.classes.EditorDebuggerSession as __editordebuggersession__
import py4godot.classes.ProgressBar as __progressbar__
import py4godot.classes.ResourceImporterDynamicFont as __resourceimporterdynamicfont__
import py4godot.classes.MethodTweener as __methodtweener__
import py4godot.classes.EditorExportPlatformWeb as __editorexportplatformweb__
import py4godot.classes.ClassDB as __classdb__
import py4godot.classes.VisualShaderNodeParticleBoxEmitter as __visualshadernodeparticleboxemitter__
import py4godot.classes.Curve3D as __curve3d__
import py4godot.classes.RigidBody3D as __rigidbody3d__
import py4godot.classes.AnimationNodeOutput as __animationnodeoutput__
import py4godot.classes.CapsuleShape3D as __capsuleshape3d__
import py4godot.classes.RDTextureFormat as __rdtextureformat__
import py4godot.classes.Tween as __tween__
import py4godot.classes.FogMaterial as __fogmaterial__
import py4godot.classes.CPUParticles3D as __cpuparticles3d__
import py4godot.classes.AudioEffectEQ21 as __audioeffecteq21__
import py4godot.classes.UDPServer as __udpserver__
import py4godot.classes.EditorInspectorPlugin as __editorinspectorplugin__
import py4godot.classes.GLTFDocument as __gltfdocument__
import py4godot.classes.Marker2D as __marker2d__
import py4godot.classes.AudioStreamPlaybackResampled as __audiostreamplaybackresampled__
import py4godot.classes.XRControllerTracker as __xrcontrollertracker__
import py4godot.classes.XRNode3D as __xrnode3d__
import py4godot.classes.StreamPeerTLS as __streampeertls__
import py4godot.classes.AESContext as __aescontext__
import py4godot.classes.EngineProfiler as __engineprofiler__
import py4godot.classes.ConcavePolygonShape2D as __concavepolygonshape2d__
import py4godot.classes.CompositorEffect as __compositoreffect__
import py4godot.classes.SkeletonIK3D as __skeletonik3d__
import py4godot.classes.SceneState as __scenestate__
import py4godot.classes.CenterContainer as __centercontainer__
import py4godot.classes.SceneTreeTimer as __scenetreetimer__
import py4godot.classes.ResourceImporterLayeredTexture as __resourceimporterlayeredtexture__
import py4godot.classes.ResourceImporterImageFont as __resourceimporterimagefont__
import py4godot.classes.GLTFPhysicsBody as __gltfphysicsbody__
import py4godot.classes.OfflineMultiplayerPeer as __offlinemultiplayerpeer__
import py4godot.classes.ImmediateMesh as __immediatemesh__
import py4godot.classes.VisualShaderNodeParticleSphereEmitter as __visualshadernodeparticlesphereemitter__
import py4godot.classes.VisualShaderNodeGlobalExpression as __visualshadernodeglobalexpression__
import py4godot.classes.WorldEnvironment as __worldenvironment__
import py4godot.classes.PhysicsDirectBodyState3D as __physicsdirectbodystate3d__
import py4godot.classes.OpenXRInteractionProfileEditorBase as __openxrinteractionprofileeditorbase__
import py4godot.classes.EditorScriptPicker as __editorscriptpicker__
import py4godot.classes.Material as __material__
import py4godot.classes.SkeletonModification2DCCDIK as __skeletonmodification2dccdik__
import py4godot.classes.CircleShape2D as __circleshape2d__
import py4godot.classes.NavigationRegion2D as __navigationregion2d__
import py4godot.classes.GLTFTexture as __gltftexture__
import py4godot.classes.VisualShaderNodeClamp as __visualshadernodeclamp__
import py4godot.classes.CameraAttributes as __cameraattributes__
import py4godot.classes.TubeTrailMesh as __tubetrailmesh__
import py4godot.classes.OpenXRAction as __openxraction__
import py4godot.classes.HSlider as __hslider__
import py4godot.classes.ExternalTexture as __externaltexture__
import py4godot.classes.VisualShaderNodeUVPolarCoord as __visualshadernodeuvpolarcoord__
import py4godot.classes.VisualShaderNodeUVFunc as __visualshadernodeuvfunc__
import py4godot.classes.OptionButton as __optionbutton__
import py4godot.classes.EditorSceneFormatImporterBlend as __editorsceneformatimporterblend__
import py4godot.classes.ResourceSaver as __resourcesaver__
import py4godot.classes.ImporterMesh as __importermesh__
import py4godot.classes.StreamPeerExtension as __streampeerextension__
import py4godot.classes.DisplayServer as __displayserver__
import py4godot.classes.V as __v__
import py4godot.classes.VisualShaderNodeOuterProduct as __visualshadernodeouterproduct__
import py4godot.classes.GPUParticlesCollisionSphere3D as __gpuparticlescollisionsphere3d__
import py4godot.classes.AudioEffectReverb as __audioeffectreverb__
import py4godot.classes.CSGTorus3D as __csgtorus3d__
import py4godot.classes.VisualShaderNodeStep as __visualshadernodestep__
import py4godot.classes.AudioEffectSpectrumAnalyzer as __audioeffectspectrumanalyzer__
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.LightmapperRD as __lightmapperrd__
import py4godot.classes.PlaceholderCubemap as __placeholdercubemap__
import py4godot.classes.Node3DGizmo as __node3dgizmo__
import py4godot.classes.AudioEffectHighShelfFilter as __audioeffecthighshelffilter__
import py4godot.classes.AnimationNodeBlendTree as __animationnodeblendtree__
import py4godot.classes.Script as __script__
import py4godot.classes.Control as __control__
import py4godot.classes.PlaceholderTexture2D as __placeholdertexture2d__
import py4godot.classes.AnimationNodeSub2 as __animationnodesub2__
import py4godot.classes.AudioStreamMP3 as __audiostreammp3__
import py4godot.classes.ConvexPolygonShape3D as __convexpolygonshape3d__
import py4godot.classes.VisualShaderNodeTextureParameterTriplanar as __visualshadernodetextureparametertriplanar__
import py4godot.classes.SpotLight3D as __spotlight3d__
import py4godot.classes.WorldBoundaryShape2D as __worldboundaryshape2d__
import py4godot.classes.SkeletonModification2DJiggle as __skeletonmodification2djiggle__
import py4godot.classes.SkeletonProfileHumanoid as __skeletonprofilehumanoid__
import py4godot.classes.AudioStreamPlayback as __audiostreamplayback__
import py4godot.classes.ShaderMaterial as __shadermaterial__
import py4godot.classes.AnimationMixer as __animationmixer__
import py4godot.classes.VisualShaderNodeVec3Constant as __visualshadernodevec3constant__
import py4godot.classes.PointLight2D as __pointlight2d__
import py4godot.classes.PolygonPathFinder as __polygonpathfinder__
import py4godot.classes.VisualShaderNodeFresnel as __visualshadernodefresnel__
import py4godot.classes.BoxMesh as __boxmesh__
import py4godot.classes.ResourceImporterMP3 as __resourceimportermp3__
import py4godot.classes.Gradient as __gradient__
import py4godot.classes.PhysicsShapeQueryParameters2D as __physicsshapequeryparameters2d__
import py4godot.classes.p as __p__
import py4godot.classes.VisualShaderNodeVec2Constant as __visualshadernodevec2constant__
import py4godot.classes.OggPacketSequence as __oggpacketsequence__
import py4godot.classes.InputEventMouseMotion as __inputeventmousemotion__
import py4godot.classes.LabelSettings as __labelsettings__
import py4godot.classes.Parallax2D as __parallax2d__
import py4godot.classes.OpenXRIPBinding as __openxripbinding__
import py4godot.classes.StyleBoxLine as __styleboxline__
import py4godot.classes.OpenXRExtensionWrapperExtension as __openxrextensionwrapperextension__
import py4godot.classes.ResourceImporterOBJ as __resourceimporterobj__
import py4godot.classes.GLTFSkeleton as __gltfskeleton__
import py4godot.classes.QuadOccluder3D as __quadoccluder3d__
import py4godot.classes.FlowContainer as __flowcontainer__
import py4godot.classes.PhysicsServer3D as __physicsserver3d__
import py4godot.classes.OpenXRHand as __openxrhand__
import py4godot.classes.HingeJoint3D as __hingejoint3d__
import py4godot.classes.ButtonGroup as __buttongroup__
import py4godot.classes.VisualShaderNodeVec2Parameter as __visualshadernodevec2parameter__
import py4godot.classes.JavaClassWrapper as __javaclasswrapper__
import py4godot.classes.VisualShaderNodeColorConstant as __visualshadernodecolorconstant__
import py4godot.classes.AnimationNodeOneShot as __animationnodeoneshot__
import py4godot.classes.GPUParticles2D as __gpuparticles2d__
import py4godot.classes.Button as __button__
import py4godot.classes.AudioEffectFilter as __audioeffectfilter__
import py4godot.classes.RenderSceneBuffers as __renderscenebuffers__
import py4godot.classes.AnimatedTexture as __animatedtexture__
import py4godot.classes.GLTFPhysicsShape as __gltfphysicsshape__
import py4godot.classes.Light2D as __light2d__
import py4godot.classes.Panel as __panel__
import py4godot.classes.AudioStreamPlaybackPlaylist as __audiostreamplaybackplaylist__
import py4godot.classes.ResourceImporterScene as __resourceimporterscene__
import py4godot.classes.GLTFTextureSampler as __gltftexturesampler__
import py4godot.classes.AudioStreamMicrophone as __audiostreammicrophone__
import py4godot.classes.GPUParticlesCollisionHeightField3D as __gpuparticlescollisionheightfield3d__
import py4godot.classes.BoxContainer as __boxcontainer__
import py4godot.classes.WeakRef as __weakref__
import py4godot.classes.InputEventScreenDrag as __inputeventscreendrag__
import py4godot.classes.SegmentShape2D as __segmentshape2d__
import py4godot.classes.InputEventJoypadButton as __inputeventjoypadbutton__
import py4godot.classes.TextureCubemapRD as __texturecubemaprd__
import py4godot.classes.GPUParticlesAttractorBox3D as __gpuparticlesattractorbox3d__
import py4godot.classes.AudioEffectLimiter as __audioeffectlimiter__
import py4godot.classes.PinJoint3D as __pinjoint3d__
import py4godot.classes.PhysicsTestMotionParameters2D as __physicstestmotionparameters2d__
import py4godot.classes.SkeletonModification2DLookAt as __skeletonmodification2dlookat__
import py4godot.classes.CubemapArray as __cubemaparray__
import py4godot.classes.DampedSpringJoint2D as __dampedspringjoint2d__
import py4godot.classes.MultiMeshInstance3D as __multimeshinstance3d__
import py4godot.classes.AudioStream as __audiostream__
import py4godot.classes.NavigationLink3D as __navigationlink3d__
import py4godot.classes.WebSocketMultiplayerPeer as __websocketmultiplayerpeer__
import py4godot.classes.ReflectionProbe as __reflectionprobe__
import py4godot.classes.VehicleWheel3D as __vehiclewheel3d__
import py4godot.classes.FBXState as __fbxstate__
import py4godot.classes.CSGShape3D as __csgshape3d__
import py4godot.classes.AudioEffectEQ6 as __audioeffecteq6__
import py4godot.classes.MeshConvexDecompositionSettings as __meshconvexdecompositionsettings__
import py4godot.classes.InputEventMagnifyGesture as __inputeventmagnifygesture__
import py4godot.classes.Shortcut as __shortcut__
import py4godot.classes.ENetConnection as __enetconnection__
import py4godot.classes.GridMapEditorPlugin as __gridmapeditorplugin__
import py4godot.classes.RDShaderSource as __rdshadersource__
import py4godot.classes.AnimationNode as __animationnode__
import py4godot.classes.AStar2D as __astar2d__
import py4godot.classes.EditorExportPlatformAndroid as __editorexportplatformandroid__
import py4godot.classes.VisualShaderNodeScreenUVToSDF as __visualshadernodescreenuvtosdf__
import py4godot.classes.AudioEffectPitchShift as __audioeffectpitchshift__
import py4godot.classes.PCKPacker as __pckpacker__
import py4godot.classes.AudioStreamSynchronized as __audiostreamsynchronized__
import py4godot.classes.VisualShaderNodeUIntOp as __visualshadernodeuintop__
import py4godot.classes.RayCast3D as __raycast3d__
import py4godot.classes.EditorFileSystemDirectory as __editorfilesystemdirectory__
import py4godot.classes.ResourceImporterShaderFile as __resourceimportershaderfile__
import py4godot.classes.ConvexPolygonShape2D as __convexpolygonshape2d__
import py4godot.classes.XRBodyTracker as __xrbodytracker__
import py4godot.classes.VisualShaderNodeSample3D as __visualshadernodesample3d__
import py4godot.classes.CollisionObject2D as __collisionobject2d__
import py4godot.classes.AudioEffectEQ as __audioeffecteq__
import py4godot.classes.PacketPeer as __packetpeer__
import py4godot.classes.Curve2D as __curve2d__
import py4godot.classes.EditorToaster as __editortoaster__
import py4godot.classes.EditorContextMenuPlugin as __editorcontextmenuplugin__
import py4godot.classes.ConfigFile as __configfile__
import py4godot.classes.ShapeCast2D as __shapecast2d__
import py4godot.classes.NativeMenu as __nativemenu__
import py4godot.classes.BoneMap as __bonemap__
import py4godot.classes.InputEventMIDI as __inputeventmidi__
import py4godot.classes.ZIPReader as __zipreader__
import py4godot.classes.CanvasModulate as __canvasmodulate__
import py4godot.classes.VisibleOnScreenEnabler2D as __visibleonscreenenabler2d__
import py4godot.classes.GraphNode as __graphnode__
import py4godot.classes.Skeleton2D as __skeleton2d__
import py4godot.classes.Node2D as __node2d__
import py4godot.classes.SpriteBase3D as __spritebase3d__
import py4godot.classes.BoneAttachment3D as __boneattachment3d__
import py4godot.classes.Font as __font__
import py4godot.classes.GLTFDocumentExtension as __gltfdocumentextension__
import py4godot.classes.VisualShaderNodeComment as __visualshadernodecomment__
import py4godot.classes.VisualShaderNodeTransformFunc as __visualshadernodetransformfunc__
import py4godot.classes.ImageTexture3D as __imagetexture3d__
import py4godot.classes.SpringBoneCollisionCapsule3D as __springbonecollisioncapsule3d__
import py4godot.classes.OpenXRInteractionProfileEditor as __openxrinteractionprofileeditor__
import py4godot.classes.InputEventPanGesture as __inputeventpangesture__
import py4godot.classes.PhysicalBone3D as __physicalbone3d__
import py4godot.classes.AudioEffectSpectrumAnalyzerInstance as __audioeffectspectrumanalyzerinstance__
import py4godot.classes.AnimationNodeStateMachinePlayback as __animationnodestatemachineplayback__
import py4godot.classes.TextureLayered as __texturelayered__
import py4godot.classes.PacketPeerUDP as __packetpeerudp__
import py4godot.classes.PlaceholderMaterial as __placeholdermaterial__
import py4godot.classes.GradientTexture1D as __gradienttexture1d__
import py4godot.classes.EditorNode3DGizmo as __editornode3dgizmo__
import py4godot.classes.EditorSyntaxHighlighter as __editorsyntaxhighlighter__
import py4godot.classes.VisualShaderNodeSDFRaymarch as __visualshadernodesdfraymarch__
import py4godot.classes.InstancePlaceholder as __instanceplaceholder__
import py4godot.classes.Texture2DArray as __texture2darray__
import py4godot.classes.t as __t__
import py4godot.classes.GDExtension as __gdextension__
import py4godot.classes.BaseMaterial3D as __basematerial3d__
import py4godot.classes.VideoStream as __videostream__
import py4godot.classes.AnimationNodeBlend3 as __animationnodeblend3__
import py4godot.classes.VisualShaderNodeIntConstant as __visualshadernodeintconstant__
import py4godot.classes.MovieWriter as __moviewriter__
import py4godot.classes.AudioStreamOggVorbis as __audiostreamoggvorbis__
import py4godot.classes.SubViewport as __subviewport__
import py4godot.classes.EditorUndoRedoManager as __editorundoredomanager__
import py4godot.classes.VisualShaderNodeParticleOutput as __visualshadernodeparticleoutput__
import py4godot.classes.Camera3D as __camera3d__
import py4godot.classes.TextureProgressBar as __textureprogressbar__
import py4godot.classes.Expression as __expression__
import py4godot.classes.Range as __range__
import py4godot.classes.e as __e__
import py4godot.classes.RetargetModifier3D as __retargetmodifier3d__
import py4godot.classes.ScrollBar as __scrollbar__
import py4godot.classes.AudioEffectBandLimitFilter as __audioeffectbandlimitfilter__
import py4godot.classes.RigidBody2D as __rigidbody2d__
import py4godot.classes.RenderingDevice as __renderingdevice__
import py4godot.classes.PhysicsServer2D as __physicsserver2d__
import py4godot.classes.EditorResourcePicker as __editorresourcepicker__
import py4godot.classes.Popup as __popup__
import py4godot.classes.RenderSceneBuffersRD as __renderscenebuffersrd__
import py4godot.classes.XMLParser as __xmlparser__
import py4godot.classes.VisualShaderNodeUIntParameter as __visualshadernodeuintparameter__
import py4godot.classes.XRServer as __xrserver__
import py4godot.classes.RDPipelineColorBlendStateAttachment as __rdpipelinecolorblendstateattachment__
import py4godot.classes.InputEvent as __inputevent__
import py4godot.classes.PhysicsDirectBodyState3DExtension as __physicsdirectbodystate3dextension__
import py4godot.classes.PhysicsRayQueryParameters3D as __physicsrayqueryparameters3d__
import py4godot.classes.StaticBody3D as __staticbody3d__
import py4godot.classes.y as __y__
import py4godot.classes.NavigationPathQueryParameters3D as __navigationpathqueryparameters3d__
import py4godot.classes.ItemList as __itemlist__
import py4godot.classes.ImageTextureLayered as __imagetexturelayered__
import py4godot.classes.EditorCommandPalette as __editorcommandpalette__
import py4godot.classes.SubViewportContainer as __subviewportcontainer__
import py4godot.classes.VisualShaderNodeProximityFade as __visualshadernodeproximityfade__
import py4godot.classes.GPUParticlesCollisionBox3D as __gpuparticlescollisionbox3d__
import py4godot.classes.PacketPeerDTLS as __packetpeerdtls__
import py4godot.classes.PopupPanel as __popuppanel__
import py4godot.classes.PhysicsServer2DManager as __physicsserver2dmanager__
import py4godot.classes.VisualShaderNodeScreenNormalWorldSpace as __visualshadernodescreennormalworldspace__
import py4godot.classes.RegExMatch as __regexmatch__
import py4godot.classes.VScrollBar as __vscrollbar__
import py4godot.classes.ConcavePolygonShape3D as __concavepolygonshape3d__
import py4godot.classes.UndoRedo as __undoredo__
import py4godot.classes.EditorExportPreset as __editorexportpreset__
import py4godot.classes.ResourceImporter as __resourceimporter__
import py4godot.classes.VisualShaderNodeMultiplyAdd as __visualshadernodemultiplyadd__
import py4godot.classes.WebRTCDataChannel as __webrtcdatachannel__
import py4godot.classes.PhysicsTestMotionParameters3D as __physicstestmotionparameters3d__
import py4godot.classes.SystemFont as __systemfont__
import py4godot.classes.MultiplayerAPI as __multiplayerapi__
import py4godot.classes.AnimationRootNode as __animationrootnode__
import py4godot.classes.AnimationNodeExtension as __animationnodeextension__
import py4godot.classes.a as __a__
import py4godot.classes.XRFaceModifier3D as __xrfacemodifier3d__
import py4godot.classes.Crypto as __crypto__
import py4godot.classes.AudioEffectEQ10 as __audioeffecteq10__
import py4godot.classes.CharacterBody2D as __characterbody2d__
import py4godot.classes.CanvasTexture as __canvastexture__
import py4godot.classes.ScriptExtension as __scriptextension__
import py4godot.classes.ColorPicker as __colorpicker__
import py4godot.classes.EditorSceneFormatImporterUFBX as __editorsceneformatimporterufbx__
import py4godot.classes.TextServerExtension as __textserverextension__
import py4godot.classes.SpringBoneCollisionSphere3D as __springbonecollisionsphere3d__
import py4godot.classes.CSGMesh3D as __csgmesh3d__
import py4godot.classes.TileMap as __tilemap__
import py4godot.classes.NavigationObstacle2D as __navigationobstacle2d__
import py4godot.classes.VisualShaderNodeVectorCompose as __visualshadernodevectorcompose__
import py4godot.classes.EditorInspector as __editorinspector__
import py4godot.classes.HTTPRequest as __httprequest__
import py4godot.classes.EncodedObjectAsID as __encodedobjectasid__
import py4godot.classes.Area2D as __area2d__
import py4godot.classes.VisualShaderNodeTexture2DArray as __visualshadernodetexture2darray__
import py4godot.classes.TabBar as __tabbar__
import py4godot.classes.MeshInstance2D as __meshinstance2d__
import py4godot.classes.OpenXRActionBindingModifier as __openxractionbindingmodifier__
import py4godot.classes.X509Certificate as __x509certificate__
import py4godot.classes.EditorFileSystem as __editorfilesystem__
import py4godot.classes.OmniLight3D as __omnilight3d__
import py4godot.classes.StandardMaterial3D as __standardmaterial3d__
import py4godot.classes.Node3D as __node3d__
import py4godot.classes.VisualShaderNodeVectorDecompose as __visualshadernodevectordecompose__
import py4godot.classes.CompressedTexture3D as __compressedtexture3d__
import py4godot.classes.InputEventWithModifiers as __inputeventwithmodifiers__
import py4godot.classes.GLTFDocumentExtensionConvertImporterMesh as __gltfdocumentextensionconvertimportermesh__
import py4godot.classes.Timer as __timer__
import py4godot.classes.EditorExportPlugin as __editorexportplugin__
import py4godot.classes.VisualShaderNodeParameterRef as __visualshadernodeparameterref__
import py4godot.classes.AudioStreamPlaybackPolyphonic as __audiostreamplaybackpolyphonic__
import py4godot.classes.ScrollContainer as __scrollcontainer__
import py4godot.classes.SpringBoneCollision3D as __springbonecollision3d__
import py4godot.classes.EditorExportPlatformMacOS as __editorexportplatformmacos__
import py4godot.classes.TCPServer as __tcpserver__
import py4godot.classes.AnimationNodeAnimation as __animationnodeanimation__
import py4godot.classes.LookAtModifier3D as __lookatmodifier3d__
import py4godot.classes.ShaderGlobalsOverride as __shaderglobalsoverride__
import py4godot.classes.SpringArm3D as __springarm3d__
import py4godot.classes.StreamPeerBuffer as __streampeerbuffer__
import py4godot.classes.HScrollBar as __hscrollbar__
import py4godot.classes.PhysicsPointQueryParameters3D as __physicspointqueryparameters3d__
import py4godot.classes.VSlider as __vslider__
import py4godot.classes.AudioStreamPlayer2D as __audiostreamplayer2d__
import py4godot.classes.PlaceholderMesh as __placeholdermesh__
import py4godot.classes.VisibleOnScreenNotifier3D as __visibleonscreennotifier3d__
import py4godot.classes.AudioEffectAmplify as __audioeffectamplify__
import py4godot.classes.GraphFrame as __graphframe__
import py4godot.classes.AnimatableBody3D as __animatablebody3d__
import py4godot.classes.Camera2D as __camera2d__
import py4godot.classes.MultiplayerSynchronizer as __multiplayersynchronizer__
import py4godot.classes.InputEventJoypadMotion as __inputeventjoypadmotion__
import py4godot.classes.MarginContainer as __margincontainer__
import py4godot.classes.GPUParticlesCollision3D as __gpuparticlescollision3d__
import py4godot.classes.VisualShaderNodeTextureSDF as __visualshadernodetexturesdf__
import py4godot.classes.OccluderPolygon2D as __occluderpolygon2d__
import py4godot.classes.DTLSServer as __dtlsserver__
import py4godot.classes.PackedDataContainer as __packeddatacontainer__
import py4godot.classes.LineEdit as __lineedit__
import py4godot.classes.RichTextLabel as __richtextlabel__
import py4godot.classes.OpenXRVisibilityMask as __openxrvisibilitymask__
import py4godot.classes.WebSocketPeer as __websocketpeer__
import py4godot.classes.NoiseTexture3D as __noisetexture3d__
import py4godot.classes.AnimationNodeBlend2 as __animationnodeblend2__
import py4godot.classes.RichTextEffect as __richtexteffect__
import py4godot.classes.PacketPeerExtension as __packetpeerextension__
import py4godot.classes.PlaneMesh as __planemesh__
import py4godot.classes.SkeletonModification2DPhysicalBones as __skeletonmodification2dphysicalbones__
import py4godot.classes.ConfirmationDialog as __confirmationdialog__
import py4godot.classes.SceneTree as __scenetree__
import py4godot.classes.RDTextureView as __rdtextureview__
import py4godot.classes.EditorSpinSlider as __editorspinslider__
import py4godot.classes.PathFollow3D as __pathfollow3d__
import py4godot.classes.MultiplayerPeerExtension as __multiplayerpeerextension__
import py4godot.classes.VisualShaderNodeFrame as __visualshadernodeframe__
import py4godot.classes.VisualShaderNodeSwitch as __visualshadernodeswitch__
import py4godot.classes.CheckBox as __checkbox__
import py4godot.classes.PackedDataContainerRef as __packeddatacontainerref__
import py4godot.classes.PhysicsDirectBodyState2D as __physicsdirectbodystate2d__
import py4godot.classes.VisualShaderNodeVec4Constant as __visualshadernodevec4constant__
import py4godot.classes.CheckButton as __checkbutton__
import py4godot.classes.NavigationMeshGenerator as __navigationmeshgenerator__
import py4godot.classes.GLTFSpecGloss as __gltfspecgloss__
import py4godot.classes.VisualShaderNodeCubemapParameter as __visualshadernodecubemapparameter__
import py4godot.classes.OpenXRAPIExtension as __openxrapiextension__
import py4godot.classes.AtlasTexture as __atlastexture__
import py4godot.classes.ResourceImporterImage as __resourceimporterimage__
import py4godot.classes.CollisionObject3D as __collisionobject3d__
import py4godot.classes.CryptoKey as __cryptokey__
import py4godot.classes.Mutex as __mutex__
import py4godot.classes.Path3D as __path3d__
import py4godot.classes.ResourceFormatLoader as __resourceformatloader__
import py4godot.classes.LightOccluder2D as __lightoccluder2d__
import py4godot.classes.FileSystemDock as __filesystemdock__
import py4godot.classes.VisualShaderNodeDistanceFade as __visualshadernodedistancefade__
import py4godot.classes.VisualShaderNodeBillboard as __visualshadernodebillboard__
import py4godot.classes.CameraTexture as __cameratexture__
import py4godot.classes.VisualShaderNodeDerivativeFunc as __visualshadernodederivativefunc__
import py4godot.classes.VisualShaderNodeGroupBase as __visualshadernodegroupbase__
import py4godot.classes.CSGPolygon3D as __csgpolygon3d__
import py4godot.classes.SpriteFrames as __spriteframes__
import py4godot.classes.VisualShaderNodeTextureSDFNormal as __visualshadernodetexturesdfnormal__
import py4godot.classes.VisualShaderNodeTextureParameter as __visualshadernodetextureparameter__
import py4godot.classes.Mesh as __mesh__
import py4godot.classes.i as __i__
import py4godot.classes.RenderSceneDataExtension as __renderscenedataextension__
import py4godot.classes.ArrayMesh as __arraymesh__
import py4godot.classes.GLTFSkin as __gltfskin__
import py4godot.classes.SkeletonModification2DStackHolder as __skeletonmodification2dstackholder__
import py4godot.classes.AudioStreamPlaybackInteractive as __audiostreamplaybackinteractive__
import py4godot.classes.VisualShaderNodeParticleMultiplyByAxisAngle as __visualshadernodeparticlemultiplybyaxisangle__
import py4godot.classes.VisualShaderNodeRotationByAxis as __visualshadernoderotationbyaxis__
import py4godot.classes.TabContainer as __tabcontainer__
import py4godot.classes.VisualShaderNodeIntOp as __visualshadernodeintop__
import py4godot.classes.NavigationRegion3D as __navigationregion3d__
import py4godot.classes.AnimationPlayer as __animationplayer__
import py4godot.classes.SeparationRayShape2D as __separationrayshape2d__
import py4godot.classes.CollisionShape3D as __collisionshape3d__
import py4godot.classes.VisualShaderNodeVectorLen as __visualshadernodevectorlen__
import py4godot.classes.XRCamera3D as __xrcamera3d__
import py4godot.classes.AnimationNodeTransition as __animationnodetransition__
import py4godot.classes.PhysicsDirectSpaceState3DExtension as __physicsdirectspacestate3dextension__
import py4godot.classes.CanvasLayer as __canvaslayer__
import py4godot.classes.SceneReplicationConfig as __scenereplicationconfig__
import py4godot.classes.Shape3D as __shape3d__
import py4godot.classes.PacketPeerStream as __packetpeerstream__
import py4godot.classes.TLSOptions as __tlsoptions__
import py4godot.classes.KinematicCollision3D as __kinematiccollision3d__
import py4godot.classes.PlaceholderTextureLayered as __placeholdertexturelayered__
import py4godot.classes.TorusMesh as __torusmesh__
import py4godot.classes.PhysicalBone2D as __physicalbone2d__
import py4godot.classes.SeparationRayShape3D as __separationrayshape3d__
import py4godot.classes.LightmapProbe as __lightmapprobe__
import py4godot.classes.FBXDocument as __fbxdocument__
import py4godot.classes.EditorExportPlatformPC as __editorexportplatformpc__
import py4godot.classes.OpenXRCompositionLayerEquirect as __openxrcompositionlayerequirect__
import py4godot.classes.ProceduralSkyMaterial as __proceduralskymaterial__
import py4godot.classes.Window as __window__
import py4godot.classes.VisualShaderNodeParticleConeVelocity as __visualshadernodeparticleconevelocity__
import py4godot.classes.EditorImportPlugin as __editorimportplugin__
import py4godot.classes.StyleBoxEmpty as __styleboxempty__
import py4godot.classes.Decal as __decal__
import py4godot.classes.OpenXRAnalogThresholdModifier as __openxranalogthresholdmodifier__
import py4godot.classes.CameraServer as __cameraserver__
import py4godot.classes.VisualShaderNodeTexture as __visualshadernodetexture__
import py4godot.classes.GLTFMesh as __gltfmesh__
import py4godot.classes.Resource as __resource__
import py4godot.classes.World3D as __world3d__
import py4godot.classes.GDExtensionManager as __gdextensionmanager__
import py4godot.classes.ScriptEditor as __scripteditor__
import py4godot.classes.FramebufferCacheRD as __framebuffercacherd__
import py4godot.classes.A as __a__
import py4godot.classes.CylinderMesh as __cylindermesh__
import py4godot.classes.VoxelGI as __voxelgi__
import py4godot.classes.Cubemap as __cubemap__
import py4godot.classes.TileMapPattern as __tilemappattern__
import py4godot.classes.VisualShaderNodeCubemap as __visualshadernodecubemap__
import py4godot.classes.CanvasGroup as __canvasgroup__
import py4godot.classes.TreeItem as __treeitem__
import py4godot.classes.OpenXRInteractionProfile as __openxrinteractionprofile__
import py4godot.classes.VoxelGIData as __voxelgidata__
import py4godot.classes.XROrigin3D as __xrorigin3d__
import py4godot.classes.XRInterfaceExtension as __xrinterfaceextension__
import py4godot.classes.VisualShaderNodeTransformParameter as __visualshadernodetransformparameter__
import py4godot.classes.VisualShaderNodeTransformConstant as __visualshadernodetransformconstant__
import py4godot.classes.AnimationTree as __animationtree__
import py4godot.classes.ResourceImporterCSVTranslation as __resourceimportercsvtranslation__
import py4godot.classes.OpenXRBindingModifierEditor as __openxrbindingmodifiereditor__
import py4godot.classes.VisualShaderNodeTexture3D as __visualshadernodetexture3d__
import py4godot.classes.RayCast2D as __raycast2d__
import py4godot.classes.HSeparator as __hseparator__
import py4godot.classes.AudioEffectStereoEnhance as __audioeffectstereoenhance__
import py4godot.classes.CSGSphere3D as __csgsphere3d__
import py4godot.classes.AnimationNodeBlendSpace2D as __animationnodeblendspace2d__
import py4godot.classes.OggPacketSequencePlayback as __oggpacketsequenceplayback__
import py4godot.classes.TileData as __tiledata__
import py4godot.classes.VisualInstance3D as __visualinstance3d__
import py4godot.classes.AudioEffectNotchFilter as __audioeffectnotchfilter__
import py4godot.classes.Texture3DRD as __texture3drd__
import py4godot.classes.RenderData as __renderdata__
import py4godot.classes.AnimatableBody2D as __animatablebody2d__
import py4godot.classes.JavaClass as __javaclass__
import py4godot.classes.RandomNumberGenerator as __randomnumbergenerator__
import py4godot.classes.PackedScene as __packedscene__
import py4godot.classes.Shader as __shader__
import py4godot.classes.TextServerManager as __textservermanager__
import py4godot.classes.SphereOccluder3D as __sphereoccluder3d__
import py4godot.classes.JSON as __json__
import py4godot.classes.T as __t__
import py4godot.classes.AudioStreamPlayer3D as __audiostreamplayer3d__
import py4godot.classes.EditorFileDialog as __editorfiledialog__
import py4godot.classes.EditorResourceTooltipPlugin as __editorresourcetooltipplugin__
import py4godot.classes.AudioEffectRecord as __audioeffectrecord__
import py4godot.classes.Sky as __sky__
import py4godot.classes.PhysicsDirectSpaceState3D as __physicsdirectspacestate3d__
import py4godot.classes.Curve as __curve__
import py4godot.classes.EditorExportPlatform as __editorexportplatform__
import py4godot.classes.ResourceLoader as __resourceloader__
import py4godot.classes.VisualShaderNodeWorldPositionFromDepth as __visualshadernodeworldpositionfromdepth__
import py4godot.classes.Environment as __environment__
import py4godot.classes.VisualShaderNodeFaceForward as __visualshadernodefaceforward__
import py4godot.classes.AudioServer as __audioserver__
import py4godot.classes.Texture3D as __texture3d__
import py4godot.classes.PhysicsBody3D as __physicsbody3d__
import py4godot.classes.ResourceUID as __resourceuid__
import py4godot.classes.VisualShaderNodeFloatOp as __visualshadernodefloatop__
import py4godot.classes.RectangleShape2D as __rectangleshape2d__
import py4godot.classes.XRController3D as __xrcontroller3d__
import py4godot.classes.AnimatedSprite3D as __animatedsprite3d__
import py4godot.classes.Time as __time__
import py4godot.classes.VisualShaderNodeExpression as __visualshadernodeexpression__
import py4godot.classes.VisibleOnScreenEnabler3D as __visibleonscreenenabler3d__
import py4godot.classes.PhysicsTestMotionResult3D as __physicstestmotionresult3d__
import py4godot.classes.TileSetScenesCollectionSource as __tilesetscenescollectionsource__
import py4godot.classes.AudioEffectDistortion as __audioeffectdistortion__
import py4godot.classes.CollisionPolygon3D as __collisionpolygon3d__
import py4godot.classes.Area3D as __area3d__
import py4godot.classes.VisualShaderNodeCompare as __visualshadernodecompare__
import py4godot.classes.MeshLibrary as __meshlibrary__
import py4godot.classes.CameraAttributesPractical as __cameraattributespractical__
import py4godot.classes.RDPipelineRasterizationState as __rdpipelinerasterizationstate__
import py4godot.classes.GLTFState as __gltfstate__
import py4godot.classes.Skin as __skin__
import py4godot.classes.VisualShaderNodeSDFToScreenUV as __visualshadernodesdftoscreenuv__
import py4godot.classes.RefCounted as __refcounted__
import py4godot.classes.TextEdit as __textedit__
import py4godot.classes.DirectionalLight3D as __directionallight3d__
import py4godot.classes.ENetMultiplayerPeer as __enetmultiplayerpeer__
import py4godot.classes.PhysicsTestMotionResult2D as __physicstestmotionresult2d__
import py4godot.classes.InputEventFromWindow as __inputeventfromwindow__
import py4godot.classes.AudioEffectLowPassFilter as __audioeffectlowpassfilter__
import py4godot.classes.CSGPrimitive3D as __csgprimitive3d__
import py4godot.classes.ScriptLanguage as __scriptlanguage__
import py4godot.classes.CallbackTweener as __callbacktweener__
import py4godot.classes.Occluder3D as __occluder3d__
import py4godot.classes.ColorPickerButton as __colorpickerbutton__
import py4godot.classes.JSONRPC as __jsonrpc__
import py4godot.classes.VisualShaderNodeColorFunc as __visualshadernodecolorfunc__
import py4godot.classes.VehicleBody3D as __vehiclebody3d__
import py4godot.classes.CodeEdit as __codeedit__
import py4godot.classes.JavaObject as __javaobject__
import py4godot.classes.ProjectSettings as __projectsettings__
import py4godot.classes.VisualShaderNodeOutput as __visualshadernodeoutput__
import py4godot.classes.ColorRect as __colorrect__
import py4godot.classes.EditorScript as __editorscript__
import py4godot.classes.RibbonTrailMesh as __ribbontrailmesh__
import py4godot.classes.FogVolume as __fogvolume__
import py4godot.classes.IntervalTweener as __intervaltweener__
import py4godot.classes.VSeparator as __vseparator__
import py4godot.classes.AnimationNodeStateMachine as __animationnodestatemachine__
import py4godot.classes.Line2D as __line2d__
import py4godot.classes.EditorProperty as __editorproperty__
import py4godot.classes.GeometryInstance3D as __geometryinstance3d__
import py4godot.classes.AudioEffectLowShelfFilter as __audioeffectlowshelffilter__
import py4godot.classes.AnimationLibrary as __animationlibrary__
import py4godot.classes.VisualShaderNodeParticleMeshEmitter as __visualshadernodeparticlemeshemitter__
import py4godot.classes.PlaceholderTexture2DArray as __placeholdertexture2darray__
import py4godot.classes.Viewport as __viewport__
import py4godot.classes.TouchScreenButton as __touchscreenbutton__
import py4godot.classes.FileAccess as __fileaccess__
import py4godot.classes.NavigationPolygon as __navigationpolygon__
import py4godot.classes.AudioBusLayout as __audiobuslayout__
import py4godot.classes.ShaderInclude as __shaderinclude__
import py4godot.classes.KinematicCollision2D as __kinematiccollision2d__
import py4godot.classes.AnimationNodeSync as __animationnodesync__
import py4godot.classes.VisualShaderNodeVaryingSetter as __visualshadernodevaryingsetter__
import py4godot.classes.PhysicsServer3DRenderingServerHandler as __physicsserver3drenderingserverhandler__
import py4godot.classes.GraphElement as __graphelement__
import py4godot.classes.NavigationObstacle3D as __navigationobstacle3d__
import py4godot.classes.EditorExportPlatformLinuxBSD as __editorexportplatformlinuxbsd__
import py4godot.classes.TranslationDomain as __translationdomain__
import py4godot.classes.AudioEffect as __audioeffect__
import py4godot.classes.AudioEffectCapture as __audioeffectcapture__
import py4godot.classes.AudioStreamPlaybackOggVorbis as __audiostreamplaybackoggvorbis__
import py4godot.classes.AudioListener2D as __audiolistener2d__
import py4godot.classes.FastNoiseLite as __fastnoiselite__
import py4godot.classes.EditorResourceConversionPlugin as __editorresourceconversionplugin__
import py4godot.classes.VisualShaderNodeUIntConstant as __visualshadernodeuintconstant__
import py4godot.classes.HBoxContainer as __hboxcontainer__
import py4godot.classes.Geometry2D as __geometry2d__
import py4godot.classes.SkeletonProfile as __skeletonprofile__
import py4godot.classes.OptimizedTranslation as __optimizedtranslation__
import py4godot.classes.ScriptCreateDialog as __scriptcreatedialog__
import py4godot.classes.TileSetAtlasSource as __tilesetatlassource__
import py4godot.classes.QuadMesh as __quadmesh__
import py4godot.classes.TextureCubemapArrayRD as __texturecubemaparrayrd__
import py4godot.classes.SoftBody3D as __softbody3d__
import py4godot.classes.EditorTranslationParserPlugin as __editortranslationparserplugin__
import py4godot.classes.r as __r__
import py4godot.classes.PhysicsMaterial as __physicsmaterial__
import py4godot.classes.VisualShaderNodeVec3Parameter as __visualshadernodevec3parameter__
import py4godot.classes.ResourceImporterTexture as __resourceimportertexture__
import py4godot.classes.BackBufferCopy as __backbuffercopy__
import py4godot.classes.StreamPeerGZIP as __streampeergzip__
import py4godot.classes.InputEventScreenTouch as __inputeventscreentouch__
import py4godot.classes.AudioEffectDelay as __audioeffectdelay__
import py4godot.classes.PhysicsDirectSpaceState2D as __physicsdirectspacestate2d__
import py4godot.classes.Light3D as __light3d__
import py4godot.classes.MissingResource as __missingresource__
import py4godot.classes.Skeleton3D as __skeleton3d__
import py4godot.classes.CodeHighlighter as __codehighlighter__
import py4godot.classes.SkeletonModification2DFABRIK as __skeletonmodification2dfabrik__
import py4godot.classes.PropertyTweener as __propertytweener__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.PanelContainer as __panelcontainer__
import py4godot.classes.XRFaceTracker as __xrfacetracker__
import py4godot.classes.AspectRatioContainer as __aspectratiocontainer__
import py4godot.classes.NavigationMeshSourceGeometryData2D as __navigationmeshsourcegeometrydata2d__
import py4godot.classes.RemoteTransform2D as __remotetransform2d__
import py4godot.classes.VBoxContainer as __vboxcontainer__
import py4godot.classes.InputEventGesture as __inputeventgesture__
import py4godot.classes.ENetPacketPeer as __enetpacketpeer__
import py4godot.classes.RDUniform as __rduniform__
import py4godot.classes.InputEventKey as __inputeventkey__
import py4godot.classes.OpenXRInteractionProfileMetadata as __openxrinteractionprofilemetadata__
import py4godot.classes.EditorSceneFormatImporterGLTF as __editorsceneformatimportergltf__
import py4godot.classes.ResourceImporterOggVorbis as __resourceimporteroggvorbis__
import py4godot.classes.StyleBoxFlat as __styleboxflat__
import py4godot.classes.TextMesh as __textmesh__
import py4godot.classes.VisualShaderNodeDotProduct as __visualshadernodedotproduct__
import py4godot.classes.WebRTCPeerConnection as __webrtcpeerconnection__
import py4godot.classes.EditorVCSInterface as __editorvcsinterface__
import py4godot.classes.VisualShaderNodeCustom as __visualshadernodecustom__
import py4godot.classes.PinJoint2D as __pinjoint2d__
import py4godot.classes.SkeletonModifier3D as __skeletonmodifier3d__
import py4godot.classes.InputEventShortcut as __inputeventshortcut__
import py4godot.classes.OpenXRCompositionLayer as __openxrcompositionlayer__
import py4godot.classes.AudioStreamPlaybackSynchronized as __audiostreamplaybacksynchronized__
import py4godot.classes.HTTPClient as __httpclient__
import py4godot.classes.Input as __input__
import py4godot.classes.AudioEffectInstance as __audioeffectinstance__
import py4godot.classes.ScriptLanguageExtension as __scriptlanguageextension__
import py4godot.classes.EditorResourcePreview as __editorresourcepreview__
import py4godot.classes.GLTFAccessor as __gltfaccessor__
import py4godot.classes.ImageTexture as __imagetexture__
import py4godot.classes.VisualShaderNodeCurveTexture as __visualshadernodecurvetexture__
import py4godot.classes.CompressedTexture2D as __compressedtexture2d__
import py4godot.classes.PhysicsServer3DManager as __physicsserver3dmanager__
import py4godot.classes.CylinderShape3D as __cylindershape3d__
import py4godot.classes.PlaceholderCubemapArray as __placeholdercubemaparray__
import py4godot.classes.CanvasItem as __canvasitem__
import py4godot.classes.NavigationServer2D as __navigationserver2d__
import py4godot.classes.PhysicsShapeQueryParameters3D as __physicsshapequeryparameters3d__
import py4godot.classes.PhysicsPointQueryParameters2D as __physicspointqueryparameters2d__
import py4godot.classes.AudioListener3D as __audiolistener3d__
import py4godot.classes.EditorPlugin as __editorplugin__
import py4godot.classes.OpenXRActionMap as __openxractionmap__
import py4godot.classes.d as __d__
import py4godot.classes.AudioStreamInteractive as __audiostreaminteractive__
import py4godot.classes.Label as __label__
import py4godot.classes.Bone2D as __bone2d__
import py4godot.classes.PhysicsRayQueryParameters2D as __physicsrayqueryparameters2d__
import py4godot.classes.RenderDataRD as __renderdatard__
import py4godot.classes.TextureButton as __texturebutton__
import py4godot.classes.VisualShaderNodeRandomRange as __visualshadernoderandomrange__
import py4godot.classes.UPNP as __upnp__
import py4godot.classes.AnimationNodeAdd2 as __animationnodeadd2__
import py4godot.classes.3 as __3__
import py4godot.classes.GDScript as __gdscript__
import py4godot.classes.VisualShaderNodeBooleanParameter as __visualshadernodebooleanparameter__
import py4godot.classes.EditorResourcePreviewGenerator as __editorresourcepreviewgenerator__
import py4godot.classes.BitMap as __bitmap__
import py4godot.classes.MultiplayerAPIExtension as __multiplayerapiextension__
import py4godot.classes.InputMap as __inputmap__
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.HSplitContainer as __hsplitcontainer__
import py4godot.classes.CapsuleShape2D as __capsuleshape2d__
import py4godot.classes.VisualShaderNodeVectorFunc as __visualshadernodevectorfunc__
import py4godot.classes.UPNPDevice as __upnpdevice__
import py4godot.classes.RenderSceneData as __renderscenedata__
import py4godot.classes.DirectionalLight2D as __directionallight2d__
import py4godot.classes.Compositor as __compositor__
import py4godot.classes.VisualShaderNodeVec4Parameter as __visualshadernodevec4parameter__
import py4godot.classes.c as __c__
import py4godot.classes.ScriptEditorBase as __scripteditorbase__
import py4godot.classes.InputEventMouseButton as __inputeventmousebutton__
import py4godot.classes.RDAttachmentFormat as __rdattachmentformat__
import py4godot.classes.XRHandTracker as __xrhandtracker__
import py4godot.classes.VisualShaderNodeFloatConstant as __visualshadernodefloatconstant__
import py4godot.classes.EditorFeatureProfile as __editorfeatureprofile__
import py4godot.classes.VisualShaderNodeVaryingGetter as __visualshadernodevaryinggetter__
import py4godot.classes.TextParagraph as __textparagraph__
import py4godot.classes.PhysicsServer2DExtension as __physicsserver2dextension__
import py4godot.classes.EditorInterface as __editorinterface__
import py4godot.classes.GDScriptSyntaxHighlighter as __gdscriptsyntaxhighlighter__
import py4godot.classes.CurveXYZTexture as __curvexyztexture__
import py4godot.classes.SpringBoneSimulator3D as __springbonesimulator3d__
import py4godot.classes.AudioEffectHardLimiter as __audioeffecthardlimiter__
import py4godot.classes.SkeletonModificationStack2D as __skeletonmodificationstack2d__
import py4godot.classes.NavigationLink2D as __navigationlink2d__
import py4godot.classes.ViewportTexture as __viewporttexture__
import py4godot.classes.WebRTCPeerConnectionExtension as __webrtcpeerconnectionextension__
import py4godot.classes.AudioSample as __audiosample__
import py4godot.classes.CSGCylinder3D as __csgcylinder3d__
import py4godot.classes.HFlowContainer as __hflowcontainer__
import py4godot.classes.MainLoop as __mainloop__
import py4godot.classes.VideoStreamTheora as __videostreamtheora__
import py4godot.classes.Image as __image__
import py4godot.classes.NavigationPathQueryResult2D as __navigationpathqueryresult2d__
import py4godot.classes.SphereMesh as __spheremesh__
import py4godot.classes.TextLine as __textline__
import py4godot.classes.ImporterMeshInstance3D as __importermeshinstance3d__
import py4godot.classes.Path2D as __path2d__
import py4godot.classes.FontFile as __fontfile__
import py4godot.classes.TextServerDummy as __textserverdummy__
import py4godot.classes.OpenXRCompositionLayerCylinder as __openxrcompositionlayercylinder__
import py4godot.classes.PhysicalSkyMaterial as __physicalskymaterial__
import py4godot.classes.DirAccess as __diraccess__
import py4godot.classes.GridMap as __gridmap__
import py4godot.classes.SkeletonModification2D as __skeletonmodification2d__
import py4godot.classes.MissingNode as __missingnode__
import py4godot.classes.RDPipelineSpecializationConstant as __rdpipelinespecializationconstant__
import py4godot.classes.GPUParticlesAttractorSphere3D as __gpuparticlesattractorsphere3d__
import py4godot.classes.NinePatchRect as __ninepatchrect__
import py4godot.classes.CompressedTexture2DArray as __compressedtexture2darray__
import py4godot.classes.World2D as __world2d__
import py4godot.classes.CPUParticles2D as __cpuparticles2d__
import py4godot.classes.NavigationAgent3D as __navigationagent3d__
import py4godot.classes.AudioStreamGenerator as __audiostreamgenerator__
import py4godot.classes.Theme as __theme__
import py4godot.classes.MeshDataTool as __meshdatatool__
import py4godot.classes.AudioStreamRandomizer as __audiostreamrandomizer__
import py4godot.classes.RegEx as __regex__
import py4godot.classes.VisualShaderNodeBooleanConstant as __visualshadernodebooleanconstant__
import py4godot.classes.VisualShaderNodeRemap as __visualshadernoderemap__
import py4godot.classes.VisualShaderNodeReroute as __visualshadernodereroute__
import py4godot.classes.GLTFLight as __gltflight__
import py4godot.classes.ParticleProcessMaterial as __particleprocessmaterial__
import py4godot.classes.ArrayOccluder3D as __arrayoccluder3d__
import py4godot.classes.AudioEffectPanner as __audioeffectpanner__
import py4godot.classes.RootMotionView as __rootmotionview__
import py4godot.classes.RenderDataExtension as __renderdataextension__
import py4godot.classes.HashingContext as __hashingcontext__
import py4godot.classes.TranslationServer as __translationserver__
import py4godot.classes.ThemeDB as __themedb__
import py4godot.classes.GPUParticlesAttractor3D as __gpuparticlesattractor3d__
import py4godot.classes.OpenXRDpadBindingModifier as __openxrdpadbindingmodifier__
import py4godot.classes.Container as __container__
import py4godot.classes.StatusIndicator as __statusindicator__
import py4godot.classes.EditorSceneFormatImporterFBX2GLTF as __editorsceneformatimporterfbx2gltf__
import py4godot.classes.VisualShaderNodeUIntFunc as __visualshadernodeuintfunc__
import py4godot.classes.SpringBoneCollisionPlane3D as __springbonecollisionplane3d__
import py4godot.classes.Animation as __animation__
import py4godot.classes.EditorSettings as __editorsettings__
import py4godot.classes.StaticBody2D as __staticbody2d__
import py4godot.classes.GPUParticlesAttractorVectorField3D as __gpuparticlesattractorvectorfield3d__
import py4godot.classes.CSGBox3D as __csgbox3d__
import py4godot.classes.CollisionPolygon2D as __collisionpolygon2d__
import py4godot.classes.VisualShaderNodeVectorRefract as __visualshadernodevectorrefract__
import py4godot.classes.StyleBox as __stylebox__
import py4godot.classes.TextureLayeredRD as __texturelayeredrd__
import py4godot.classes.AStar3D as __astar3d__
import py4godot.classes.AnimationNodeTimeSeek as __animationnodetimeseek__
import py4godot.classes.OpenXRInterface as __openxrinterface__
import py4godot.classes.RenderSceneBuffersExtension as __renderscenebuffersextension__
import py4godot.classes.TriangleMesh as __trianglemesh__
import py4godot.classes.AudioStreamWAV as __audiostreamwav__
import py4godot.classes.VisualShaderNodeFloatFunc as __visualshadernodefloatfunc__
import py4godot.classes.PrismMesh as __prismmesh__
import py4godot.classes.Noise as __noise__
import py4godot.classes.TextureRect as __texturerect__
import py4godot.classes.Object as __object__
import py4godot.classes.PhysicsBody2D as __physicsbody2d__
import py4godot.classes.AudioEffectCompressor as __audioeffectcompressor__
import py4godot.classes.HMACContext as __hmaccontext__
import py4godot.classes.Engine as __engine__
import py4godot.classes.SceneMultiplayer as __scenemultiplayer__
import py4godot.classes.ResourceImporterBMFont as __resourceimporterbmfont__
import py4godot.classes.UniformSetCacheRD as __uniformsetcacherd__
import py4godot.classes.CSGCombiner3D as __csgcombiner3d__
import py4godot.classes.SliderJoint3D as __sliderjoint3d__
import py4godot.classes.CapsuleMesh as __capsulemesh__
import py4godot.classes.VisualShaderNodeTransformCompose as __visualshadernodetransformcompose__
import py4godot.classes.SkeletonModification2DTwoBoneIK as __skeletonmodification2dtwoboneik__
import py4godot.classes.RenderSceneDataRD as __renderscenedatard__
import py4godot.classes.Marshalls as __marshalls__
import py4godot.classes.VisualShaderNodeFloatParameter as __visualshadernodefloatparameter__
import py4godot.classes.Geometry3D as __geometry3d__
import py4godot.classes.Performance as __performance__
import py4godot.classes.VisualShaderNodeVectorBase as __visualshadernodevectorbase__
import py4godot.classes.RDShaderFile as __rdshaderfile__
import py4godot.classes.Joint3D as __joint3d__
import py4godot.classes.VisualShaderNodeVarying as __visualshadernodevarying__
import py4godot.classes.MultiplayerPeer as __multiplayerpeer__
import py4godot.classes.WebRTCMultiplayerPeer as __webrtcmultiplayerpeer__
import py4godot.classes.RDShaderSPIRV as __rdshaderspirv__
import py4godot.classes.RDPipelineColorBlendState as __rdpipelinecolorblendstate__
import py4godot.classes.MenuButton as __menubutton__
import py4godot.classes.NavigationPathQueryResult3D as __navigationpathqueryresult3d__
import py4godot.classes.MultiplayerSpawner as __multiplayerspawner__
import py4godot.classes.ZIPPacker as __zippacker__
import py4godot.classes.Polygon2D as __polygon2d__
import py4godot.classes.SphereShape3D as __sphereshape3d__
import py4godot.classes.VisualShaderNodeIf as __visualshadernodeif__
import py4godot.classes.EditorSelection as __editorselection__
import py4godot.classes.ParallaxLayer as __parallaxlayer__
import py4godot.classes.InputEventMouse as __inputeventmouse__
import py4godot.classes.CompressedCubemapArray as __compressedcubemaparray__
import py4godot.classes.AudioStreamPolyphonic as __audiostreampolyphonic__


class FocusMode:
  FOCUS_NONE:int = 0
  FOCUS_CLICK:int = 1
  FOCUS_ALL:int = 2
class CursorShape:
  CURSOR_ARROW:int = 0
  CURSOR_IBEAM:int = 1
  CURSOR_POINTING_HAND:int = 2
  CURSOR_CROSS:int = 3
  CURSOR_WAIT:int = 4
  CURSOR_BUSY:int = 5
  CURSOR_DRAG:int = 6
  CURSOR_CAN_DROP:int = 7
  CURSOR_FORBIDDEN:int = 8
  CURSOR_VSIZE:int = 9
  CURSOR_HSIZE:int = 10
  CURSOR_BDIAGSIZE:int = 11
  CURSOR_FDIAGSIZE:int = 12
  CURSOR_MOVE:int = 13
  CURSOR_VSPLIT:int = 14
  CURSOR_HSPLIT:int = 15
  CURSOR_HELP:int = 16
class LayoutPreset:
  PRESET_TOPERATOR_LEFT:int = 0
  PRESET_TOPERATOR_RIGHT:int = 1
  PRESET_BOTTOM_LEFT:int = 2
  PRESET_BOTTOM_RIGHT:int = 3
  PRESET_CENTER_LEFT:int = 4
  PRESET_CENTER_TOP:int = 5
  PRESET_CENTER_RIGHT:int = 6
  PRESET_CENTER_BOTTOM:int = 7
  PRESET_CENTER:int = 8
  PRESET_LEFT_WIDE:int = 9
  PRESET_TOPERATOR_WIDE:int = 10
  PRESET_RIGHT_WIDE:int = 11
  PRESET_BOTTOM_WIDE:int = 12
  PRESET_VCENTER_WIDE:int = 13
  PRESET_HCENTER_WIDE:int = 14
  PRESET_FULL_RECT:int = 15
class LayoutPresetMode:
  PRESET_MODE_MINSIZE:int = 0
  PRESET_MODE_KEEP_WIDTH:int = 1
  PRESET_MODE_KEEP_HEIGHT:int = 2
  PRESET_MODE_KEEP_SIZE:int = 3
class SizeFlags:
  SIZE_SHRINK_BEGIN:int = 0
  SIZE_FILL:int = 1
  SIZE_EXPAND:int = 2
  SIZE_EXPAND_FILL:int = 3
  SIZE_SHRINK_CENTER:int = 4
  SIZE_SHRINK_END:int = 8
class MouseFilter:
  MOUSE_FILTER_STOP:int = 0
  MOUSE_FILTER_PASS:int = 1
  MOUSE_FILTER_IGNORE:int = 2
class GrowDirection:
  GROW_DIRECTION_BEGIN:int = 0
  GROW_DIRECTION_END:int = 1
  GROW_DIRECTION_BOTH:int = 2
class Anchor:
  ANCHOR_BEGIN:int = 0
  ANCHOR_END:int = 1
class LayoutDirection:
  LAYOUT_DIRECTION_INHERITED:int = 0
  LAYOUT_DIRECTION_APPLICATION_LOCALE:int = 1
  LAYOUT_DIRECTION_LTR:int = 2
  LAYOUT_DIRECTION_RTL:int = 3
  LAYOUT_DIRECTION_SYSTEM_LOCALE:int = 4
  LAYOUT_DIRECTION_MAX:int = 5
  LAYOUT_DIRECTION_LOCALE:int = 1
class TextDirection:
  TEXT_DIRECTION_INHERITED:int = 3
  TEXT_DIRECTION_AUTO:int = 0
  TEXT_DIRECTION_LTR:int = 1
  TEXT_DIRECTION_RTL:int = 2


class Control(__canvasitem__.CanvasItem):
  """
		Base class for all UI-related nodes. `Control` features a bounding rectangle that defines its extents, an anchor position relative to its parent control or the current viewport, and offsets relative to the anchor. The offsets update automatically when the node, any of its parents, or the screen size change.
		For more information on Godot's UI system, anchors, offsets, and containers, see the related tutorials in the manual. To build flexible UIs, you'll need a mix of UI elements that inherit from `Control` and `Container` nodes.
		**Note:** Since both `Node2D` and `Control` inherit from `CanvasItem`, they share several concepts from the class such as the `CanvasItem.z_index` and `CanvasItem.visible` properties.
		**User Interface nodes and input**
		Godot propagates input events via viewports. Each `Viewport` is responsible for propagating `InputEvent`s to their child nodes. As the `SceneTree.root` is a `Window`, this already happens automatically for all UI elements in your game.
		Input events are propagated through the `SceneTree` from the root node to all child nodes by calling `Node._input`. For UI elements specifically, it makes more sense to override the virtual method `_gui_input`, which filters out unrelated input events, such as by checking z-order, `mouse_filter`, focus, or if the event was inside of the control's bounding box.
		Call `accept_event` so no other node receives the event. Once you accept an input, it becomes handled so `Node._unhandled_input` will not process it.
		Only one `Control` node can be in focus. Only the node in focus will receive events. To get the focus, call `grab_focus`. `Control` nodes lose focus when another node grabs it, or if you hide the node in focus.
		Sets `mouse_filter` to `constant MOUSE_FILTER_IGNORE` to tell a `Control` node to ignore mouse or touch events. You'll need it if you place an icon on top of a button.
		`Theme` resources change the control's appearance. The `theme` of a `Control` node affects all of its direct and indirect children (as long as a chain of controls is uninterrupted). To override some of the theme items, call one of the `add_theme_*_override` methods, like `add_theme_font_override`. You can also override theme items in the Inspector.
		**Note:** Theme items are _not_ `Object` properties. This means you can't access their values using `Object.get` and `Object.set`. Instead, use the `get_theme_*` and `add_theme_*_override` methods provided by this class.
	"""
  resized: BuiltinSignal
  gui_input: BuiltinSignal
  mouse_entered: BuiltinSignal
  mouse_exited: BuiltinSignal
  focus_entered: BuiltinSignal
  focus_exited: BuiltinSignal
  size_flags_changed: BuiltinSignal
  minimum_size_changed: BuiltinSignal
  theme_changed: BuiltinSignal

  @staticmethod
  def constructor()->Control:pass



  @staticmethod
  def cast(other:__object__.Object)->Control:pass


  @property
  def clip_contents(self)->bool:
    """"""
    pass
  @clip_contents.setter
  def clip_contents(self,  value:bool)->None:
    """"""
    pass
  @property
  def custom_minimum_size(self)->__core__.Vector2:
    """"""
    pass
  @custom_minimum_size.setter
  def custom_minimum_size(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def layout_direction(self)->int:
    """"""
    pass
  @layout_direction.setter
  def layout_direction(self,  value:int)->None:
    """"""
    pass
  @property
  def layout_mode(self)->int:
    """"""
    pass
  @layout_mode.setter
  def layout_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def anchors_preset(self)->int:
    """"""
    pass
  @anchors_preset.setter
  def anchors_preset(self,  value:int)->None:
    """"""
    pass
  @property
  def anchor_left(self)->float:
    """"""
    pass
  @anchor_left.setter
  def anchor_left(self,  value:float)->None:
    """"""
    pass
  @property
  def anchor_top(self)->float:
    """"""
    pass
  @anchor_top.setter
  def anchor_top(self,  value:float)->None:
    """"""
    pass
  @property
  def anchor_right(self)->float:
    """"""
    pass
  @anchor_right.setter
  def anchor_right(self,  value:float)->None:
    """"""
    pass
  @property
  def anchor_bottom(self)->float:
    """"""
    pass
  @anchor_bottom.setter
  def anchor_bottom(self,  value:float)->None:
    """"""
    pass
  @property
  def offset_left(self)->float:
    """"""
    pass
  @offset_left.setter
  def offset_left(self,  value:float)->None:
    """"""
    pass
  @property
  def offset_top(self)->float:
    """"""
    pass
  @offset_top.setter
  def offset_top(self,  value:float)->None:
    """"""
    pass
  @property
  def offset_right(self)->float:
    """"""
    pass
  @offset_right.setter
  def offset_right(self,  value:float)->None:
    """"""
    pass
  @property
  def offset_bottom(self)->float:
    """"""
    pass
  @offset_bottom.setter
  def offset_bottom(self,  value:float)->None:
    """"""
    pass
  @property
  def grow_horizontal(self)->int:
    """"""
    pass
  @grow_horizontal.setter
  def grow_horizontal(self,  value:int)->None:
    """"""
    pass
  @property
  def grow_vertical(self)->int:
    """"""
    pass
  @grow_vertical.setter
  def grow_vertical(self,  value:int)->None:
    """"""
    pass
  @property
  def size(self)->__core__.Vector2:
    """"""
    pass
  @size.setter
  def size(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def position(self)->__core__.Vector2:
    """"""
    pass
  @position.setter
  def position(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def global_position(self)->__core__.Vector2:
    """"""
    pass
  @global_position.setter
  def global_position(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def rotation(self)->float:
    """"""
    pass
  @rotation.setter
  def rotation(self,  value:float)->None:
    """"""
    pass
  @property
  def rotation_degrees(self)->float:
    """"""
    pass
  @rotation_degrees.setter
  def rotation_degrees(self,  value:float)->None:
    """"""
    pass
  @property
  def scale(self)->__core__.Vector2:
    """"""
    pass
  @scale.setter
  def scale(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def pivot_offset(self)->__core__.Vector2:
    """"""
    pass
  @pivot_offset.setter
  def pivot_offset(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def size_flags_horizontal(self)->int:
    """"""
    pass
  @size_flags_horizontal.setter
  def size_flags_horizontal(self,  value:int)->None:
    """"""
    pass
  @property
  def size_flags_vertical(self)->int:
    """"""
    pass
  @size_flags_vertical.setter
  def size_flags_vertical(self,  value:int)->None:
    """"""
    pass
  @property
  def size_flags_stretch_ratio(self)->float:
    """"""
    pass
  @size_flags_stretch_ratio.setter
  def size_flags_stretch_ratio(self,  value:float)->None:
    """"""
    pass
  @property
  def localize_numeral_system(self)->bool:
    """"""
    pass
  @localize_numeral_system.setter
  def localize_numeral_system(self,  value:bool)->None:
    """"""
    pass
  @property
  def auto_translate(self)->bool:
    """"""
    pass
  @auto_translate.setter
  def auto_translate(self,  value:bool)->None:
    """"""
    pass
  @property
  def tooltip_text(self)->str:
    """"""
    pass
  @tooltip_text.setter
  def tooltip_text(self,  value:str)->None:
    """"""
    pass
  @property
  def tooltip_auto_translate_mode(self)->int:
    """"""
    pass
  @tooltip_auto_translate_mode.setter
  def tooltip_auto_translate_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def focus_neighbor_left(self)->__core__.NodePath:
    """"""
    pass
  @focus_neighbor_left.setter
  def focus_neighbor_left(self,  value:__core__.NodePath)->None:
    """"""
    pass
  @property
  def focus_neighbor_top(self)->__core__.NodePath:
    """"""
    pass
  @focus_neighbor_top.setter
  def focus_neighbor_top(self,  value:__core__.NodePath)->None:
    """"""
    pass
  @property
  def focus_neighbor_right(self)->__core__.NodePath:
    """"""
    pass
  @focus_neighbor_right.setter
  def focus_neighbor_right(self,  value:__core__.NodePath)->None:
    """"""
    pass
  @property
  def focus_neighbor_bottom(self)->__core__.NodePath:
    """"""
    pass
  @focus_neighbor_bottom.setter
  def focus_neighbor_bottom(self,  value:__core__.NodePath)->None:
    """"""
    pass
  @property
  def focus_next(self)->__core__.NodePath:
    """"""
    pass
  @focus_next.setter
  def focus_next(self,  value:__core__.NodePath)->None:
    """"""
    pass
  @property
  def focus_previous(self)->__core__.NodePath:
    """"""
    pass
  @focus_previous.setter
  def focus_previous(self,  value:__core__.NodePath)->None:
    """"""
    pass
  @property
  def focus_mode(self)->int:
    """"""
    pass
  @focus_mode.setter
  def focus_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def mouse_filter(self)->int:
    """"""
    pass
  @mouse_filter.setter
  def mouse_filter(self,  value:int)->None:
    """"""
    pass
  @property
  def mouse_force_pass_scroll_events(self)->bool:
    """"""
    pass
  @mouse_force_pass_scroll_events.setter
  def mouse_force_pass_scroll_events(self,  value:bool)->None:
    """"""
    pass
  @property
  def mouse_default_cursor_shape(self)->int:
    """"""
    pass
  @mouse_default_cursor_shape.setter
  def mouse_default_cursor_shape(self,  value:int)->None:
    """"""
    pass
  @property
  def shortcut_context(self)->__audiostreamplayer2d__.AudioStreamPlayer2D|__visualshadernodedeterminant__.VisualShaderNodeDeterminant|__audiostreamgeneratorplayback__.AudioStreamGeneratorPlayback|__physicsdirectbodystate2dextension__.PhysicsDirectBodyState2DExtension|__navigationserver3d__.NavigationServer3D|__xrbodymodifier3d__.XRBodyModifier3D|__vsplitcontainer__.VSplitContainer|__surfacetool__.SurfaceTool|__visualshadernodeparticleemitter__.VisualShaderNodeParticleEmitter|__textserver__.TextServer|__lightmapgidata__.LightmapGIData|__placeholdermesh__.PlaceholderMesh|__visibleonscreennotifier3d__.VisibleOnScreenNotifier3D|__generic6dofjoint3d__.Generic6DOFJoint3D|__audioeffectamplify__.AudioEffectAmplify|__conetwistjoint3d__.ConeTwistJoint3D|__visualshadernodetransformvecmult__.VisualShaderNodeTransformVecMult|__graphframe__.GraphFrame|__animatablebody3d__.AnimatableBody3D|__camera2d__.Camera2D|__multiplayersynchronizer__.MultiplayerSynchronizer|__inputeventjoypadmotion__.InputEventJoypadMotion|__margincontainer__.MarginContainer|__resourcepreloader__.ResourcePreloader|__imageformatloaderextension__.ImageFormatLoaderExtension|__gpuparticlescollision3d__.GPUParticlesCollision3D|__animationnodeblendspace1d__.AnimationNodeBlendSpace1D|__visualshadernodetexturesdf__.VisualShaderNodeTextureSDF|__tileset__.TileSet|__occluderpolygon2d__.OccluderPolygon2D|__dtlsserver__.DTLSServer|__packeddatacontainer__.PackedDataContainer|__lineedit__.LineEdit|__xrhandmodifier3d__.XRHandModifier3D|__gpuparticles3d__.GPUParticles3D|__richtextlabel__.RichTextLabel|__openxrvisibilitymask__.OpenXRVisibilityMask|__editorexportplatformwindows__.EditorExportPlatformWindows|__streampeer__.StreamPeer|__websocketpeer__.WebSocketPeer|__slider__.Slider|__noisetexture3d__.NoiseTexture3D|__animationnodeblend2__.AnimationNodeBlend2|__primitivemesh__.PrimitiveMesh|__richtexteffect__.RichTextEffect|__visualshadernodetransformop__.VisualShaderNodeTransformOp|__popupmenu__.PopupMenu|__packetpeerextension__.PacketPeerExtension|__parallaxbackground__.ParallaxBackground|__visualshadernodeinput__.VisualShaderNodeInput|__planemesh__.PlaneMesh|__gltfobjectmodelproperty__.GLTFObjectModelProperty|__physicalbonesimulator3d__.PhysicalBoneSimulator3D|__skeletonmodification2dphysicalbones__.SkeletonModification2DPhysicalBones|__thread__.Thread|__visualshadernodelinearscenedepth__.VisualShaderNodeLinearSceneDepth|__collisionshape2d__.CollisionShape2D|__sprite2d__.Sprite2D|__confirmationdialog__.ConfirmationDialog|__ormmaterial3d__.ORMMaterial3D|__pointmesh__.PointMesh|__scenetree__.SceneTree|__graphedit__.GraphEdit|__rdtextureview__.RDTextureView|__editorspinslider__.EditorSpinSlider|__pathfollow3d__.PathFollow3D|__physicsdirectspacestate2dextension__.PhysicsDirectSpaceState2DExtension|__resourceformatsaver__.ResourceFormatSaver|__multiplayerpeerextension__.MultiplayerPeerExtension|__visualshadernodeframe__.VisualShaderNodeFrame|__visualshadernodeswitch__.VisualShaderNodeSwitch|__checkbox__.CheckBox|__separator__.Separator|__visualshadernodeparticleaccelerator__.VisualShaderNodeParticleAccelerator|__rdpipelinemultisamplestate__.RDPipelineMultisampleState|__packeddatacontainerref__.PackedDataContainerRef|__joint2d__.Joint2D|__physicsdirectbodystate2d__.PhysicsDirectBodyState2D|__visualshadernodevec4constant__.VisualShaderNodeVec4Constant|__skinreference__.SkinReference|__checkbutton__.CheckButton|__visualshadernodeis__.VisualShaderNodeIs|__visualshadernodeintfunc__.VisualShaderNodeIntFunc|__visualshadernodecurvexyztexture__.VisualShaderNodeCurveXYZTexture|__navigationmeshgenerator__.NavigationMeshGenerator|__gridcontainer__.GridContainer|__texture__.Texture|__rdsamplerstate__.RDSamplerState|__lightmapper__.Lightmapper|__editornode3dgizmoplugin__.EditorNode3DGizmoPlugin|__gltfspecgloss__.GLTFSpecGloss|__visualshadernodecubemapparameter__.VisualShaderNodeCubemapParameter|__xrpositionaltracker__.XRPositionalTracker|__javascriptbridge__.JavaScriptBridge|__openxrapiextension__.OpenXRAPIExtension|__visualshadernodetransformdecompose__.VisualShaderNodeTransformDecompose|__atlastexture__.AtlasTexture|__gltfnode__.GLTFNode|__resourceimporterimage__.ResourceImporterImage|__collisionobject3d__.CollisionObject3D|__animatedsprite2d__.AnimatedSprite2D|__cryptokey__.CryptoKey|__mutex__.Mutex|__path3d__.Path3D|__resourceformatloader__.ResourceFormatLoader|__navigationpathqueryparameters2d__.NavigationPathQueryParameters2D|__lightoccluder2d__.LightOccluder2D|__filesystemdock__.FileSystemDock|__visualshadernodedistancefade__.VisualShaderNodeDistanceFade|__basebutton__.BaseButton|__visualshadernodebillboard__.VisualShaderNodeBillboard|__animationnodetimescale__.AnimationNodeTimeScale|__xranchor3d__.XRAnchor3D|__xrtracker__.XRTracker|__cameratexture__.CameraTexture|__linkbutton__.LinkButton|__tilesetsource__.TileSetSource|__visualshadernodederivativefunc__.VisualShaderNodeDerivativeFunc|__shape2d__.Shape2D|__visualshadernodegroupbase__.VisualShaderNodeGroupBase|__camerafeed__.CameraFeed|__csgpolygon3d__.CSGPolygon3D|__openxrbindingmodifier__.OpenXRBindingModifier|__spriteframes__.SpriteFrames|__resourceimporterbitmap__.ResourceImporterBitMap|__visualshadernodetexturesdfnormal__.VisualShaderNodeTextureSDFNormal|__visualshadernodetextureparameter__.VisualShaderNodeTextureParameter|__enginedebugger__.EngineDebugger|__mesh__.Mesh|__boxoccluder3d__.BoxOccluder3D|__ip__.IP|__editorexportplatformios__.EditorExportPlatformIOS|__renderscenedataextension__.RenderSceneDataExtension|__renderingserver__.RenderingServer|__fontvariation__.FontVariation|__arraymesh__.ArrayMesh|__gltfskin__.GLTFSkin|__skeletonmodification2dstackholder__.SkeletonModification2DStackHolder|__audiostreamplaybackinteractive__.AudioStreamPlaybackInteractive|__visualshadernodeparticlemultiplybyaxisangle__.VisualShaderNodeParticleMultiplyByAxisAngle|__visualshadernodeparameter__.VisualShaderNodeParameter|__audioeffectphaser__.AudioEffectPhaser|__panoramaskymaterial__.PanoramaSkyMaterial|__visualshadernoderotationbyaxis__.VisualShaderNodeRotationByAxis|__tabcontainer__.TabContainer|__visualshadernodecolorop__.VisualShaderNodeColorOp|__audioeffecthighpassfilter__.AudioEffectHighPassFilter|__visualshadernodeintop__.VisualShaderNodeIntOp|__navigationregion3d__.NavigationRegion3D|__visualshadernodeparticlerandomness__.VisualShaderNodeParticleRandomness|__mobilevrinterface__.MobileVRInterface|__animationplayer__.AnimationPlayer|__separationrayshape2d__.SeparationRayShape2D|__collisionshape3d__.CollisionShape3D|__visualshadernodevectorlen__.VisualShaderNodeVectorLen|__charfxtransform__.CharFXTransform|__gpuparticlescollisionsdf3d__.GPUParticlesCollisionSDF3D|__visualshadernode__.VisualShaderNode|__xrcamera3d__.XRCamera3D|__animationnodetransition__.AnimationNodeTransition|__physicsdirectspacestate3dextension__.PhysicsDirectSpaceState3DExtension|__shaderincludedb__.ShaderIncludeDB|__canvaslayer__.CanvasLayer|__scenereplicationconfig__.SceneReplicationConfig|__visualshadernodecolorparameter__.VisualShaderNodeColorParameter|__openxrhapticvibration__.OpenXRHapticVibration|__editorsceneformatimporter__.EditorSceneFormatImporter|__shape3d__.Shape3D|__textserveradvanced__.TextServerAdvanced|__packetpeerstream__.PacketPeerStream|__inputeventaction__.InputEventAction|__kinematiccollision3d__.KinematicCollision3D|__tlsoptions__.TLSOptions|__placeholdertexturelayered__.PlaceholderTextureLayered|__torusmesh__.TorusMesh|__resourceimportertextureatlas__.ResourceImporterTextureAtlas|__physicalbone2d__.PhysicalBone2D|__separationrayshape3d__.SeparationRayShape3D|__lightmapprobe__.LightmapProbe|__vflowcontainer__.VFlowContainer|__visualshadernodemix__.VisualShaderNodeMix|__noisetexture2d__.NoiseTexture2D|__visualshadernodesmoothstep__.VisualShaderNodeSmoothStep|__fbxdocument__.FBXDocument|__editorexportplatformpc__.EditorExportPlatformPC|__animationnodeadd3__.AnimationNodeAdd3|__node__.Node|__renderscenebuffersconfiguration__.RenderSceneBuffersConfiguration|__filedialog__.FileDialog|__openxrcompositionlayerequirect__.OpenXRCompositionLayerEquirect|__characterbody3d__.CharacterBody3D|__visualshadernodeparticleemit__.VisualShaderNodeParticleEmit|__proceduralskymaterial__.ProceduralSkyMaterial|__os__.OS|__visualshadernodetexture2darrayparameter__.VisualShaderNodeTexture2DArrayParameter|__window__.Window|__videostreamplayback__.VideoStreamPlayback|__visualshadernodeparticleconevelocity__.VisualShaderNodeParticleConeVelocity|__editorimportplugin__.EditorImportPlugin|__styleboxempty__.StyleBoxEmpty|__editorscenepostimportplugin__.EditorScenePostImportPlugin|__decal__.Decal|__openxranalogthresholdmodifier__.OpenXRAnalogThresholdModifier|__cameraserver__.CameraServer|__navigationmesh__.NavigationMesh|__boxshape3d__.BoxShape3D|__gltfmesh__.GLTFMesh|__visualshadernodetexture__.VisualShaderNodeTexture|__spinbox__.SpinBox|__rdframebufferpass__.RDFramebufferPass|__resource__.Resource|__referencerect__.ReferenceRect|__world3d__.World3D|__gdextensionmanager__.GDExtensionManager|__scripteditor__.ScriptEditor|__colorpalette__.ColorPalette|__framebuffercacherd__.FramebufferCacheRD|__rdpipelinedepthstencilstate__.RDPipelineDepthStencilState|__cylindermesh__.CylinderMesh|__canvasitemmaterial__.CanvasItemMaterial|__voxelgi__.VoxelGI|__cubemap__.Cubemap|__tilemappattern__.TileMapPattern|__visualshadernodetexture3dparameter__.VisualShaderNodeTexture3DParameter|__visualshadernodecubemap__.VisualShaderNodeCubemap|__meshinstance3d__.MeshInstance3D|__canvasgroup__.CanvasGroup|__treeitem__.TreeItem|__audiosampleplayback__.AudioSamplePlayback|__visibleonscreennotifier2d__.VisibleOnScreenNotifier2D|__gltfcamera__.GLTFCamera|__editorpaths__.EditorPaths|__remotetransform3d__.RemoteTransform3D|__texture2darrayrd__.Texture2DArrayRD|__webxrinterface__.WebXRInterface|__openxrinteractionprofile__.OpenXRInteractionProfile|__navigationmeshsourcegeometrydata3d__.NavigationMeshSourceGeometryData3D|__navigationagent2d__.NavigationAgent2D|__xrorigin3d__.XROrigin3D|__voxelgidata__.VoxelGIData|__xrinterfaceextension__.XRInterfaceExtension|__visualshadernodetransformparameter__.VisualShaderNodeTransformParameter|__imageformatloader__.ImageFormatLoader|__streampeertcp__.StreamPeerTCP|__visualshadernodetransformconstant__.VisualShaderNodeTransformConstant|__editorscenepostimport__.EditorScenePostImport|__animationtree__.AnimationTree|__animationnodestatemachinetransition__.AnimationNodeStateMachineTransition|__portablecompressedtexture2d__.PortableCompressedTexture2D|__openxripbindingmodifier__.OpenXRIPBindingModifier|__resourceimportercsvtranslation__.ResourceImporterCSVTranslation|__openxrbindingmodifiereditor__.OpenXRBindingModifierEditor|__gltfanimation__.GLTFAnimation|__meshtexture__.MeshTexture|__xrpose__.XRPose|__openxractionset__.OpenXRActionSet|__compressedtexturelayered__.CompressedTextureLayered|__visualshadernodetexture3d__.VisualShaderNodeTexture3D|__visualshadernoderesizablebase__.VisualShaderNodeResizableBase|__rdvertexattribute__.RDVertexAttribute|__pathfollow2d__.PathFollow2D|__raycast2d__.RayCast2D|__marker3d__.Marker3D|__hseparator__.HSeparator|__audioeffectstereoenhance__.AudioEffectStereoEnhance|__csgsphere3d__.CSGSphere3D|__javascriptobject__.JavaScriptObject|__animationnodeblendspace2d__.AnimationNodeBlendSpace2D|__tree__.Tree|__oggpacketsequenceplayback__.OggPacketSequencePlayback|__worldboundaryshape3d__.WorldBoundaryShape3D|__visualshadernodevectordistance__.VisualShaderNodeVectorDistance|__shapecast3d__.ShapeCast3D|__resourceimporterwav__.ResourceImporterWAV|__tiledata__.TileData|__audioeffectbandpassfilter__.AudioEffectBandPassFilter|__visualshadernodetexture2dparameter__.VisualShaderNodeTexture2DParameter|__visualinstance3d__.VisualInstance3D|__audioeffectnotchfilter__.AudioEffectNotchFilter|__cameraattributesphysical__.CameraAttributesPhysical|__groovejoint2d__.GrooveJoint2D|__audioeffectchorus__.AudioEffectChorus|__texture3drd__.Texture3DRD|__renderdata__.RenderData|__animatablebody2d__.AnimatableBody2D|__editorfilesystemimportformatsupportquery__.EditorFileSystemImportFormatSupportQuery|__javaclass__.JavaClass|__randomnumbergenerator__.RandomNumberGenerator|__visualshadernodevectorop__.VisualShaderNodeVectorOp|__acceptdialog__.AcceptDialog|__placeholdertexture3d__.PlaceholderTexture3D|__syntaxhighlighter__.SyntaxHighlighter|__packedscene__.PackedScene|__audiostreamplaylist__.AudioStreamPlaylist|__shader__.Shader|__textservermanager__.TextServerManager|__sphereoccluder3d__.SphereOccluder3D|__jnisingleton__.JNISingleton|__json__.JSON|__audiostreamplayer3d__.AudioStreamPlayer3D|__webrtcdatachannelextension__.WebRTCDataChannelExtension|__styleboxtexture__.StyleBoxTexture|__editorfiledialog__.EditorFileDialog|__editorresourcetooltipplugin__.EditorResourceTooltipPlugin|__audioeffectrecord__.AudioEffectRecord|__editorexportplatformextension__.EditorExportPlatformExtension|__audiostreamplayer__.AudioStreamPlayer|__tilemaplayer__.TileMapLayer|__sky__.Sky|__physicsdirectspacestate3d__.PhysicsDirectSpaceState3D|__physicsserver3dextension__.PhysicsServer3DExtension|__curve__.Curve|__editorexportplatform__.EditorExportPlatform|__tweener__.Tweener|__occluderinstance3d__.OccluderInstance3D|__resourceloader__.ResourceLoader|__visualshadernodeworldpositionfromdepth__.VisualShaderNodeWorldPositionFromDepth|__multimesh__.MultiMesh|__splitcontainer__.SplitContainer|__visualshadernodeintparameter__.VisualShaderNodeIntParameter|__environment__.Environment|__visualshadernodefaceforward__.VisualShaderNodeFaceForward|__xrvrs__.XRVRS|__visualshader__.VisualShader|__lightmapgi__.LightmapGI|__audioserver__.AudioServer|__videostreamplayer__.VideoStreamPlayer|__texture3d__.Texture3D|__physicsbody3d__.PhysicsBody3D|__multimeshinstance2d__.MultiMeshInstance2D|__sprite3d__.Sprite3D|__semaphore__.Semaphore|__resourceuid__.ResourceUID|__visualshadernodefloatop__.VisualShaderNodeFloatOp|__heightmapshape3d__.HeightMapShape3D|__visualshadernodeconstant__.VisualShaderNodeConstant|__rectangleshape2d__.RectangleShape2D|__xrcontroller3d__.XRController3D|__animatedsprite3d__.AnimatedSprite3D|__compressedcubemap__.CompressedCubemap|__workerthreadpool__.WorkerThreadPool|__texture2drd__.Texture2DRD|__time__.Time|__visualshadernodeexpression__.VisualShaderNodeExpression|__openxrhapticbase__.OpenXRHapticBase|__visualshadernodeparticleringemitter__.VisualShaderNodeParticleRingEmitter|__visibleonscreenenabler3d__.VisibleOnScreenEnabler3D|__openxrcompositionlayerquad__.OpenXRCompositionLayerQuad|__gltfbufferview__.GLTFBufferView|__astargrid2d__.AStarGrid2D|__physicstestmotionresult3d__.PhysicsTestMotionResult3D|__tilesetscenescollectionsource__.TileSetScenesCollectionSource|__audioeffectdistortion__.AudioEffectDistortion|__menubar__.MenuBar|__collisionpolygon3d__.CollisionPolygon3D|__editordebuggerplugin__.EditorDebuggerPlugin|__area3d__.Area3D|__subtweentweener__.SubtweenTweener|__label3d__.Label3D|__translation__.Translation|__visualshadernodecompare__.VisualShaderNodeCompare|__polygonoccluder3d__.PolygonOccluder3D|__meshlibrary__.MeshLibrary|__cameraattributespractical__.CameraAttributesPractical|__editordebuggersession__.EditorDebuggerSession|__rdpipelinerasterizationstate__.RDPipelineRasterizationState|__gltfstate__.GLTFState|__skin__.Skin|__visualshadernodesdftoscreenuv__.VisualShaderNodeSDFToScreenUV|__xrinterface__.XRInterface|__progressbar__.ProgressBar|__refcounted__.RefCounted|__resourceimporterdynamicfont__.ResourceImporterDynamicFont|__textedit__.TextEdit|__methodtweener__.MethodTweener|__directionallight3d__.DirectionalLight3D|__editorexportplatformweb__.EditorExportPlatformWeb|__enetmultiplayerpeer__.ENetMultiplayerPeer|__classdb__.ClassDB|__physicstestmotionresult2d__.PhysicsTestMotionResult2D|__inputeventfromwindow__.InputEventFromWindow|__audioeffectlowpassfilter__.AudioEffectLowPassFilter|__visualshadernodeparticleboxemitter__.VisualShaderNodeParticleBoxEmitter|__csgprimitive3d__.CSGPrimitive3D|__curve3d__.Curve3D|__scriptlanguage__.ScriptLanguage|__callbacktweener__.CallbackTweener|__occluder3d__.Occluder3D|__colorpickerbutton__.ColorPickerButton|__rigidbody3d__.RigidBody3D|__jsonrpc__.JSONRPC|__visualshadernodecolorfunc__.VisualShaderNodeColorFunc|__animationnodeoutput__.AnimationNodeOutput|__capsuleshape3d__.CapsuleShape3D|__vehiclebody3d__.VehicleBody3D|__codeedit__.CodeEdit|__rdtextureformat__.RDTextureFormat|__tween__.Tween|__fogmaterial__.FogMaterial|__cpuparticles3d__.CPUParticles3D|__javaobject__.JavaObject|__projectsettings__.ProjectSettings|__audioeffecteq21__.AudioEffectEQ21|__udpserver__.UDPServer|__editorinspectorplugin__.EditorInspectorPlugin|__gltfdocument__.GLTFDocument|__marker2d__.Marker2D|__audiostreamplaybackresampled__.AudioStreamPlaybackResampled|__visualshadernodeoutput__.VisualShaderNodeOutput|__colorrect__.ColorRect|__xrnode3d__.XRNode3D|__streampeertls__.StreamPeerTLS|__xrcontrollertracker__.XRControllerTracker|__aescontext__.AESContext|__editorscript__.EditorScript|__ribbontrailmesh__.RibbonTrailMesh|__engineprofiler__.EngineProfiler|__fogvolume__.FogVolume|__intervaltweener__.IntervalTweener|__concavepolygonshape2d__.ConcavePolygonShape2D|__vseparator__.VSeparator|__compositoreffect__.CompositorEffect|__animationnodestatemachine__.AnimationNodeStateMachine|__line2d__.Line2D|__skeletonik3d__.SkeletonIK3D|__centercontainer__.CenterContainer|__scenestate__.SceneState|__scenetreetimer__.SceneTreeTimer|__editorproperty__.EditorProperty|__resourceimporterlayeredtexture__.ResourceImporterLayeredTexture|__resourceimporterimagefont__.ResourceImporterImageFont|__geometryinstance3d__.GeometryInstance3D|__audioeffectlowshelffilter__.AudioEffectLowShelfFilter|__gltfphysicsbody__.GLTFPhysicsBody|__animationlibrary__.AnimationLibrary|__visualshadernodeparticlemeshemitter__.VisualShaderNodeParticleMeshEmitter|__offlinemultiplayerpeer__.OfflineMultiplayerPeer|__placeholdertexture2darray__.PlaceholderTexture2DArray|__immediatemesh__.ImmediateMesh|__visualshadernodeparticlesphereemitter__.VisualShaderNodeParticleSphereEmitter|__visualshadernodeglobalexpression__.VisualShaderNodeGlobalExpression|__worldenvironment__.WorldEnvironment|__physicsdirectbodystate3d__.PhysicsDirectBodyState3D|__viewport__.Viewport|__openxrinteractionprofileeditorbase__.OpenXRInteractionProfileEditorBase|__editorscriptpicker__.EditorScriptPicker|__touchscreenbutton__.TouchScreenButton|__fileaccess__.FileAccess|__navigationpolygon__.NavigationPolygon|__material__.Material|__skeletonmodification2dccdik__.SkeletonModification2DCCDIK|__circleshape2d__.CircleShape2D|__navigationregion2d__.NavigationRegion2D|__inputeventmouse__.InputEventMouse|__gltftexture__.GLTFTexture|__visualshadernodeclamp__.VisualShaderNodeClamp|__audiobuslayout__.AudioBusLayout|__cameraattributes__.CameraAttributes|__shaderinclude__.ShaderInclude|__tubetrailmesh__.TubeTrailMesh|__openxraction__.OpenXRAction|__hslider__.HSlider|__externaltexture__.ExternalTexture|__visualshadernodeuvpolarcoord__.VisualShaderNodeUVPolarCoord|__visualshadernodeuvfunc__.VisualShaderNodeUVFunc|__optionbutton__.OptionButton|__editorsceneformatimporterblend__.EditorSceneFormatImporterBlend|__kinematiccollision2d__.KinematicCollision2D|__animationnodesync__.AnimationNodeSync|__resourcesaver__.ResourceSaver|__visualshadernodevaryingsetter__.VisualShaderNodeVaryingSetter|__physicsserver3drenderingserverhandler__.PhysicsServer3DRenderingServerHandler|__importermesh__.ImporterMesh|__streampeerextension__.StreamPeerExtension|__displayserver__.DisplayServer|__visualshadernodeouterproduct__.VisualShaderNodeOuterProduct|__graphelement__.GraphElement|__navigationobstacle3d__.NavigationObstacle3D|__editorexportplatformlinuxbsd__.EditorExportPlatformLinuxBSD|__translationdomain__.TranslationDomain|__audioeffect__.AudioEffect|__gpuparticlescollisionsphere3d__.GPUParticlesCollisionSphere3D|__audioeffectreverb__.AudioEffectReverb|__audioeffectcapture__.AudioEffectCapture|__audiostreamplaybackoggvorbis__.AudioStreamPlaybackOggVorbis|__csgtorus3d__.CSGTorus3D|__visualshadernodestep__.VisualShaderNodeStep|__audiolistener2d__.AudioListener2D|__fastnoiselite__.FastNoiseLite|__audioeffectspectrumanalyzer__.AudioEffectSpectrumAnalyzer|__gradienttexture2d__.GradientTexture2D|__editorresourceconversionplugin__.EditorResourceConversionPlugin|__visualshadernodeuintconstant__.VisualShaderNodeUIntConstant|__lightmapperrd__.LightmapperRD|__hboxcontainer__.HBoxContainer|__geometry2d__.Geometry2D|__skeletonprofile__.SkeletonProfile|__optimizedtranslation__.OptimizedTranslation|__placeholdercubemap__.PlaceholderCubemap|__scriptcreatedialog__.ScriptCreateDialog|__tilesetatlassource__.TileSetAtlasSource|__node3dgizmo__.Node3DGizmo|__audioeffecthighshelffilter__.AudioEffectHighShelfFilter|__softbody3d__.SoftBody3D|__quadmesh__.QuadMesh|__animationnodeblendtree__.AnimationNodeBlendTree|__script__.Script|__control__.Control|__texturecubemaparrayrd__.TextureCubemapArrayRD|__editortranslationparserplugin__.EditorTranslationParserPlugin|__physicsmaterial__.PhysicsMaterial|__animationnodesub2__.AnimationNodeSub2|__placeholdertexture2d__.PlaceholderTexture2D|__backbuffercopy__.BackBufferCopy|__audiostreammp3__.AudioStreamMP3|__visualshadernodevec3parameter__.VisualShaderNodeVec3Parameter|__resourceimportertexture__.ResourceImporterTexture|__inputeventscreentouch__.InputEventScreenTouch|__streampeergzip__.StreamPeerGZIP|__convexpolygonshape3d__.ConvexPolygonShape3D|__visualshadernodetextureparametertriplanar__.VisualShaderNodeTextureParameterTriplanar|__audioeffectdelay__.AudioEffectDelay|__spotlight3d__.SpotLight3D|__physicsdirectspacestate2d__.PhysicsDirectSpaceState2D|__light3d__.Light3D|__worldboundaryshape2d__.WorldBoundaryShape2D|__skeletonmodification2djiggle__.SkeletonModification2DJiggle|__missingresource__.MissingResource|__skeletonprofilehumanoid__.SkeletonProfileHumanoid|__skeleton3d__.Skeleton3D|__audiostreamplayback__.AudioStreamPlayback|__shadermaterial__.ShaderMaterial|__codehighlighter__.CodeHighlighter|__animationmixer__.AnimationMixer|__visualshadernodevec3constant__.VisualShaderNodeVec3Constant|__skeletonmodification2dfabrik__.SkeletonModification2DFABRIK|__propertytweener__.PropertyTweener|__pointlight2d__.PointLight2D|__polygonpathfinder__.PolygonPathFinder|__texture2d__.Texture2D|__panelcontainer__.PanelContainer|__xrfacetracker__.XRFaceTracker|__aspectratiocontainer__.AspectRatioContainer|__visualshadernodefresnel__.VisualShaderNodeFresnel|__navigationmeshsourcegeometrydata2d__.NavigationMeshSourceGeometryData2D|__boxmesh__.BoxMesh|__remotetransform2d__.RemoteTransform2D|__vboxcontainer__.VBoxContainer|__resourceimportermp3__.ResourceImporterMP3|__gradient__.Gradient|__inputeventgesture__.InputEventGesture|__enetpacketpeer__.ENetPacketPeer|__rduniform__.RDUniform|__inputeventkey__.InputEventKey|__openxrinteractionprofilemetadata__.OpenXRInteractionProfileMetadata|__physicsshapequeryparameters2d__.PhysicsShapeQueryParameters2D|__editorsceneformatimportergltf__.EditorSceneFormatImporterGLTF|__resourceimporteroggvorbis__.ResourceImporterOggVorbis|__styleboxflat__.StyleBoxFlat|__textmesh__.TextMesh|__visualshadernodevec2constant__.VisualShaderNodeVec2Constant|__oggpacketsequence__.OggPacketSequence|__inputeventmousemotion__.InputEventMouseMotion|__labelsettings__.LabelSettings|__parallax2d__.Parallax2D|__openxripbinding__.OpenXRIPBinding|__visualshadernodedotproduct__.VisualShaderNodeDotProduct|__webrtcpeerconnection__.WebRTCPeerConnection|__styleboxline__.StyleBoxLine|__openxrextensionwrapperextension__.OpenXRExtensionWrapperExtension|__resourceimporterobj__.ResourceImporterOBJ|__editorvcsinterface__.EditorVCSInterface|__gltfskeleton__.GLTFSkeleton|__quadoccluder3d__.QuadOccluder3D|__visualshadernodecustom__.VisualShaderNodeCustom|__flowcontainer__.FlowContainer|__physicsserver3d__.PhysicsServer3D|__pinjoint2d__.PinJoint2D|__openxrhand__.OpenXRHand|__skeletonmodifier3d__.SkeletonModifier3D|__hingejoint3d__.HingeJoint3D|__buttongroup__.ButtonGroup|__visualshadernodevec2parameter__.VisualShaderNodeVec2Parameter|__javaclasswrapper__.JavaClassWrapper|__visualshadernodecolorconstant__.VisualShaderNodeColorConstant|__inputeventshortcut__.InputEventShortcut|__openxrcompositionlayer__.OpenXRCompositionLayer|__audiostreamplaybacksynchronized__.AudioStreamPlaybackSynchronized|__httpclient__.HTTPClient|__animationnodeoneshot__.AnimationNodeOneShot|__input__.Input|__audioeffectinstance__.AudioEffectInstance|__scriptlanguageextension__.ScriptLanguageExtension|__gpuparticles2d__.GPUParticles2D|__editorresourcepreview__.EditorResourcePreview|__button__.Button|__gltfaccessor__.GLTFAccessor|__audioeffectfilter__.AudioEffectFilter|__renderscenebuffers__.RenderSceneBuffers|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gltfphysicsshape__.GLTFPhysicsShape|__compressedtexture2d__.CompressedTexture2D|__visualshadernodecurvetexture__.VisualShaderNodeCurveTexture|__light2d__.Light2D|__panel__.Panel|__audiostreamplaybackplaylist__.AudioStreamPlaybackPlaylist|__resourceimporterscene__.ResourceImporterScene|__physicsserver3dmanager__.PhysicsServer3DManager|__cylindershape3d__.CylinderShape3D|__placeholdercubemaparray__.PlaceholderCubemapArray|__canvasitem__.CanvasItem|__navigationserver2d__.NavigationServer2D|__gltftexturesampler__.GLTFTextureSampler|__audiostreammicrophone__.AudioStreamMicrophone|__gpuparticlescollisionheightfield3d__.GPUParticlesCollisionHeightField3D|__physicsshapequeryparameters3d__.PhysicsShapeQueryParameters3D|__boxcontainer__.BoxContainer|__weakref__.WeakRef|__inputeventscreendrag__.InputEventScreenDrag|__physicspointqueryparameters2d__.PhysicsPointQueryParameters2D|__segmentshape2d__.SegmentShape2D|__inputeventjoypadbutton__.InputEventJoypadButton|__texturecubemaprd__.TextureCubemapRD|__gpuparticlesattractorbox3d__.GPUParticlesAttractorBox3D|__audiolistener3d__.AudioListener3D|__editorplugin__.EditorPlugin|__openxractionmap__.OpenXRActionMap|__audioeffectlimiter__.AudioEffectLimiter|__pinjoint3d__.PinJoint3D|__physicstestmotionparameters2d__.PhysicsTestMotionParameters2D|__audiostreaminteractive__.AudioStreamInteractive|__skeletonmodification2dlookat__.SkeletonModification2DLookAt|__label__.Label|__bone2d__.Bone2D|__dampedspringjoint2d__.DampedSpringJoint2D|__cubemaparray__.CubemapArray|__physicsrayqueryparameters2d__.PhysicsRayQueryParameters2D|__texturebutton__.TextureButton|__renderdatard__.RenderDataRD|__multimeshinstance3d__.MultiMeshInstance3D|__audiostream__.AudioStream|__navigationlink3d__.NavigationLink3D|__websocketmultiplayerpeer__.WebSocketMultiplayerPeer|__visualshadernoderandomrange__.VisualShaderNodeRandomRange|__upnp__.UPNP|__reflectionprobe__.ReflectionProbe|__animationnodeadd2__.AnimationNodeAdd2|__vehiclewheel3d__.VehicleWheel3D|__fbxstate__.FBXState|__csgshape3d__.CSGShape3D|__audioeffecteq6__.AudioEffectEQ6|__gdscript__.GDScript|__meshconvexdecompositionsettings__.MeshConvexDecompositionSettings|__visualshadernodebooleanparameter__.VisualShaderNodeBooleanParameter|__inputeventmagnifygesture__.InputEventMagnifyGesture|__editorresourcepreviewgenerator__.EditorResourcePreviewGenerator|__bitmap__.BitMap|__shortcut__.Shortcut|__enetconnection__.ENetConnection|__gridmapeditorplugin__.GridMapEditorPlugin|__multiplayerapiextension__.MultiplayerAPIExtension|__rdshadersource__.RDShaderSource|__animationnode__.AnimationNode|__inputmap__.InputMap|__astar2d__.AStar2D|__editorexportplatformandroid__.EditorExportPlatformAndroid|__curvetexture__.CurveTexture|__hsplitcontainer__.HSplitContainer|__visualshadernodescreenuvtosdf__.VisualShaderNodeScreenUVToSDF|__audioeffectpitchshift__.AudioEffectPitchShift|__capsuleshape2d__.CapsuleShape2D|__visualshadernodevectorfunc__.VisualShaderNodeVectorFunc|__pckpacker__.PCKPacker|__audiostreamsynchronized__.AudioStreamSynchronized|__upnpdevice__.UPNPDevice|__renderscenedata__.RenderSceneData|__directionallight2d__.DirectionalLight2D|__compositor__.Compositor|__visualshadernodevec4parameter__.VisualShaderNodeVec4Parameter|__raycast3d__.RayCast3D|__visualshadernodeuintop__.VisualShaderNodeUIntOp|__editorfilesystemdirectory__.EditorFileSystemDirectory|__resourceimportershaderfile__.ResourceImporterShaderFile|__scripteditorbase__.ScriptEditorBase|__inputeventmousebutton__.InputEventMouseButton|__rdattachmentformat__.RDAttachmentFormat|__convexpolygonshape2d__.ConvexPolygonShape2D|__xrhandtracker__.XRHandTracker|__visualshadernodefloatconstant__.VisualShaderNodeFloatConstant|__editorfeatureprofile__.EditorFeatureProfile|__visualshadernodevaryinggetter__.VisualShaderNodeVaryingGetter|__xrbodytracker__.XRBodyTracker|__visualshadernodesample3d__.VisualShaderNodeSample3D|__collisionobject2d__.CollisionObject2D|__textparagraph__.TextParagraph|__audioeffecteq__.AudioEffectEQ|__packetpeer__.PacketPeer|__curve2d__.Curve2D|__physicsserver2dextension__.PhysicsServer2DExtension|__editortoaster__.EditorToaster|__editorinterface__.EditorInterface|__gdscriptsyntaxhighlighter__.GDScriptSyntaxHighlighter|__editorcontextmenuplugin__.EditorContextMenuPlugin|__configfile__.ConfigFile|__curvexyztexture__.CurveXYZTexture|__shapecast2d__.ShapeCast2D|__nativemenu__.NativeMenu|__springbonesimulator3d__.SpringBoneSimulator3D|__bonemap__.BoneMap|__audioeffecthardlimiter__.AudioEffectHardLimiter|__inputeventmidi__.InputEventMIDI|__zipreader__.ZIPReader|__canvasmodulate__.CanvasModulate|__skeletonmodificationstack2d__.SkeletonModificationStack2D|__navigationlink2d__.NavigationLink2D|__viewporttexture__.ViewportTexture|__visibleonscreenenabler2d__.VisibleOnScreenEnabler2D|__webrtcpeerconnectionextension__.WebRTCPeerConnectionExtension|__graphnode__.GraphNode|__audiosample__.AudioSample|__csgcylinder3d__.CSGCylinder3D|__skeleton2d__.Skeleton2D|__node2d__.Node2D|__hflowcontainer__.HFlowContainer|__spritebase3d__.SpriteBase3D|__mainloop__.MainLoop|__videostreamtheora__.VideoStreamTheora|__image__.Image|__navigationpathqueryresult2d__.NavigationPathQueryResult2D|__spheremesh__.SphereMesh|__boneattachment3d__.BoneAttachment3D|__font__.Font|__gltfdocumentextension__.GLTFDocumentExtension|__visualshadernodecomment__.VisualShaderNodeComment|__visualshadernodetransformfunc__.VisualShaderNodeTransformFunc|__textline__.TextLine|__importermeshinstance3d__.ImporterMeshInstance3D|__imagetexture3d__.ImageTexture3D|__path2d__.Path2D|__springbonecollisioncapsule3d__.SpringBoneCollisionCapsule3D|__fontfile__.FontFile|__openxrinteractionprofileeditor__.OpenXRInteractionProfileEditor|__inputeventpangesture__.InputEventPanGesture|__physicalbone3d__.PhysicalBone3D|__audioeffectspectrumanalyzerinstance__.AudioEffectSpectrumAnalyzerInstance|__animationnodestatemachineplayback__.AnimationNodeStateMachinePlayback|__texturelayered__.TextureLayered|__packetpeerudp__.PacketPeerUDP|__placeholdermaterial__.PlaceholderMaterial|__gradienttexture1d__.GradientTexture1D|__editornode3dgizmo__.EditorNode3DGizmo|__editorsyntaxhighlighter__.EditorSyntaxHighlighter|__openxrcompositionlayercylinder__.OpenXRCompositionLayerCylinder|__textserverdummy__.TextServerDummy|__visualshadernodesdfraymarch__.VisualShaderNodeSDFRaymarch|__instanceplaceholder__.InstancePlaceholder|__physicalskymaterial__.PhysicalSkyMaterial|__diraccess__.DirAccess|__texture2darray__.Texture2DArray|__gridmap__.GridMap|__skeletonmodification2d__.SkeletonModification2D|__missingnode__.MissingNode|__rdpipelinespecializationconstant__.RDPipelineSpecializationConstant|__gpuparticlesattractorsphere3d__.GPUParticlesAttractorSphere3D|__gdextension__.GDExtension|__basematerial3d__.BaseMaterial3D|__videostream__.VideoStream|__animationnodeblend3__.AnimationNodeBlend3|__ninepatchrect__.NinePatchRect|__visualshadernodeintconstant__.VisualShaderNodeIntConstant|__moviewriter__.MovieWriter|__compressedtexture2darray__.CompressedTexture2DArray|__audiostreamoggvorbis__.AudioStreamOggVorbis|__world2d__.World2D|__cpuparticles2d__.CPUParticles2D|__navigationagent3d__.NavigationAgent3D|__subviewport__.SubViewport|__audiostreamgenerator__.AudioStreamGenerator|__editorundoredomanager__.EditorUndoRedoManager|__theme__.Theme|__meshdatatool__.MeshDataTool|__visualshadernodeparticleoutput__.VisualShaderNodeParticleOutput|__audiostreamrandomizer__.AudioStreamRandomizer|__camera3d__.Camera3D|__regex__.RegEx|__visualshadernodebooleanconstant__.VisualShaderNodeBooleanConstant|__visualshadernoderemap__.VisualShaderNodeRemap|__textureprogressbar__.TextureProgressBar|__expression__.Expression|__range__.Range|__visualshadernodereroute__.VisualShaderNodeReroute|__gltflight__.GLTFLight|__particleprocessmaterial__.ParticleProcessMaterial|__arrayoccluder3d__.ArrayOccluder3D|__retargetmodifier3d__.RetargetModifier3D|__scrollbar__.ScrollBar|__audioeffectbandlimitfilter__.AudioEffectBandLimitFilter|__rootmotionview__.RootMotionView|__audioeffectpanner__.AudioEffectPanner|__renderdataextension__.RenderDataExtension|__rigidbody2d__.RigidBody2D|__hashingcontext__.HashingContext|__renderingdevice__.RenderingDevice|__translationserver__.TranslationServer|__physicsserver2d__.PhysicsServer2D|__editorresourcepicker__.EditorResourcePicker|__popup__.Popup|__renderscenebuffersrd__.RenderSceneBuffersRD|__xmlparser__.XMLParser|__visualshadernodeuintparameter__.VisualShaderNodeUIntParameter|__themedb__.ThemeDB|__gpuparticlesattractor3d__.GPUParticlesAttractor3D|__xrserver__.XRServer|__rdpipelinecolorblendstateattachment__.RDPipelineColorBlendStateAttachment|__inputevent__.InputEvent|__physicsdirectbodystate3dextension__.PhysicsDirectBodyState3DExtension|__openxrdpadbindingmodifier__.OpenXRDpadBindingModifier|__container__.Container|__staticbody3d__.StaticBody3D|__physicsrayqueryparameters3d__.PhysicsRayQueryParameters3D|__navigationpathqueryparameters3d__.NavigationPathQueryParameters3D|__itemlist__.ItemList|__imagetexturelayered__.ImageTextureLayered|__statusindicator__.StatusIndicator|__editorsceneformatimporterfbx2gltf__.EditorSceneFormatImporterFBX2GLTF|__editorcommandpalette__.EditorCommandPalette|__subviewportcontainer__.SubViewportContainer|__visualshadernodeuintfunc__.VisualShaderNodeUIntFunc|__visualshadernodeproximityfade__.VisualShaderNodeProximityFade|__springbonecollisionplane3d__.SpringBoneCollisionPlane3D|__gpuparticlescollisionbox3d__.GPUParticlesCollisionBox3D|__popuppanel__.PopupPanel|__packetpeerdtls__.PacketPeerDTLS|__animation__.Animation|__physicsserver2dmanager__.PhysicsServer2DManager|__editorsettings__.EditorSettings|__staticbody2d__.StaticBody2D|__gpuparticlesattractorvectorfield3d__.GPUParticlesAttractorVectorField3D|__visualshadernodescreennormalworldspace__.VisualShaderNodeScreenNormalWorldSpace|__csgbox3d__.CSGBox3D|__regexmatch__.RegExMatch|__vscrollbar__.VScrollBar|__collisionpolygon2d__.CollisionPolygon2D|__visualshadernodevectorrefract__.VisualShaderNodeVectorRefract|__stylebox__.StyleBox|__concavepolygonshape3d__.ConcavePolygonShape3D|__texturelayeredrd__.TextureLayeredRD|__astar3d__.AStar3D|__animationnodetimeseek__.AnimationNodeTimeSeek|__undoredo__.UndoRedo|__editorexportpreset__.EditorExportPreset|__openxrinterface__.OpenXRInterface|__renderscenebuffersextension__.RenderSceneBuffersExtension|__trianglemesh__.TriangleMesh|__resourceimporter__.ResourceImporter|__audiostreamwav__.AudioStreamWAV|__visualshadernodemultiplyadd__.VisualShaderNodeMultiplyAdd|__visualshadernodefloatfunc__.VisualShaderNodeFloatFunc|__webrtcdatachannel__.WebRTCDataChannel|__physicstestmotionparameters3d__.PhysicsTestMotionParameters3D|__systemfont__.SystemFont|__multiplayerapi__.MultiplayerAPI|__animationrootnode__.AnimationRootNode|__animationnodeextension__.AnimationNodeExtension|__xrfacemodifier3d__.XRFaceModifier3D|__prismmesh__.PrismMesh|__noise__.Noise|__crypto__.Crypto|__texturerect__.TextureRect|__audioeffecteq10__.AudioEffectEQ10|__object__.Object|__physicsbody2d__.PhysicsBody2D|__characterbody2d__.CharacterBody2D|__canvastexture__.CanvasTexture|__scriptextension__.ScriptExtension|__colorpicker__.ColorPicker|__editorsceneformatimporterufbx__.EditorSceneFormatImporterUFBX|__textserverextension__.TextServerExtension|__audioeffectcompressor__.AudioEffectCompressor|__hmaccontext__.HMACContext|__engine__.Engine|__springbonecollisionsphere3d__.SpringBoneCollisionSphere3D|__scenemultiplayer__.SceneMultiplayer|__csgmesh3d__.CSGMesh3D|__resourceimporterbmfont__.ResourceImporterBMFont|__tilemap__.TileMap|__navigationobstacle2d__.NavigationObstacle2D|__visualshadernodevectorcompose__.VisualShaderNodeVectorCompose|__editorinspector__.EditorInspector|__httprequest__.HTTPRequest|__encodedobjectasid__.EncodedObjectAsID|__area2d__.Area2D|__csgcombiner3d__.CSGCombiner3D|__uniformsetcacherd__.UniformSetCacheRD|__sliderjoint3d__.SliderJoint3D|__capsulemesh__.CapsuleMesh|__visualshadernodetransformcompose__.VisualShaderNodeTransformCompose|__skeletonmodification2dtwoboneik__.SkeletonModification2DTwoBoneIK|__visualshadernodetexture2darray__.VisualShaderNodeTexture2DArray|__renderscenedatard__.RenderSceneDataRD|__marshalls__.Marshalls|__visualshadernodefloatparameter__.VisualShaderNodeFloatParameter|__tabbar__.TabBar|__geometry3d__.Geometry3D|__meshinstance2d__.MeshInstance2D|__performance__.Performance|__visualshadernodevectorbase__.VisualShaderNodeVectorBase|__rdshaderfile__.RDShaderFile|__openxractionbindingmodifier__.OpenXRActionBindingModifier|__joint3d__.Joint3D|__x509certificate__.X509Certificate|__visualshadernodevarying__.VisualShaderNodeVarying|__editorfilesystem__.EditorFileSystem|__omnilight3d__.OmniLight3D|__multiplayerpeer__.MultiplayerPeer|__standardmaterial3d__.StandardMaterial3D|__node3d__.Node3D|__visualshadernodevectordecompose__.VisualShaderNodeVectorDecompose|__compressedtexture3d__.CompressedTexture3D|__inputeventwithmodifiers__.InputEventWithModifiers|__gltfdocumentextensionconvertimportermesh__.GLTFDocumentExtensionConvertImporterMesh|__timer__.Timer|__webrtcmultiplayerpeer__.WebRTCMultiplayerPeer|__editorexportplugin__.EditorExportPlugin|__visualshadernodeparameterref__.VisualShaderNodeParameterRef|__rdshaderspirv__.RDShaderSPIRV|__audiostreamplaybackpolyphonic__.AudioStreamPlaybackPolyphonic|__menubutton__.MenuButton|__rdpipelinecolorblendstate__.RDPipelineColorBlendState|__navigationpathqueryresult3d__.NavigationPathQueryResult3D|__scrollcontainer__.ScrollContainer|__springbonecollision3d__.SpringBoneCollision3D|__editorexportplatformmacos__.EditorExportPlatformMacOS|__tcpserver__.TCPServer|__multiplayerspawner__.MultiplayerSpawner|__zippacker__.ZIPPacker|__animationnodeanimation__.AnimationNodeAnimation|__polygon2d__.Polygon2D|__lookatmodifier3d__.LookAtModifier3D|__shaderglobalsoverride__.ShaderGlobalsOverride|__springarm3d__.SpringArm3D|__streampeerbuffer__.StreamPeerBuffer|__sphereshape3d__.SphereShape3D|__hscrollbar__.HScrollBar|__visualshadernodeif__.VisualShaderNodeIf|__vslider__.VSlider|__physicspointqueryparameters3d__.PhysicsPointQueryParameters3D|__editorselection__.EditorSelection|__parallaxlayer__.ParallaxLayer|__compressedcubemaparray__.CompressedCubemapArray|__audiostreampolyphonic__.AudioStreamPolyphonic:
    """"""
    pass
  @shortcut_context.setter
  def shortcut_context(self,  value:__object__.Object)->None:
    """"""
    pass
  @property
  def theme(self)->__theme__.Theme:
    """"""
    pass
  @theme.setter
  def theme(self,  value:__theme__.Theme)->None:
    """"""
    pass
  @property
  def theme_type_variation(self)->str:
    """"""
    pass
  @theme_type_variation.setter
  def theme_type_variation(self,  value:str)->None:
    """"""
    pass
  def _has_point(self, point:__core__.Vector2)->bool:
    """
				Virtual method to be implemented by the user. Returns whether the given `point` is inside this control.
				If not overridden, default behavior is checking if the point is within control's Rect.
				**Note:** If you want to check if a point is inside the control, you can use `Rect2(Vector2.ZERO, size).has_point(point)`.
			"""
    pass

  def _structured_text_parser(self, args:__core__.Array, text:str)->typedarray::Vector3i:
    """
				User defined BiDi algorithm override function.
				Returns an `Array` of `Vector3i` text ranges and text base directions, in the left-to-right order. Ranges should cover full source `text` without overlaps. BiDi algorithm will be used on each range separately.
			"""
    pass

  def _get_minimum_size(self)->__core__.Vector2:
    """
				Virtual method to be implemented by the user. Returns the minimum size for this control. Alternative to `custom_minimum_size` for controlling minimum size via code. The actual minimum size will be the max value of these two (in each axis separately).
				If not overridden, defaults to `constant Vector2.ZERO`.
				**Note:** This method will not be called when the script is attached to a `Control` node that already overrides its minimum size (e.g. `Label`, `Button`, `PanelContainer` etc.). It can only be used with most basic GUI nodes, like `Control`, `Container`, `Panel` etc.
			"""
    pass

  def _get_tooltip(self, at_position:__core__.Vector2)->str:
    """
				Virtual method to be implemented by the user. Returns the tooltip text for the position `at_position` in control's local coordinates, which will typically appear when the cursor is resting over this control. See `get_tooltip`.
				**Note:** If this method returns an empty `String` and `_make_custom_tooltip` is not overridden, no tooltip is displayed.
			"""
    pass

  def _get_drag_data(self, at_position:__core__.Vector2)->Any:
    """
				Godot calls this method to get data that can be dragged and dropped onto controls that expect drop data. Returns `null` if there is no data to drag. Controls that want to receive drop data should implement `_can_drop_data` and `_drop_data`. `at_position` is local to this control. Drag may be forced with `force_drag`.
				A preview that will follow the mouse that should represent the data can be set with `set_drag_preview`. A good time to set the preview is in this method.
				**Note:** If the drag was initiated by a keyboard shortcut or `accessibility_drag`, `at_position` is set to `constant Vector2.INF`, and the currently selected item/text position should be used as the drag position.
				
				```gdscript
				func _get_drag_data(position):
					var mydata = make_data() # This is your custom method generating the drag data.
					set_drag_preview(make_preview(mydata)) # This is your custom method generating the preview of the drag data.
					return mydata
				```
				
				
			"""
    pass

  def _can_drop_data(self, at_position:__core__.Vector2, data:Any)->bool:
    """
				Godot calls this method to test if `data` from a control's `_get_drag_data` can be dropped at `at_position`. `at_position` is local to this control.
				This method should only be used to test the data. Process the data in `_drop_data`.
				**Note:** If the drag was initiated by a keyboard shortcut or `accessibility_drag`, `at_position` is set to `constant Vector2.INF`, and the currently selected item/text position should be used as the drop position.
				
				```gdscript
				func _can_drop_data(position, data):
					# Check position if it is relevant to you
					# Otherwise, just check data
					return typeof(data) == TYPE_DICTIONARY and data.has("expected")
				```
				
				
			"""
    pass

  def _drop_data(self, at_position:__core__.Vector2, data:Any)->None:
    """
				Godot calls this method to pass you the `data` from a control's `_get_drag_data` result. Godot first calls `_can_drop_data` to test if `data` is allowed to drop at `at_position` where `at_position` is local to this control.
				**Note:** If the drag was initiated by a keyboard shortcut or `accessibility_drag`, `at_position` is set to `constant Vector2.INF`, and the currently selected item/text position should be used as the drop position.
				
				```gdscript
				func _can_drop_data(position, data):
					return typeof(data) == TYPE_DICTIONARY and data.has("color")

				func _drop_data(position, data):
					var color = data`"color"`
				```
				
				
			"""
    pass

  def _make_custom_tooltip(self, for_text:str)->__audiostreamplayer2d__.AudioStreamPlayer2D|__visualshadernodedeterminant__.VisualShaderNodeDeterminant|__audiostreamgeneratorplayback__.AudioStreamGeneratorPlayback|__physicsdirectbodystate2dextension__.PhysicsDirectBodyState2DExtension|__navigationserver3d__.NavigationServer3D|__xrbodymodifier3d__.XRBodyModifier3D|__vsplitcontainer__.VSplitContainer|__surfacetool__.SurfaceTool|__visualshadernodeparticleemitter__.VisualShaderNodeParticleEmitter|__textserver__.TextServer|__lightmapgidata__.LightmapGIData|__placeholdermesh__.PlaceholderMesh|__visibleonscreennotifier3d__.VisibleOnScreenNotifier3D|__generic6dofjoint3d__.Generic6DOFJoint3D|__audioeffectamplify__.AudioEffectAmplify|__conetwistjoint3d__.ConeTwistJoint3D|__visualshadernodetransformvecmult__.VisualShaderNodeTransformVecMult|__graphframe__.GraphFrame|__animatablebody3d__.AnimatableBody3D|__camera2d__.Camera2D|__multiplayersynchronizer__.MultiplayerSynchronizer|__inputeventjoypadmotion__.InputEventJoypadMotion|__margincontainer__.MarginContainer|__resourcepreloader__.ResourcePreloader|__imageformatloaderextension__.ImageFormatLoaderExtension|__gpuparticlescollision3d__.GPUParticlesCollision3D|__animationnodeblendspace1d__.AnimationNodeBlendSpace1D|__visualshadernodetexturesdf__.VisualShaderNodeTextureSDF|__tileset__.TileSet|__occluderpolygon2d__.OccluderPolygon2D|__dtlsserver__.DTLSServer|__packeddatacontainer__.PackedDataContainer|__lineedit__.LineEdit|__xrhandmodifier3d__.XRHandModifier3D|__gpuparticles3d__.GPUParticles3D|__richtextlabel__.RichTextLabel|__openxrvisibilitymask__.OpenXRVisibilityMask|__editorexportplatformwindows__.EditorExportPlatformWindows|__streampeer__.StreamPeer|__websocketpeer__.WebSocketPeer|__slider__.Slider|__noisetexture3d__.NoiseTexture3D|__animationnodeblend2__.AnimationNodeBlend2|__primitivemesh__.PrimitiveMesh|__richtexteffect__.RichTextEffect|__visualshadernodetransformop__.VisualShaderNodeTransformOp|__popupmenu__.PopupMenu|__packetpeerextension__.PacketPeerExtension|__parallaxbackground__.ParallaxBackground|__visualshadernodeinput__.VisualShaderNodeInput|__planemesh__.PlaneMesh|__gltfobjectmodelproperty__.GLTFObjectModelProperty|__physicalbonesimulator3d__.PhysicalBoneSimulator3D|__skeletonmodification2dphysicalbones__.SkeletonModification2DPhysicalBones|__thread__.Thread|__visualshadernodelinearscenedepth__.VisualShaderNodeLinearSceneDepth|__collisionshape2d__.CollisionShape2D|__sprite2d__.Sprite2D|__confirmationdialog__.ConfirmationDialog|__ormmaterial3d__.ORMMaterial3D|__pointmesh__.PointMesh|__scenetree__.SceneTree|__graphedit__.GraphEdit|__rdtextureview__.RDTextureView|__editorspinslider__.EditorSpinSlider|__pathfollow3d__.PathFollow3D|__physicsdirectspacestate2dextension__.PhysicsDirectSpaceState2DExtension|__resourceformatsaver__.ResourceFormatSaver|__multiplayerpeerextension__.MultiplayerPeerExtension|__visualshadernodeframe__.VisualShaderNodeFrame|__visualshadernodeswitch__.VisualShaderNodeSwitch|__checkbox__.CheckBox|__separator__.Separator|__visualshadernodeparticleaccelerator__.VisualShaderNodeParticleAccelerator|__rdpipelinemultisamplestate__.RDPipelineMultisampleState|__packeddatacontainerref__.PackedDataContainerRef|__joint2d__.Joint2D|__physicsdirectbodystate2d__.PhysicsDirectBodyState2D|__visualshadernodevec4constant__.VisualShaderNodeVec4Constant|__skinreference__.SkinReference|__checkbutton__.CheckButton|__visualshadernodeis__.VisualShaderNodeIs|__visualshadernodeintfunc__.VisualShaderNodeIntFunc|__visualshadernodecurvexyztexture__.VisualShaderNodeCurveXYZTexture|__navigationmeshgenerator__.NavigationMeshGenerator|__gridcontainer__.GridContainer|__texture__.Texture|__rdsamplerstate__.RDSamplerState|__lightmapper__.Lightmapper|__editornode3dgizmoplugin__.EditorNode3DGizmoPlugin|__gltfspecgloss__.GLTFSpecGloss|__visualshadernodecubemapparameter__.VisualShaderNodeCubemapParameter|__xrpositionaltracker__.XRPositionalTracker|__javascriptbridge__.JavaScriptBridge|__openxrapiextension__.OpenXRAPIExtension|__visualshadernodetransformdecompose__.VisualShaderNodeTransformDecompose|__atlastexture__.AtlasTexture|__gltfnode__.GLTFNode|__resourceimporterimage__.ResourceImporterImage|__collisionobject3d__.CollisionObject3D|__animatedsprite2d__.AnimatedSprite2D|__cryptokey__.CryptoKey|__mutex__.Mutex|__path3d__.Path3D|__resourceformatloader__.ResourceFormatLoader|__navigationpathqueryparameters2d__.NavigationPathQueryParameters2D|__lightoccluder2d__.LightOccluder2D|__filesystemdock__.FileSystemDock|__visualshadernodedistancefade__.VisualShaderNodeDistanceFade|__basebutton__.BaseButton|__visualshadernodebillboard__.VisualShaderNodeBillboard|__animationnodetimescale__.AnimationNodeTimeScale|__xranchor3d__.XRAnchor3D|__xrtracker__.XRTracker|__cameratexture__.CameraTexture|__linkbutton__.LinkButton|__tilesetsource__.TileSetSource|__visualshadernodederivativefunc__.VisualShaderNodeDerivativeFunc|__shape2d__.Shape2D|__visualshadernodegroupbase__.VisualShaderNodeGroupBase|__camerafeed__.CameraFeed|__csgpolygon3d__.CSGPolygon3D|__openxrbindingmodifier__.OpenXRBindingModifier|__spriteframes__.SpriteFrames|__resourceimporterbitmap__.ResourceImporterBitMap|__visualshadernodetexturesdfnormal__.VisualShaderNodeTextureSDFNormal|__visualshadernodetextureparameter__.VisualShaderNodeTextureParameter|__enginedebugger__.EngineDebugger|__mesh__.Mesh|__boxoccluder3d__.BoxOccluder3D|__ip__.IP|__editorexportplatformios__.EditorExportPlatformIOS|__renderscenedataextension__.RenderSceneDataExtension|__renderingserver__.RenderingServer|__fontvariation__.FontVariation|__arraymesh__.ArrayMesh|__gltfskin__.GLTFSkin|__skeletonmodification2dstackholder__.SkeletonModification2DStackHolder|__audiostreamplaybackinteractive__.AudioStreamPlaybackInteractive|__visualshadernodeparticlemultiplybyaxisangle__.VisualShaderNodeParticleMultiplyByAxisAngle|__visualshadernodeparameter__.VisualShaderNodeParameter|__audioeffectphaser__.AudioEffectPhaser|__panoramaskymaterial__.PanoramaSkyMaterial|__visualshadernoderotationbyaxis__.VisualShaderNodeRotationByAxis|__tabcontainer__.TabContainer|__visualshadernodecolorop__.VisualShaderNodeColorOp|__audioeffecthighpassfilter__.AudioEffectHighPassFilter|__visualshadernodeintop__.VisualShaderNodeIntOp|__navigationregion3d__.NavigationRegion3D|__visualshadernodeparticlerandomness__.VisualShaderNodeParticleRandomness|__mobilevrinterface__.MobileVRInterface|__animationplayer__.AnimationPlayer|__separationrayshape2d__.SeparationRayShape2D|__collisionshape3d__.CollisionShape3D|__visualshadernodevectorlen__.VisualShaderNodeVectorLen|__charfxtransform__.CharFXTransform|__gpuparticlescollisionsdf3d__.GPUParticlesCollisionSDF3D|__visualshadernode__.VisualShaderNode|__xrcamera3d__.XRCamera3D|__animationnodetransition__.AnimationNodeTransition|__physicsdirectspacestate3dextension__.PhysicsDirectSpaceState3DExtension|__shaderincludedb__.ShaderIncludeDB|__canvaslayer__.CanvasLayer|__scenereplicationconfig__.SceneReplicationConfig|__visualshadernodecolorparameter__.VisualShaderNodeColorParameter|__openxrhapticvibration__.OpenXRHapticVibration|__editorsceneformatimporter__.EditorSceneFormatImporter|__shape3d__.Shape3D|__textserveradvanced__.TextServerAdvanced|__packetpeerstream__.PacketPeerStream|__inputeventaction__.InputEventAction|__kinematiccollision3d__.KinematicCollision3D|__tlsoptions__.TLSOptions|__placeholdertexturelayered__.PlaceholderTextureLayered|__torusmesh__.TorusMesh|__resourceimportertextureatlas__.ResourceImporterTextureAtlas|__physicalbone2d__.PhysicalBone2D|__separationrayshape3d__.SeparationRayShape3D|__lightmapprobe__.LightmapProbe|__vflowcontainer__.VFlowContainer|__visualshadernodemix__.VisualShaderNodeMix|__noisetexture2d__.NoiseTexture2D|__visualshadernodesmoothstep__.VisualShaderNodeSmoothStep|__fbxdocument__.FBXDocument|__editorexportplatformpc__.EditorExportPlatformPC|__animationnodeadd3__.AnimationNodeAdd3|__node__.Node|__renderscenebuffersconfiguration__.RenderSceneBuffersConfiguration|__filedialog__.FileDialog|__openxrcompositionlayerequirect__.OpenXRCompositionLayerEquirect|__characterbody3d__.CharacterBody3D|__visualshadernodeparticleemit__.VisualShaderNodeParticleEmit|__proceduralskymaterial__.ProceduralSkyMaterial|__os__.OS|__visualshadernodetexture2darrayparameter__.VisualShaderNodeTexture2DArrayParameter|__window__.Window|__videostreamplayback__.VideoStreamPlayback|__visualshadernodeparticleconevelocity__.VisualShaderNodeParticleConeVelocity|__editorimportplugin__.EditorImportPlugin|__styleboxempty__.StyleBoxEmpty|__editorscenepostimportplugin__.EditorScenePostImportPlugin|__decal__.Decal|__openxranalogthresholdmodifier__.OpenXRAnalogThresholdModifier|__cameraserver__.CameraServer|__navigationmesh__.NavigationMesh|__boxshape3d__.BoxShape3D|__gltfmesh__.GLTFMesh|__visualshadernodetexture__.VisualShaderNodeTexture|__spinbox__.SpinBox|__rdframebufferpass__.RDFramebufferPass|__resource__.Resource|__referencerect__.ReferenceRect|__world3d__.World3D|__gdextensionmanager__.GDExtensionManager|__scripteditor__.ScriptEditor|__colorpalette__.ColorPalette|__framebuffercacherd__.FramebufferCacheRD|__rdpipelinedepthstencilstate__.RDPipelineDepthStencilState|__cylindermesh__.CylinderMesh|__canvasitemmaterial__.CanvasItemMaterial|__voxelgi__.VoxelGI|__cubemap__.Cubemap|__tilemappattern__.TileMapPattern|__visualshadernodetexture3dparameter__.VisualShaderNodeTexture3DParameter|__visualshadernodecubemap__.VisualShaderNodeCubemap|__meshinstance3d__.MeshInstance3D|__canvasgroup__.CanvasGroup|__treeitem__.TreeItem|__audiosampleplayback__.AudioSamplePlayback|__visibleonscreennotifier2d__.VisibleOnScreenNotifier2D|__gltfcamera__.GLTFCamera|__editorpaths__.EditorPaths|__remotetransform3d__.RemoteTransform3D|__texture2darrayrd__.Texture2DArrayRD|__webxrinterface__.WebXRInterface|__openxrinteractionprofile__.OpenXRInteractionProfile|__navigationmeshsourcegeometrydata3d__.NavigationMeshSourceGeometryData3D|__navigationagent2d__.NavigationAgent2D|__xrorigin3d__.XROrigin3D|__voxelgidata__.VoxelGIData|__xrinterfaceextension__.XRInterfaceExtension|__visualshadernodetransformparameter__.VisualShaderNodeTransformParameter|__imageformatloader__.ImageFormatLoader|__streampeertcp__.StreamPeerTCP|__visualshadernodetransformconstant__.VisualShaderNodeTransformConstant|__editorscenepostimport__.EditorScenePostImport|__animationtree__.AnimationTree|__animationnodestatemachinetransition__.AnimationNodeStateMachineTransition|__portablecompressedtexture2d__.PortableCompressedTexture2D|__openxripbindingmodifier__.OpenXRIPBindingModifier|__resourceimportercsvtranslation__.ResourceImporterCSVTranslation|__openxrbindingmodifiereditor__.OpenXRBindingModifierEditor|__gltfanimation__.GLTFAnimation|__meshtexture__.MeshTexture|__xrpose__.XRPose|__openxractionset__.OpenXRActionSet|__compressedtexturelayered__.CompressedTextureLayered|__visualshadernodetexture3d__.VisualShaderNodeTexture3D|__visualshadernoderesizablebase__.VisualShaderNodeResizableBase|__rdvertexattribute__.RDVertexAttribute|__pathfollow2d__.PathFollow2D|__raycast2d__.RayCast2D|__marker3d__.Marker3D|__hseparator__.HSeparator|__audioeffectstereoenhance__.AudioEffectStereoEnhance|__csgsphere3d__.CSGSphere3D|__javascriptobject__.JavaScriptObject|__animationnodeblendspace2d__.AnimationNodeBlendSpace2D|__tree__.Tree|__oggpacketsequenceplayback__.OggPacketSequencePlayback|__worldboundaryshape3d__.WorldBoundaryShape3D|__visualshadernodevectordistance__.VisualShaderNodeVectorDistance|__shapecast3d__.ShapeCast3D|__resourceimporterwav__.ResourceImporterWAV|__tiledata__.TileData|__audioeffectbandpassfilter__.AudioEffectBandPassFilter|__visualshadernodetexture2dparameter__.VisualShaderNodeTexture2DParameter|__visualinstance3d__.VisualInstance3D|__audioeffectnotchfilter__.AudioEffectNotchFilter|__cameraattributesphysical__.CameraAttributesPhysical|__groovejoint2d__.GrooveJoint2D|__audioeffectchorus__.AudioEffectChorus|__texture3drd__.Texture3DRD|__renderdata__.RenderData|__animatablebody2d__.AnimatableBody2D|__editorfilesystemimportformatsupportquery__.EditorFileSystemImportFormatSupportQuery|__javaclass__.JavaClass|__randomnumbergenerator__.RandomNumberGenerator|__visualshadernodevectorop__.VisualShaderNodeVectorOp|__acceptdialog__.AcceptDialog|__placeholdertexture3d__.PlaceholderTexture3D|__syntaxhighlighter__.SyntaxHighlighter|__packedscene__.PackedScene|__audiostreamplaylist__.AudioStreamPlaylist|__shader__.Shader|__textservermanager__.TextServerManager|__sphereoccluder3d__.SphereOccluder3D|__jnisingleton__.JNISingleton|__json__.JSON|__audiostreamplayer3d__.AudioStreamPlayer3D|__webrtcdatachannelextension__.WebRTCDataChannelExtension|__styleboxtexture__.StyleBoxTexture|__editorfiledialog__.EditorFileDialog|__editorresourcetooltipplugin__.EditorResourceTooltipPlugin|__audioeffectrecord__.AudioEffectRecord|__editorexportplatformextension__.EditorExportPlatformExtension|__audiostreamplayer__.AudioStreamPlayer|__tilemaplayer__.TileMapLayer|__sky__.Sky|__physicsdirectspacestate3d__.PhysicsDirectSpaceState3D|__physicsserver3dextension__.PhysicsServer3DExtension|__curve__.Curve|__editorexportplatform__.EditorExportPlatform|__tweener__.Tweener|__occluderinstance3d__.OccluderInstance3D|__resourceloader__.ResourceLoader|__visualshadernodeworldpositionfromdepth__.VisualShaderNodeWorldPositionFromDepth|__multimesh__.MultiMesh|__splitcontainer__.SplitContainer|__visualshadernodeintparameter__.VisualShaderNodeIntParameter|__environment__.Environment|__visualshadernodefaceforward__.VisualShaderNodeFaceForward|__xrvrs__.XRVRS|__visualshader__.VisualShader|__lightmapgi__.LightmapGI|__audioserver__.AudioServer|__videostreamplayer__.VideoStreamPlayer|__texture3d__.Texture3D|__physicsbody3d__.PhysicsBody3D|__multimeshinstance2d__.MultiMeshInstance2D|__sprite3d__.Sprite3D|__semaphore__.Semaphore|__resourceuid__.ResourceUID|__visualshadernodefloatop__.VisualShaderNodeFloatOp|__heightmapshape3d__.HeightMapShape3D|__visualshadernodeconstant__.VisualShaderNodeConstant|__rectangleshape2d__.RectangleShape2D|__xrcontroller3d__.XRController3D|__animatedsprite3d__.AnimatedSprite3D|__compressedcubemap__.CompressedCubemap|__workerthreadpool__.WorkerThreadPool|__texture2drd__.Texture2DRD|__time__.Time|__visualshadernodeexpression__.VisualShaderNodeExpression|__openxrhapticbase__.OpenXRHapticBase|__visualshadernodeparticleringemitter__.VisualShaderNodeParticleRingEmitter|__visibleonscreenenabler3d__.VisibleOnScreenEnabler3D|__openxrcompositionlayerquad__.OpenXRCompositionLayerQuad|__gltfbufferview__.GLTFBufferView|__astargrid2d__.AStarGrid2D|__physicstestmotionresult3d__.PhysicsTestMotionResult3D|__tilesetscenescollectionsource__.TileSetScenesCollectionSource|__audioeffectdistortion__.AudioEffectDistortion|__menubar__.MenuBar|__collisionpolygon3d__.CollisionPolygon3D|__editordebuggerplugin__.EditorDebuggerPlugin|__area3d__.Area3D|__subtweentweener__.SubtweenTweener|__label3d__.Label3D|__translation__.Translation|__visualshadernodecompare__.VisualShaderNodeCompare|__polygonoccluder3d__.PolygonOccluder3D|__meshlibrary__.MeshLibrary|__cameraattributespractical__.CameraAttributesPractical|__editordebuggersession__.EditorDebuggerSession|__rdpipelinerasterizationstate__.RDPipelineRasterizationState|__gltfstate__.GLTFState|__skin__.Skin|__visualshadernodesdftoscreenuv__.VisualShaderNodeSDFToScreenUV|__xrinterface__.XRInterface|__progressbar__.ProgressBar|__refcounted__.RefCounted|__resourceimporterdynamicfont__.ResourceImporterDynamicFont|__textedit__.TextEdit|__methodtweener__.MethodTweener|__directionallight3d__.DirectionalLight3D|__editorexportplatformweb__.EditorExportPlatformWeb|__enetmultiplayerpeer__.ENetMultiplayerPeer|__classdb__.ClassDB|__physicstestmotionresult2d__.PhysicsTestMotionResult2D|__inputeventfromwindow__.InputEventFromWindow|__audioeffectlowpassfilter__.AudioEffectLowPassFilter|__visualshadernodeparticleboxemitter__.VisualShaderNodeParticleBoxEmitter|__csgprimitive3d__.CSGPrimitive3D|__curve3d__.Curve3D|__scriptlanguage__.ScriptLanguage|__callbacktweener__.CallbackTweener|__occluder3d__.Occluder3D|__colorpickerbutton__.ColorPickerButton|__rigidbody3d__.RigidBody3D|__jsonrpc__.JSONRPC|__visualshadernodecolorfunc__.VisualShaderNodeColorFunc|__animationnodeoutput__.AnimationNodeOutput|__capsuleshape3d__.CapsuleShape3D|__vehiclebody3d__.VehicleBody3D|__codeedit__.CodeEdit|__rdtextureformat__.RDTextureFormat|__tween__.Tween|__fogmaterial__.FogMaterial|__cpuparticles3d__.CPUParticles3D|__javaobject__.JavaObject|__projectsettings__.ProjectSettings|__audioeffecteq21__.AudioEffectEQ21|__udpserver__.UDPServer|__editorinspectorplugin__.EditorInspectorPlugin|__gltfdocument__.GLTFDocument|__marker2d__.Marker2D|__audiostreamplaybackresampled__.AudioStreamPlaybackResampled|__visualshadernodeoutput__.VisualShaderNodeOutput|__colorrect__.ColorRect|__xrnode3d__.XRNode3D|__streampeertls__.StreamPeerTLS|__xrcontrollertracker__.XRControllerTracker|__aescontext__.AESContext|__editorscript__.EditorScript|__ribbontrailmesh__.RibbonTrailMesh|__engineprofiler__.EngineProfiler|__fogvolume__.FogVolume|__intervaltweener__.IntervalTweener|__concavepolygonshape2d__.ConcavePolygonShape2D|__vseparator__.VSeparator|__compositoreffect__.CompositorEffect|__animationnodestatemachine__.AnimationNodeStateMachine|__line2d__.Line2D|__skeletonik3d__.SkeletonIK3D|__centercontainer__.CenterContainer|__scenestate__.SceneState|__scenetreetimer__.SceneTreeTimer|__editorproperty__.EditorProperty|__resourceimporterlayeredtexture__.ResourceImporterLayeredTexture|__resourceimporterimagefont__.ResourceImporterImageFont|__geometryinstance3d__.GeometryInstance3D|__audioeffectlowshelffilter__.AudioEffectLowShelfFilter|__gltfphysicsbody__.GLTFPhysicsBody|__animationlibrary__.AnimationLibrary|__visualshadernodeparticlemeshemitter__.VisualShaderNodeParticleMeshEmitter|__offlinemultiplayerpeer__.OfflineMultiplayerPeer|__placeholdertexture2darray__.PlaceholderTexture2DArray|__immediatemesh__.ImmediateMesh|__visualshadernodeparticlesphereemitter__.VisualShaderNodeParticleSphereEmitter|__visualshadernodeglobalexpression__.VisualShaderNodeGlobalExpression|__worldenvironment__.WorldEnvironment|__physicsdirectbodystate3d__.PhysicsDirectBodyState3D|__viewport__.Viewport|__openxrinteractionprofileeditorbase__.OpenXRInteractionProfileEditorBase|__editorscriptpicker__.EditorScriptPicker|__touchscreenbutton__.TouchScreenButton|__fileaccess__.FileAccess|__navigationpolygon__.NavigationPolygon|__material__.Material|__skeletonmodification2dccdik__.SkeletonModification2DCCDIK|__circleshape2d__.CircleShape2D|__navigationregion2d__.NavigationRegion2D|__inputeventmouse__.InputEventMouse|__gltftexture__.GLTFTexture|__visualshadernodeclamp__.VisualShaderNodeClamp|__audiobuslayout__.AudioBusLayout|__cameraattributes__.CameraAttributes|__shaderinclude__.ShaderInclude|__tubetrailmesh__.TubeTrailMesh|__openxraction__.OpenXRAction|__hslider__.HSlider|__externaltexture__.ExternalTexture|__visualshadernodeuvpolarcoord__.VisualShaderNodeUVPolarCoord|__visualshadernodeuvfunc__.VisualShaderNodeUVFunc|__optionbutton__.OptionButton|__editorsceneformatimporterblend__.EditorSceneFormatImporterBlend|__kinematiccollision2d__.KinematicCollision2D|__animationnodesync__.AnimationNodeSync|__resourcesaver__.ResourceSaver|__visualshadernodevaryingsetter__.VisualShaderNodeVaryingSetter|__physicsserver3drenderingserverhandler__.PhysicsServer3DRenderingServerHandler|__importermesh__.ImporterMesh|__streampeerextension__.StreamPeerExtension|__displayserver__.DisplayServer|__visualshadernodeouterproduct__.VisualShaderNodeOuterProduct|__graphelement__.GraphElement|__navigationobstacle3d__.NavigationObstacle3D|__editorexportplatformlinuxbsd__.EditorExportPlatformLinuxBSD|__translationdomain__.TranslationDomain|__audioeffect__.AudioEffect|__gpuparticlescollisionsphere3d__.GPUParticlesCollisionSphere3D|__audioeffectreverb__.AudioEffectReverb|__audioeffectcapture__.AudioEffectCapture|__audiostreamplaybackoggvorbis__.AudioStreamPlaybackOggVorbis|__csgtorus3d__.CSGTorus3D|__visualshadernodestep__.VisualShaderNodeStep|__audiolistener2d__.AudioListener2D|__fastnoiselite__.FastNoiseLite|__audioeffectspectrumanalyzer__.AudioEffectSpectrumAnalyzer|__gradienttexture2d__.GradientTexture2D|__editorresourceconversionplugin__.EditorResourceConversionPlugin|__visualshadernodeuintconstant__.VisualShaderNodeUIntConstant|__lightmapperrd__.LightmapperRD|__hboxcontainer__.HBoxContainer|__geometry2d__.Geometry2D|__skeletonprofile__.SkeletonProfile|__optimizedtranslation__.OptimizedTranslation|__placeholdercubemap__.PlaceholderCubemap|__scriptcreatedialog__.ScriptCreateDialog|__tilesetatlassource__.TileSetAtlasSource|__node3dgizmo__.Node3DGizmo|__audioeffecthighshelffilter__.AudioEffectHighShelfFilter|__softbody3d__.SoftBody3D|__quadmesh__.QuadMesh|__animationnodeblendtree__.AnimationNodeBlendTree|__script__.Script|__control__.Control|__texturecubemaparrayrd__.TextureCubemapArrayRD|__editortranslationparserplugin__.EditorTranslationParserPlugin|__physicsmaterial__.PhysicsMaterial|__animationnodesub2__.AnimationNodeSub2|__placeholdertexture2d__.PlaceholderTexture2D|__backbuffercopy__.BackBufferCopy|__audiostreammp3__.AudioStreamMP3|__visualshadernodevec3parameter__.VisualShaderNodeVec3Parameter|__resourceimportertexture__.ResourceImporterTexture|__inputeventscreentouch__.InputEventScreenTouch|__streampeergzip__.StreamPeerGZIP|__convexpolygonshape3d__.ConvexPolygonShape3D|__visualshadernodetextureparametertriplanar__.VisualShaderNodeTextureParameterTriplanar|__audioeffectdelay__.AudioEffectDelay|__spotlight3d__.SpotLight3D|__physicsdirectspacestate2d__.PhysicsDirectSpaceState2D|__light3d__.Light3D|__worldboundaryshape2d__.WorldBoundaryShape2D|__skeletonmodification2djiggle__.SkeletonModification2DJiggle|__missingresource__.MissingResource|__skeletonprofilehumanoid__.SkeletonProfileHumanoid|__skeleton3d__.Skeleton3D|__audiostreamplayback__.AudioStreamPlayback|__shadermaterial__.ShaderMaterial|__codehighlighter__.CodeHighlighter|__animationmixer__.AnimationMixer|__visualshadernodevec3constant__.VisualShaderNodeVec3Constant|__skeletonmodification2dfabrik__.SkeletonModification2DFABRIK|__propertytweener__.PropertyTweener|__pointlight2d__.PointLight2D|__polygonpathfinder__.PolygonPathFinder|__texture2d__.Texture2D|__panelcontainer__.PanelContainer|__xrfacetracker__.XRFaceTracker|__aspectratiocontainer__.AspectRatioContainer|__visualshadernodefresnel__.VisualShaderNodeFresnel|__navigationmeshsourcegeometrydata2d__.NavigationMeshSourceGeometryData2D|__boxmesh__.BoxMesh|__remotetransform2d__.RemoteTransform2D|__vboxcontainer__.VBoxContainer|__resourceimportermp3__.ResourceImporterMP3|__gradient__.Gradient|__inputeventgesture__.InputEventGesture|__enetpacketpeer__.ENetPacketPeer|__rduniform__.RDUniform|__inputeventkey__.InputEventKey|__openxrinteractionprofilemetadata__.OpenXRInteractionProfileMetadata|__physicsshapequeryparameters2d__.PhysicsShapeQueryParameters2D|__editorsceneformatimportergltf__.EditorSceneFormatImporterGLTF|__resourceimporteroggvorbis__.ResourceImporterOggVorbis|__styleboxflat__.StyleBoxFlat|__textmesh__.TextMesh|__visualshadernodevec2constant__.VisualShaderNodeVec2Constant|__oggpacketsequence__.OggPacketSequence|__inputeventmousemotion__.InputEventMouseMotion|__labelsettings__.LabelSettings|__parallax2d__.Parallax2D|__openxripbinding__.OpenXRIPBinding|__visualshadernodedotproduct__.VisualShaderNodeDotProduct|__webrtcpeerconnection__.WebRTCPeerConnection|__styleboxline__.StyleBoxLine|__openxrextensionwrapperextension__.OpenXRExtensionWrapperExtension|__resourceimporterobj__.ResourceImporterOBJ|__editorvcsinterface__.EditorVCSInterface|__gltfskeleton__.GLTFSkeleton|__quadoccluder3d__.QuadOccluder3D|__visualshadernodecustom__.VisualShaderNodeCustom|__flowcontainer__.FlowContainer|__physicsserver3d__.PhysicsServer3D|__pinjoint2d__.PinJoint2D|__openxrhand__.OpenXRHand|__skeletonmodifier3d__.SkeletonModifier3D|__hingejoint3d__.HingeJoint3D|__buttongroup__.ButtonGroup|__visualshadernodevec2parameter__.VisualShaderNodeVec2Parameter|__javaclasswrapper__.JavaClassWrapper|__visualshadernodecolorconstant__.VisualShaderNodeColorConstant|__inputeventshortcut__.InputEventShortcut|__openxrcompositionlayer__.OpenXRCompositionLayer|__audiostreamplaybacksynchronized__.AudioStreamPlaybackSynchronized|__httpclient__.HTTPClient|__animationnodeoneshot__.AnimationNodeOneShot|__input__.Input|__audioeffectinstance__.AudioEffectInstance|__scriptlanguageextension__.ScriptLanguageExtension|__gpuparticles2d__.GPUParticles2D|__editorresourcepreview__.EditorResourcePreview|__button__.Button|__gltfaccessor__.GLTFAccessor|__audioeffectfilter__.AudioEffectFilter|__renderscenebuffers__.RenderSceneBuffers|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gltfphysicsshape__.GLTFPhysicsShape|__compressedtexture2d__.CompressedTexture2D|__visualshadernodecurvetexture__.VisualShaderNodeCurveTexture|__light2d__.Light2D|__panel__.Panel|__audiostreamplaybackplaylist__.AudioStreamPlaybackPlaylist|__resourceimporterscene__.ResourceImporterScene|__physicsserver3dmanager__.PhysicsServer3DManager|__cylindershape3d__.CylinderShape3D|__placeholdercubemaparray__.PlaceholderCubemapArray|__canvasitem__.CanvasItem|__navigationserver2d__.NavigationServer2D|__gltftexturesampler__.GLTFTextureSampler|__audiostreammicrophone__.AudioStreamMicrophone|__gpuparticlescollisionheightfield3d__.GPUParticlesCollisionHeightField3D|__physicsshapequeryparameters3d__.PhysicsShapeQueryParameters3D|__boxcontainer__.BoxContainer|__weakref__.WeakRef|__inputeventscreendrag__.InputEventScreenDrag|__physicspointqueryparameters2d__.PhysicsPointQueryParameters2D|__segmentshape2d__.SegmentShape2D|__inputeventjoypadbutton__.InputEventJoypadButton|__texturecubemaprd__.TextureCubemapRD|__gpuparticlesattractorbox3d__.GPUParticlesAttractorBox3D|__audiolistener3d__.AudioListener3D|__editorplugin__.EditorPlugin|__openxractionmap__.OpenXRActionMap|__audioeffectlimiter__.AudioEffectLimiter|__pinjoint3d__.PinJoint3D|__physicstestmotionparameters2d__.PhysicsTestMotionParameters2D|__audiostreaminteractive__.AudioStreamInteractive|__skeletonmodification2dlookat__.SkeletonModification2DLookAt|__label__.Label|__bone2d__.Bone2D|__dampedspringjoint2d__.DampedSpringJoint2D|__cubemaparray__.CubemapArray|__physicsrayqueryparameters2d__.PhysicsRayQueryParameters2D|__texturebutton__.TextureButton|__renderdatard__.RenderDataRD|__multimeshinstance3d__.MultiMeshInstance3D|__audiostream__.AudioStream|__navigationlink3d__.NavigationLink3D|__websocketmultiplayerpeer__.WebSocketMultiplayerPeer|__visualshadernoderandomrange__.VisualShaderNodeRandomRange|__upnp__.UPNP|__reflectionprobe__.ReflectionProbe|__animationnodeadd2__.AnimationNodeAdd2|__vehiclewheel3d__.VehicleWheel3D|__fbxstate__.FBXState|__csgshape3d__.CSGShape3D|__audioeffecteq6__.AudioEffectEQ6|__gdscript__.GDScript|__meshconvexdecompositionsettings__.MeshConvexDecompositionSettings|__visualshadernodebooleanparameter__.VisualShaderNodeBooleanParameter|__inputeventmagnifygesture__.InputEventMagnifyGesture|__editorresourcepreviewgenerator__.EditorResourcePreviewGenerator|__bitmap__.BitMap|__shortcut__.Shortcut|__enetconnection__.ENetConnection|__gridmapeditorplugin__.GridMapEditorPlugin|__multiplayerapiextension__.MultiplayerAPIExtension|__rdshadersource__.RDShaderSource|__animationnode__.AnimationNode|__inputmap__.InputMap|__astar2d__.AStar2D|__editorexportplatformandroid__.EditorExportPlatformAndroid|__curvetexture__.CurveTexture|__hsplitcontainer__.HSplitContainer|__visualshadernodescreenuvtosdf__.VisualShaderNodeScreenUVToSDF|__audioeffectpitchshift__.AudioEffectPitchShift|__capsuleshape2d__.CapsuleShape2D|__visualshadernodevectorfunc__.VisualShaderNodeVectorFunc|__pckpacker__.PCKPacker|__audiostreamsynchronized__.AudioStreamSynchronized|__upnpdevice__.UPNPDevice|__renderscenedata__.RenderSceneData|__directionallight2d__.DirectionalLight2D|__compositor__.Compositor|__visualshadernodevec4parameter__.VisualShaderNodeVec4Parameter|__raycast3d__.RayCast3D|__visualshadernodeuintop__.VisualShaderNodeUIntOp|__editorfilesystemdirectory__.EditorFileSystemDirectory|__resourceimportershaderfile__.ResourceImporterShaderFile|__scripteditorbase__.ScriptEditorBase|__inputeventmousebutton__.InputEventMouseButton|__rdattachmentformat__.RDAttachmentFormat|__convexpolygonshape2d__.ConvexPolygonShape2D|__xrhandtracker__.XRHandTracker|__visualshadernodefloatconstant__.VisualShaderNodeFloatConstant|__editorfeatureprofile__.EditorFeatureProfile|__visualshadernodevaryinggetter__.VisualShaderNodeVaryingGetter|__xrbodytracker__.XRBodyTracker|__visualshadernodesample3d__.VisualShaderNodeSample3D|__collisionobject2d__.CollisionObject2D|__textparagraph__.TextParagraph|__audioeffecteq__.AudioEffectEQ|__packetpeer__.PacketPeer|__curve2d__.Curve2D|__physicsserver2dextension__.PhysicsServer2DExtension|__editortoaster__.EditorToaster|__editorinterface__.EditorInterface|__gdscriptsyntaxhighlighter__.GDScriptSyntaxHighlighter|__editorcontextmenuplugin__.EditorContextMenuPlugin|__configfile__.ConfigFile|__curvexyztexture__.CurveXYZTexture|__shapecast2d__.ShapeCast2D|__nativemenu__.NativeMenu|__springbonesimulator3d__.SpringBoneSimulator3D|__bonemap__.BoneMap|__audioeffecthardlimiter__.AudioEffectHardLimiter|__inputeventmidi__.InputEventMIDI|__zipreader__.ZIPReader|__canvasmodulate__.CanvasModulate|__skeletonmodificationstack2d__.SkeletonModificationStack2D|__navigationlink2d__.NavigationLink2D|__viewporttexture__.ViewportTexture|__visibleonscreenenabler2d__.VisibleOnScreenEnabler2D|__webrtcpeerconnectionextension__.WebRTCPeerConnectionExtension|__graphnode__.GraphNode|__audiosample__.AudioSample|__csgcylinder3d__.CSGCylinder3D|__skeleton2d__.Skeleton2D|__node2d__.Node2D|__hflowcontainer__.HFlowContainer|__spritebase3d__.SpriteBase3D|__mainloop__.MainLoop|__videostreamtheora__.VideoStreamTheora|__image__.Image|__navigationpathqueryresult2d__.NavigationPathQueryResult2D|__spheremesh__.SphereMesh|__boneattachment3d__.BoneAttachment3D|__font__.Font|__gltfdocumentextension__.GLTFDocumentExtension|__visualshadernodecomment__.VisualShaderNodeComment|__visualshadernodetransformfunc__.VisualShaderNodeTransformFunc|__textline__.TextLine|__importermeshinstance3d__.ImporterMeshInstance3D|__imagetexture3d__.ImageTexture3D|__path2d__.Path2D|__springbonecollisioncapsule3d__.SpringBoneCollisionCapsule3D|__fontfile__.FontFile|__openxrinteractionprofileeditor__.OpenXRInteractionProfileEditor|__inputeventpangesture__.InputEventPanGesture|__physicalbone3d__.PhysicalBone3D|__audioeffectspectrumanalyzerinstance__.AudioEffectSpectrumAnalyzerInstance|__animationnodestatemachineplayback__.AnimationNodeStateMachinePlayback|__texturelayered__.TextureLayered|__packetpeerudp__.PacketPeerUDP|__placeholdermaterial__.PlaceholderMaterial|__gradienttexture1d__.GradientTexture1D|__editornode3dgizmo__.EditorNode3DGizmo|__editorsyntaxhighlighter__.EditorSyntaxHighlighter|__openxrcompositionlayercylinder__.OpenXRCompositionLayerCylinder|__textserverdummy__.TextServerDummy|__visualshadernodesdfraymarch__.VisualShaderNodeSDFRaymarch|__instanceplaceholder__.InstancePlaceholder|__physicalskymaterial__.PhysicalSkyMaterial|__diraccess__.DirAccess|__texture2darray__.Texture2DArray|__gridmap__.GridMap|__skeletonmodification2d__.SkeletonModification2D|__missingnode__.MissingNode|__rdpipelinespecializationconstant__.RDPipelineSpecializationConstant|__gpuparticlesattractorsphere3d__.GPUParticlesAttractorSphere3D|__gdextension__.GDExtension|__basematerial3d__.BaseMaterial3D|__videostream__.VideoStream|__animationnodeblend3__.AnimationNodeBlend3|__ninepatchrect__.NinePatchRect|__visualshadernodeintconstant__.VisualShaderNodeIntConstant|__moviewriter__.MovieWriter|__compressedtexture2darray__.CompressedTexture2DArray|__audiostreamoggvorbis__.AudioStreamOggVorbis|__world2d__.World2D|__cpuparticles2d__.CPUParticles2D|__navigationagent3d__.NavigationAgent3D|__subviewport__.SubViewport|__audiostreamgenerator__.AudioStreamGenerator|__editorundoredomanager__.EditorUndoRedoManager|__theme__.Theme|__meshdatatool__.MeshDataTool|__visualshadernodeparticleoutput__.VisualShaderNodeParticleOutput|__audiostreamrandomizer__.AudioStreamRandomizer|__camera3d__.Camera3D|__regex__.RegEx|__visualshadernodebooleanconstant__.VisualShaderNodeBooleanConstant|__visualshadernoderemap__.VisualShaderNodeRemap|__textureprogressbar__.TextureProgressBar|__expression__.Expression|__range__.Range|__visualshadernodereroute__.VisualShaderNodeReroute|__gltflight__.GLTFLight|__particleprocessmaterial__.ParticleProcessMaterial|__arrayoccluder3d__.ArrayOccluder3D|__retargetmodifier3d__.RetargetModifier3D|__scrollbar__.ScrollBar|__audioeffectbandlimitfilter__.AudioEffectBandLimitFilter|__rootmotionview__.RootMotionView|__audioeffectpanner__.AudioEffectPanner|__renderdataextension__.RenderDataExtension|__rigidbody2d__.RigidBody2D|__hashingcontext__.HashingContext|__renderingdevice__.RenderingDevice|__translationserver__.TranslationServer|__physicsserver2d__.PhysicsServer2D|__editorresourcepicker__.EditorResourcePicker|__popup__.Popup|__renderscenebuffersrd__.RenderSceneBuffersRD|__xmlparser__.XMLParser|__visualshadernodeuintparameter__.VisualShaderNodeUIntParameter|__themedb__.ThemeDB|__gpuparticlesattractor3d__.GPUParticlesAttractor3D|__xrserver__.XRServer|__rdpipelinecolorblendstateattachment__.RDPipelineColorBlendStateAttachment|__inputevent__.InputEvent|__physicsdirectbodystate3dextension__.PhysicsDirectBodyState3DExtension|__openxrdpadbindingmodifier__.OpenXRDpadBindingModifier|__container__.Container|__staticbody3d__.StaticBody3D|__physicsrayqueryparameters3d__.PhysicsRayQueryParameters3D|__navigationpathqueryparameters3d__.NavigationPathQueryParameters3D|__itemlist__.ItemList|__imagetexturelayered__.ImageTextureLayered|__statusindicator__.StatusIndicator|__editorsceneformatimporterfbx2gltf__.EditorSceneFormatImporterFBX2GLTF|__editorcommandpalette__.EditorCommandPalette|__subviewportcontainer__.SubViewportContainer|__visualshadernodeuintfunc__.VisualShaderNodeUIntFunc|__visualshadernodeproximityfade__.VisualShaderNodeProximityFade|__springbonecollisionplane3d__.SpringBoneCollisionPlane3D|__gpuparticlescollisionbox3d__.GPUParticlesCollisionBox3D|__popuppanel__.PopupPanel|__packetpeerdtls__.PacketPeerDTLS|__animation__.Animation|__physicsserver2dmanager__.PhysicsServer2DManager|__editorsettings__.EditorSettings|__staticbody2d__.StaticBody2D|__gpuparticlesattractorvectorfield3d__.GPUParticlesAttractorVectorField3D|__visualshadernodescreennormalworldspace__.VisualShaderNodeScreenNormalWorldSpace|__csgbox3d__.CSGBox3D|__regexmatch__.RegExMatch|__vscrollbar__.VScrollBar|__collisionpolygon2d__.CollisionPolygon2D|__visualshadernodevectorrefract__.VisualShaderNodeVectorRefract|__stylebox__.StyleBox|__concavepolygonshape3d__.ConcavePolygonShape3D|__texturelayeredrd__.TextureLayeredRD|__astar3d__.AStar3D|__animationnodetimeseek__.AnimationNodeTimeSeek|__undoredo__.UndoRedo|__editorexportpreset__.EditorExportPreset|__openxrinterface__.OpenXRInterface|__renderscenebuffersextension__.RenderSceneBuffersExtension|__trianglemesh__.TriangleMesh|__resourceimporter__.ResourceImporter|__audiostreamwav__.AudioStreamWAV|__visualshadernodemultiplyadd__.VisualShaderNodeMultiplyAdd|__visualshadernodefloatfunc__.VisualShaderNodeFloatFunc|__webrtcdatachannel__.WebRTCDataChannel|__physicstestmotionparameters3d__.PhysicsTestMotionParameters3D|__systemfont__.SystemFont|__multiplayerapi__.MultiplayerAPI|__animationrootnode__.AnimationRootNode|__animationnodeextension__.AnimationNodeExtension|__xrfacemodifier3d__.XRFaceModifier3D|__prismmesh__.PrismMesh|__noise__.Noise|__crypto__.Crypto|__texturerect__.TextureRect|__audioeffecteq10__.AudioEffectEQ10|__object__.Object|__physicsbody2d__.PhysicsBody2D|__characterbody2d__.CharacterBody2D|__canvastexture__.CanvasTexture|__scriptextension__.ScriptExtension|__colorpicker__.ColorPicker|__editorsceneformatimporterufbx__.EditorSceneFormatImporterUFBX|__textserverextension__.TextServerExtension|__audioeffectcompressor__.AudioEffectCompressor|__hmaccontext__.HMACContext|__engine__.Engine|__springbonecollisionsphere3d__.SpringBoneCollisionSphere3D|__scenemultiplayer__.SceneMultiplayer|__csgmesh3d__.CSGMesh3D|__resourceimporterbmfont__.ResourceImporterBMFont|__tilemap__.TileMap|__navigationobstacle2d__.NavigationObstacle2D|__visualshadernodevectorcompose__.VisualShaderNodeVectorCompose|__editorinspector__.EditorInspector|__httprequest__.HTTPRequest|__encodedobjectasid__.EncodedObjectAsID|__area2d__.Area2D|__csgcombiner3d__.CSGCombiner3D|__uniformsetcacherd__.UniformSetCacheRD|__sliderjoint3d__.SliderJoint3D|__capsulemesh__.CapsuleMesh|__visualshadernodetransformcompose__.VisualShaderNodeTransformCompose|__skeletonmodification2dtwoboneik__.SkeletonModification2DTwoBoneIK|__visualshadernodetexture2darray__.VisualShaderNodeTexture2DArray|__renderscenedatard__.RenderSceneDataRD|__marshalls__.Marshalls|__visualshadernodefloatparameter__.VisualShaderNodeFloatParameter|__tabbar__.TabBar|__geometry3d__.Geometry3D|__meshinstance2d__.MeshInstance2D|__performance__.Performance|__visualshadernodevectorbase__.VisualShaderNodeVectorBase|__rdshaderfile__.RDShaderFile|__openxractionbindingmodifier__.OpenXRActionBindingModifier|__joint3d__.Joint3D|__x509certificate__.X509Certificate|__visualshadernodevarying__.VisualShaderNodeVarying|__editorfilesystem__.EditorFileSystem|__omnilight3d__.OmniLight3D|__multiplayerpeer__.MultiplayerPeer|__standardmaterial3d__.StandardMaterial3D|__node3d__.Node3D|__visualshadernodevectordecompose__.VisualShaderNodeVectorDecompose|__compressedtexture3d__.CompressedTexture3D|__inputeventwithmodifiers__.InputEventWithModifiers|__gltfdocumentextensionconvertimportermesh__.GLTFDocumentExtensionConvertImporterMesh|__timer__.Timer|__webrtcmultiplayerpeer__.WebRTCMultiplayerPeer|__editorexportplugin__.EditorExportPlugin|__visualshadernodeparameterref__.VisualShaderNodeParameterRef|__rdshaderspirv__.RDShaderSPIRV|__audiostreamplaybackpolyphonic__.AudioStreamPlaybackPolyphonic|__menubutton__.MenuButton|__rdpipelinecolorblendstate__.RDPipelineColorBlendState|__navigationpathqueryresult3d__.NavigationPathQueryResult3D|__scrollcontainer__.ScrollContainer|__springbonecollision3d__.SpringBoneCollision3D|__editorexportplatformmacos__.EditorExportPlatformMacOS|__tcpserver__.TCPServer|__multiplayerspawner__.MultiplayerSpawner|__zippacker__.ZIPPacker|__animationnodeanimation__.AnimationNodeAnimation|__polygon2d__.Polygon2D|__lookatmodifier3d__.LookAtModifier3D|__shaderglobalsoverride__.ShaderGlobalsOverride|__springarm3d__.SpringArm3D|__streampeerbuffer__.StreamPeerBuffer|__sphereshape3d__.SphereShape3D|__hscrollbar__.HScrollBar|__visualshadernodeif__.VisualShaderNodeIf|__vslider__.VSlider|__physicspointqueryparameters3d__.PhysicsPointQueryParameters3D|__editorselection__.EditorSelection|__parallaxlayer__.ParallaxLayer|__compressedcubemaparray__.CompressedCubemapArray|__audiostreampolyphonic__.AudioStreamPolyphonic:
    """
				Virtual method to be implemented by the user. Returns a `Control` node that should be used as a tooltip instead of the default one. `for_text` is the return value of `get_tooltip`.
				The returned node must be of type `Control` or Control-derived. It can have child nodes of any type. It is freed when the tooltip disappears, so make sure you always provide a new instance (if you want to use a pre-existing node from your scene tree, you can duplicate it and pass the duplicated instance). When `null` or a non-Control node is returned, the default tooltip will be used instead.
				The returned node will be added as child to a `PopupPanel`, so you should only provide the contents of that panel. That `PopupPanel` can be themed using `Theme.set_stylebox` for the type `"TooltipPanel"` (see `tooltip_text` for an example).
				**Note:** The tooltip is shrunk to minimal size. If you want to ensure it's fully visible, you might want to set its `custom_minimum_size` to some non-zero value.
				**Note:** The node (and any relevant children) should have their `CanvasItem.visible` set to `true` when returned, otherwise, the viewport that instantiates it will not be able to calculate its minimum size reliably.
				**Note:** If overridden, this method is called even if `get_tooltip` returns an empty string. When this happens with the default tooltip, it is not displayed. To copy this behavior, return `null` in this method when `for_text` is empty.
				**Example:** Use a constructed node as a tooltip:
				
				```gdscript
				func _make_custom_tooltip(for_text):
					var label = Label.new()
					label.text = for_text
					return label
				```
				
				
				**Example:** Usa a scene instance as a tooltip:
				
				```gdscript
				func _make_custom_tooltip(for_text):
					var tooltip = preload("res://some_tooltip_scene.tscn").instantiate()
					tooltip.get_node("Label").text = for_text
					return tooltip
				```
				
				
			"""
    pass

  def _gui_input(self, event:__inputevent__.InputEvent)->None:
    """
				Virtual method to be implemented by the user. Override this method to handle and accept inputs on UI elements. See also `accept_event`.
				**Example:** Click on the control to print a message:
				
				```gdscript
				func _gui_input(event):
					if event is InputEventMouseButton:
						if event.button_index == MOUSE_BUTTON_LEFT and event.pressed:
							print("I've been clicked D:")
				```
				
				
				If the `event` inherits `InputEventMouse`, this method will **not** be called when:
				- the control's `mouse_filter` is set to `constant MOUSE_FILTER_IGNORE`;
				- the control is obstructed by another control on top, that doesn't have `mouse_filter` set to `constant MOUSE_FILTER_IGNORE`;
				- the control's parent has `mouse_filter` set to `constant MOUSE_FILTER_STOP` or has accepted the event;
				- the control's parent has `clip_contents` enabled and the `event`'s position is outside the parent's rectangle;
				- the `event`'s position is outside the control (see `_has_point`).
				**Note:** The `event`'s position is relative to this control's origin.
			"""
    pass

  def accept_event(self)->None:
    """
				Marks an input event as handled. Once you accept an input event, it stops propagating, even to nodes listening to `Node._unhandled_input` or `Node._unhandled_key_input`.
				**Note:** This does not affect the methods in `Input`, only the way events are propagated.
			"""
    pass

  def get_minimum_size(self)->__core__.Vector2:
    """
				Returns the minimum size for this control. See `custom_minimum_size`.
			"""
    pass

  def get_combined_minimum_size(self)->__core__.Vector2:
    """
				Returns combined minimum size from `custom_minimum_size` and `get_minimum_size`.
			"""
    pass

  def set_anchors_preset(self, preset:int , keep_offsets:bool=False)->None:
    """
				Sets the anchors to a `preset` from `enum Control.LayoutPreset` enum. This is the code equivalent to using the Layout menu in the 2D editor.
				If `keep_offsets` is `true`, control's position will also be updated.
			"""
    pass

  def set_offsets_preset(self, preset:int , resize_mode:int =0, margin:int=0)->None:
    """
				Sets the offsets to a `preset` from `enum Control.LayoutPreset` enum. This is the code equivalent to using the Layout menu in the 2D editor.
				Use parameter `resize_mode` with constants from `enum Control.LayoutPresetMode` to better determine the resulting size of the `Control`. Constant size will be ignored if used with presets that change size, e.g. `constant PRESET_LEFT_WIDE`.
				Use parameter `margin` to determine the gap between the `Control` and the edges.
			"""
    pass

  def set_anchors_and_offsets_preset(self, preset:int , resize_mode:int =0, margin:int=0)->None:
    """
				Sets both anchor preset and offset preset. See `set_anchors_preset` and `set_offsets_preset`.
			"""
    pass

  def set_anchor(self, side:int , anchor:float, keep_offset:bool=False, push_opposite_anchor:bool=True)->None:
    """
				Sets the anchor for the specified `enum Side` to `anchor`. A setter method for `anchor_bottom`, `anchor_left`, `anchor_right` and `anchor_top`.
				If `keep_offset` is `true`, offsets aren't updated after this operation.
				If `push_opposite_anchor` is `true` and the opposite anchor overlaps this anchor, the opposite one will have its value overridden. For example, when setting left anchor to 1 and the right anchor has value of 0.5, the right anchor will also get value of 1. If `push_opposite_anchor` was `false`, the left anchor would get value 0.5.
			"""
    pass

  def get_anchor(self, side:int )->float:
    """
				Returns the anchor for the specified `enum Side`. A getter method for `anchor_bottom`, `anchor_left`, `anchor_right` and `anchor_top`.
			"""
    pass

  def set_offset(self, side:int , offset:float)->None:
    """
				Sets the offset for the specified `enum Side` to `offset`. A setter method for `offset_bottom`, `offset_left`, `offset_right` and `offset_top`.
			"""
    pass

  def get_offset(self, offset:int )->float:
    """
				Returns the offset for the specified `enum Side`. A getter method for `offset_bottom`, `offset_left`, `offset_right` and `offset_top`.
			"""
    pass

  def set_anchor_and_offset(self, side:int , anchor:float, offset:float, push_opposite_anchor:bool=False)->None:
    """
				Works the same as `set_anchor`, but instead of `keep_offset` argument and automatic update of offset, it allows to set the offset yourself (see `set_offset`).
			"""
    pass

  def set_begin(self, position:__core__.Vector2)->None:
    """
				Sets `offset_left` and `offset_top` at the same time. Equivalent of changing `position`.
			"""
    pass

  def set_end(self, position:__core__.Vector2)->None:
    """
				Sets `offset_right` and `offset_bottom` at the same time.
			"""
    pass

  def set_position(self, position:__core__.Vector2, keep_offsets:bool=False)->None:
    """
				Sets the `position` to given `position`.
				If `keep_offsets` is `true`, control's anchors will be updated instead of offsets.
			"""
    pass

  def set_size(self, size:__core__.Vector2, keep_offsets:bool=False)->None:
    """
				Sets the size (see `size`).
				If `keep_offsets` is `true`, control's anchors will be updated instead of offsets.
			"""
    pass

  def reset_size(self)->None:
    """
				Resets the size to `get_combined_minimum_size`. This is equivalent to calling `set_size(Vector2())` (or any size below the minimum).
			"""
    pass

  def set_custom_minimum_size(self, size:__core__.Vector2)->None:
    """"""
    pass

  def set_global_position(self, position:__core__.Vector2, keep_offsets:bool=False)->None:
    """
				Sets the `global_position` to given `position`.
				If `keep_offsets` is `true`, control's anchors will be updated instead of offsets.
			"""
    pass

  def set_rotation(self, radians:float)->None:
    """"""
    pass

  def set_rotation_degrees(self, degrees:float)->None:
    """"""
    pass

  def set_scale(self, scale:__core__.Vector2)->None:
    """"""
    pass

  def set_pivot_offset(self, pivot_offset:__core__.Vector2)->None:
    """"""
    pass

  def get_begin(self)->__core__.Vector2:
    """
				Returns `offset_left` and `offset_top`. See also `position`.
			"""
    pass

  def get_end(self)->__core__.Vector2:
    """
				Returns `offset_right` and `offset_bottom`.
			"""
    pass

  def get_position(self)->__core__.Vector2:
    """"""
    pass

  def get_size(self)->__core__.Vector2:
    """"""
    pass

  def get_rotation(self)->float:
    """"""
    pass

  def get_rotation_degrees(self)->float:
    """"""
    pass

  def get_scale(self)->__core__.Vector2:
    """"""
    pass

  def get_pivot_offset(self)->__core__.Vector2:
    """"""
    pass

  def get_custom_minimum_size(self)->__core__.Vector2:
    """"""
    pass

  def get_parent_area_size(self)->__core__.Vector2:
    """
				Returns the width/height occupied in the parent control.
			"""
    pass

  def get_global_position(self)->__core__.Vector2:
    """"""
    pass

  def get_screen_position(self)->__core__.Vector2:
    """
				Returns the position of this `Control` in global screen coordinates (i.e. taking window position into account). Mostly useful for editor plugins.
				Equals to `global_position` if the window is embedded (see `Viewport.gui_embed_subwindows`).
				**Example:** Show a popup at the mouse position:
				```gdscript
				popup_menu.position = get_screen_position() + get_local_mouse_position()
				popup_menu.reset_size()
				popup_menu.popup()
				```
			"""
    pass

  def get_rect(self)->__core__.Rect2:
    """
				Returns the position and size of the control in the coordinate system of the containing node. See `position`, `scale` and `size`.
				**Note:** If `rotation` is not the default rotation, the resulting size is not meaningful.
				**Note:** Setting `Viewport.gui_snap_controls_to_pixels` to `true` can lead to rounding inaccuracies between the displayed control and the returned `Rect2`.
			"""
    pass

  def get_global_rect(self)->__core__.Rect2:
    """
				Returns the position and size of the control relative to the containing canvas. See `global_position` and `size`.
				**Note:** If the node itself or any parent `CanvasItem` between the node and the canvas have a non default rotation or skew, the resulting size is likely not meaningful.
				**Note:** Setting `Viewport.gui_snap_controls_to_pixels` to `true` can lead to rounding inaccuracies between the displayed control and the returned `Rect2`.
			"""
    pass

  def set_focus_mode(self, mode:int )->None:
    """"""
    pass

  def get_focus_mode(self)->int:
    """"""
    pass

  def has_focus(self)->bool:
    """
				Returns `true` if this is the current focused control. See `focus_mode`.
			"""
    pass

  def grab_focus(self)->None:
    """
				Steal the focus from another control and become the focused control (see `focus_mode`).
				**Note:** Using this method together with `Callable.call_deferred` makes it more reliable, especially when called inside `Node._ready`.
			"""
    pass

  def release_focus(self)->None:
    """
				Give up the focus. No other control will be able to receive input.
			"""
    pass

  def find_prev_valid_focus(self)->__menubar__.MenuBar|__vscrollbar__.VScrollBar|__vsplitcontainer__.VSplitContainer|__graphelement__.GraphElement|__button__.Button|__graphnode__.GraphNode|__hflowcontainer__.HFlowContainer|__panel__.Panel|__openxrbindingmodifiereditor__.OpenXRBindingModifierEditor|__progressbar__.ProgressBar|__graphframe__.GraphFrame|__textedit__.TextEdit|__boxcontainer__.BoxContainer|__margincontainer__.MarginContainer|__hboxcontainer__.HBoxContainer|__openxrinteractionprofileeditor__.OpenXRInteractionProfileEditor|__tabcontainer__.TabContainer|__hseparator__.HSeparator|__control__.Control|__colorpickerbutton__.ColorPickerButton|__tree__.Tree|__label__.Label|__lineedit__.LineEdit|__texturebutton__.TextureButton|__richtextlabel__.RichTextLabel|__texturerect__.TextureRect|__slider__.Slider|__codeedit__.CodeEdit|__colorpicker__.ColorPicker|__ninepatchrect__.NinePatchRect|__colorrect__.ColorRect|__graphedit__.GraphEdit|__vflowcontainer__.VFlowContainer|__editorinspector__.EditorInspector|__editorspinslider__.EditorSpinSlider|__vseparator__.VSeparator|__panelcontainer__.PanelContainer|__centercontainer__.CenterContainer|__editorproperty__.EditorProperty|__aspectratiocontainer__.AspectRatioContainer|__checkbox__.CheckBox|__separator__.Separator|__textureprogressbar__.TextureProgressBar|__range__.Range|__vboxcontainer__.VBoxContainer|__tabbar__.TabBar|__hsplitcontainer__.HSplitContainer|__scrollbar__.ScrollBar|__checkbutton__.CheckButton|__gridcontainer__.GridContainer|__openxrinteractionprofileeditorbase__.OpenXRInteractionProfileEditorBase|__editorscriptpicker__.EditorScriptPicker|__splitcontainer__.SplitContainer|__editorresourcepicker__.EditorResourcePicker|__spinbox__.SpinBox|__videostreamplayer__.VideoStreamPlayer|__referencerect__.ReferenceRect|__scripteditor__.ScriptEditor|__scripteditorbase__.ScriptEditorBase|__menubutton__.MenuButton|__container__.Container|__flowcontainer__.FlowContainer|__scrollcontainer__.ScrollContainer|__itemlist__.ItemList|__editortoaster__.EditorToaster|__subviewportcontainer__.SubViewportContainer|__filesystemdock__.FileSystemDock|__hslider__.HSlider|__hscrollbar__.HScrollBar|__basebutton__.BaseButton|__vslider__.VSlider|__optionbutton__.OptionButton|__linkbutton__.LinkButton:
    """
				Finds the previous (above in the tree) `Control` that can receive the focus.
			"""
    pass

  def find_next_valid_focus(self)->__menubar__.MenuBar|__vscrollbar__.VScrollBar|__vsplitcontainer__.VSplitContainer|__graphelement__.GraphElement|__button__.Button|__graphnode__.GraphNode|__hflowcontainer__.HFlowContainer|__panel__.Panel|__openxrbindingmodifiereditor__.OpenXRBindingModifierEditor|__progressbar__.ProgressBar|__graphframe__.GraphFrame|__textedit__.TextEdit|__boxcontainer__.BoxContainer|__margincontainer__.MarginContainer|__hboxcontainer__.HBoxContainer|__openxrinteractionprofileeditor__.OpenXRInteractionProfileEditor|__tabcontainer__.TabContainer|__hseparator__.HSeparator|__control__.Control|__colorpickerbutton__.ColorPickerButton|__tree__.Tree|__label__.Label|__lineedit__.LineEdit|__texturebutton__.TextureButton|__richtextlabel__.RichTextLabel|__texturerect__.TextureRect|__slider__.Slider|__codeedit__.CodeEdit|__colorpicker__.ColorPicker|__ninepatchrect__.NinePatchRect|__colorrect__.ColorRect|__graphedit__.GraphEdit|__vflowcontainer__.VFlowContainer|__editorinspector__.EditorInspector|__editorspinslider__.EditorSpinSlider|__vseparator__.VSeparator|__panelcontainer__.PanelContainer|__centercontainer__.CenterContainer|__editorproperty__.EditorProperty|__aspectratiocontainer__.AspectRatioContainer|__checkbox__.CheckBox|__separator__.Separator|__textureprogressbar__.TextureProgressBar|__range__.Range|__vboxcontainer__.VBoxContainer|__tabbar__.TabBar|__hsplitcontainer__.HSplitContainer|__scrollbar__.ScrollBar|__checkbutton__.CheckButton|__gridcontainer__.GridContainer|__openxrinteractionprofileeditorbase__.OpenXRInteractionProfileEditorBase|__editorscriptpicker__.EditorScriptPicker|__splitcontainer__.SplitContainer|__editorresourcepicker__.EditorResourcePicker|__spinbox__.SpinBox|__videostreamplayer__.VideoStreamPlayer|__referencerect__.ReferenceRect|__scripteditor__.ScriptEditor|__scripteditorbase__.ScriptEditorBase|__menubutton__.MenuButton|__container__.Container|__flowcontainer__.FlowContainer|__scrollcontainer__.ScrollContainer|__itemlist__.ItemList|__editortoaster__.EditorToaster|__subviewportcontainer__.SubViewportContainer|__filesystemdock__.FileSystemDock|__hslider__.HSlider|__hscrollbar__.HScrollBar|__basebutton__.BaseButton|__vslider__.VSlider|__optionbutton__.OptionButton|__linkbutton__.LinkButton:
    """
				Finds the next (below in the tree) `Control` that can receive the focus.
			"""
    pass

  def find_valid_focus_neighbor(self, side:int )->__menubar__.MenuBar|__vscrollbar__.VScrollBar|__vsplitcontainer__.VSplitContainer|__graphelement__.GraphElement|__button__.Button|__graphnode__.GraphNode|__hflowcontainer__.HFlowContainer|__panel__.Panel|__openxrbindingmodifiereditor__.OpenXRBindingModifierEditor|__progressbar__.ProgressBar|__graphframe__.GraphFrame|__textedit__.TextEdit|__boxcontainer__.BoxContainer|__margincontainer__.MarginContainer|__hboxcontainer__.HBoxContainer|__openxrinteractionprofileeditor__.OpenXRInteractionProfileEditor|__tabcontainer__.TabContainer|__hseparator__.HSeparator|__control__.Control|__colorpickerbutton__.ColorPickerButton|__tree__.Tree|__label__.Label|__lineedit__.LineEdit|__texturebutton__.TextureButton|__richtextlabel__.RichTextLabel|__texturerect__.TextureRect|__slider__.Slider|__codeedit__.CodeEdit|__colorpicker__.ColorPicker|__ninepatchrect__.NinePatchRect|__colorrect__.ColorRect|__graphedit__.GraphEdit|__vflowcontainer__.VFlowContainer|__editorinspector__.EditorInspector|__editorspinslider__.EditorSpinSlider|__vseparator__.VSeparator|__panelcontainer__.PanelContainer|__centercontainer__.CenterContainer|__editorproperty__.EditorProperty|__aspectratiocontainer__.AspectRatioContainer|__checkbox__.CheckBox|__separator__.Separator|__textureprogressbar__.TextureProgressBar|__range__.Range|__vboxcontainer__.VBoxContainer|__tabbar__.TabBar|__hsplitcontainer__.HSplitContainer|__scrollbar__.ScrollBar|__checkbutton__.CheckButton|__gridcontainer__.GridContainer|__openxrinteractionprofileeditorbase__.OpenXRInteractionProfileEditorBase|__editorscriptpicker__.EditorScriptPicker|__splitcontainer__.SplitContainer|__editorresourcepicker__.EditorResourcePicker|__spinbox__.SpinBox|__videostreamplayer__.VideoStreamPlayer|__referencerect__.ReferenceRect|__scripteditor__.ScriptEditor|__scripteditorbase__.ScriptEditorBase|__menubutton__.MenuButton|__container__.Container|__flowcontainer__.FlowContainer|__scrollcontainer__.ScrollContainer|__itemlist__.ItemList|__editortoaster__.EditorToaster|__subviewportcontainer__.SubViewportContainer|__filesystemdock__.FileSystemDock|__hslider__.HSlider|__hscrollbar__.HScrollBar|__basebutton__.BaseButton|__vslider__.VSlider|__optionbutton__.OptionButton|__linkbutton__.LinkButton:
    """
				Finds the next `Control` that can receive the focus on the specified `enum Side`.
				**Note:** This is different from `get_focus_neighbor`, which returns the path of a specified focus neighbor.
			"""
    pass

  def set_h_size_flags(self, flags:int)->None:
    """"""
    pass

  def get_h_size_flags(self)->int:
    """"""
    pass

  def set_stretch_ratio(self, ratio:float)->None:
    """"""
    pass

  def get_stretch_ratio(self)->float:
    """"""
    pass

  def set_v_size_flags(self, flags:int)->None:
    """"""
    pass

  def get_v_size_flags(self)->int:
    """"""
    pass

  def set_theme(self, theme:__theme__.Theme)->None:
    """"""
    pass

  def get_theme(self)->__theme__.Theme:
    """"""
    pass

  def set_theme_type_variation(self, theme_type:__core__.StringName|str)->None:
    """"""
    pass

  def get_theme_type_variation(self)->__core__.StringName:
    """"""
    pass

  def begin_bulk_theme_override(self)->None:
    """
				Prevents `*_theme_*_override` methods from emitting `constant NOTIFICATION_THEME_CHANGED` until `end_bulk_theme_override` is called.
			"""
    pass

  def end_bulk_theme_override(self)->None:
    """
				Ends a bulk theme override update. See `begin_bulk_theme_override`.
			"""
    pass

  def add_theme_icon_override(self, name:__core__.StringName|str, texture:__texture2d__.Texture2D)->None:
    """
				Creates a local override for a theme icon with the specified `name`. Local overrides always take precedence when fetching theme items for the control. An override can be removed with `remove_theme_icon_override`.
				See also `get_theme_icon`.
			"""
    pass

  def add_theme_stylebox_override(self, name:__core__.StringName|str, stylebox:__stylebox__.StyleBox)->None:
    """
				Creates a local override for a theme `StyleBox` with the specified `name`. Local overrides always take precedence when fetching theme items for the control. An override can be removed with `remove_theme_stylebox_override`.
				See also `get_theme_stylebox`.
				**Example:** Modify a property in a `StyleBox` by duplicating it:
				
				```gdscript
				# The snippet below assumes the child node "MyButton" has a StyleBoxFlat assigned.
				# Resources are shared across instances, so we need to duplicate it
				# to avoid modifying the appearance of all other buttons.
				var new_stylebox_normal = $MyButton.get_theme_stylebox("normal").duplicate()
				new_stylebox_normal.border_width_top = 3
				new_stylebox_normal.border_color = Color(0, 1, 0.5)
				$MyButton.add_theme_stylebox_override("normal", new_stylebox_normal)
				# Remove the stylebox override.
				$MyButton.remove_theme_stylebox_override("normal")
				```
				
				
			"""
    pass

  def add_theme_font_override(self, name:__core__.StringName|str, font:__font__.Font)->None:
    """
				Creates a local override for a theme `Font` with the specified `name`. Local overrides always take precedence when fetching theme items for the control. An override can be removed with `remove_theme_font_override`.
				See also `get_theme_font`.
			"""
    pass

  def add_theme_font_size_override(self, name:__core__.StringName|str, font_size:int)->None:
    """
				Creates a local override for a theme font size with the specified `name`. Local overrides always take precedence when fetching theme items for the control. An override can be removed with `remove_theme_font_size_override`.
				See also `get_theme_font_size`.
			"""
    pass

  def add_theme_color_override(self, name:__core__.StringName|str, color:__core__.Color)->None:
    """
				Creates a local override for a theme `Color` with the specified `name`. Local overrides always take precedence when fetching theme items for the control. An override can be removed with `remove_theme_color_override`.
				See also `get_theme_color`.
				**Example:** Override a `Label`'s color and reset it later:
				
				```gdscript
				# Given the child Label node "MyLabel", override its font color with a custom value.
				$MyLabel.add_theme_color_override("font_color", Color(1, 0.5, 0))
				# Reset the font color of the child label.
				$MyLabel.remove_theme_color_override("font_color")
				# Alternatively it can be overridden with the default value from the Label type.
				$MyLabel.add_theme_color_override("font_color", get_theme_color("font_color", "Label"))
				```
				
				
			"""
    pass

  def add_theme_constant_override(self, name:__core__.StringName|str, constant:int)->None:
    """
				Creates a local override for a theme constant with the specified `name`. Local overrides always take precedence when fetching theme items for the control. An override can be removed with `remove_theme_constant_override`.
				See also `get_theme_constant`.
			"""
    pass

  def remove_theme_icon_override(self, name:__core__.StringName|str)->None:
    """
				Removes a local override for a theme icon with the specified `name` previously added by `add_theme_icon_override` or via the Inspector dock.
			"""
    pass

  def remove_theme_stylebox_override(self, name:__core__.StringName|str)->None:
    """
				Removes a local override for a theme `StyleBox` with the specified `name` previously added by `add_theme_stylebox_override` or via the Inspector dock.
			"""
    pass

  def remove_theme_font_override(self, name:__core__.StringName|str)->None:
    """
				Removes a local override for a theme `Font` with the specified `name` previously added by `add_theme_font_override` or via the Inspector dock.
			"""
    pass

  def remove_theme_font_size_override(self, name:__core__.StringName|str)->None:
    """
				Removes a local override for a theme font size with the specified `name` previously added by `add_theme_font_size_override` or via the Inspector dock.
			"""
    pass

  def remove_theme_color_override(self, name:__core__.StringName|str)->None:
    """
				Removes a local override for a theme `Color` with the specified `name` previously added by `add_theme_color_override` or via the Inspector dock.
			"""
    pass

  def remove_theme_constant_override(self, name:__core__.StringName|str)->None:
    """
				Removes a local override for a theme constant with the specified `name` previously added by `add_theme_constant_override` or via the Inspector dock.
			"""
    pass

  def get_theme_icon(self, name:__core__.StringName|str, theme_type:__core__.StringName|str= __core__.StringName.new0())->__noisetexture2d__.NoiseTexture2D|__texture2d__.Texture2D|__viewporttexture__.ViewportTexture|__placeholdertexture2d__.PlaceholderTexture2D|__atlastexture__.AtlasTexture|__gradienttexture1d__.GradientTexture1D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__compressedtexture2d__.CompressedTexture2D|__canvastexture__.CanvasTexture|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__externaltexture__.ExternalTexture|__meshtexture__.MeshTexture|__gradienttexture2d__.GradientTexture2D|__curvexyztexture__.CurveXYZTexture|__cameratexture__.CameraTexture:
    """
				Returns an icon from the first matching `Theme` in the tree if that `Theme` has an icon item with the specified `name` and `theme_type`.
				See `get_theme_color` for details.
			"""
    pass

  def get_theme_stylebox(self, name:__core__.StringName|str, theme_type:__core__.StringName|str= __core__.StringName.new0())->__styleboxline__.StyleBoxLine|__styleboxempty__.StyleBoxEmpty|__styleboxtexture__.StyleBoxTexture|__stylebox__.StyleBox|__styleboxflat__.StyleBoxFlat:
    """
				Returns a `StyleBox` from the first matching `Theme` in the tree if that `Theme` has a stylebox item with the specified `name` and `theme_type`.
				See `get_theme_color` for details.
			"""
    pass

  def get_theme_font(self, name:__core__.StringName|str, theme_type:__core__.StringName|str= __core__.StringName.new0())->__fontfile__.FontFile|__fontvariation__.FontVariation|__systemfont__.SystemFont|__font__.Font:
    """
				Returns a `Font` from the first matching `Theme` in the tree if that `Theme` has a font item with the specified `name` and `theme_type`.
				See `get_theme_color` for details.
			"""
    pass

  def get_theme_font_size(self, name:__core__.StringName|str, theme_type:__core__.StringName|str= __core__.StringName.new0())->int:
    """
				Returns a font size from the first matching `Theme` in the tree if that `Theme` has a font size item with the specified `name` and `theme_type`.
				See `get_theme_color` for details.
			"""
    pass

  def get_theme_color(self, name:__core__.StringName|str, theme_type:__core__.StringName|str= __core__.StringName.new0())->__core__.Color:
    """
				Returns a `Color` from the first matching `Theme` in the tree if that `Theme` has a color item with the specified `name` and `theme_type`. If `theme_type` is omitted the class name of the current control is used as the type, or `theme_type_variation` if it is defined. If the type is a class name its parent classes are also checked, in order of inheritance. If the type is a variation its base types are checked, in order of dependency, then the control's class name and its parent classes are checked.
				For the current control its local overrides are considered first (see `add_theme_color_override`), then its assigned `theme`. After the current control, each parent control and its assigned `theme` are considered; controls without a `theme` assigned are skipped. If no matching `Theme` is found in the tree, the custom project `Theme` (see `ProjectSettings.gui/theme/custom`) and the default `Theme` are used (see `ThemeDB`).
				
				```gdscript
				func _ready():
					# Get the font color defined for the current Control's class, if it exists.
					modulate = get_theme_color("font_color")
					# Get the font color defined for the Button class.
					modulate = get_theme_color("font_color", "Button")
				```
				
				
			"""
    pass

  def get_theme_constant(self, name:__core__.StringName|str, theme_type:__core__.StringName|str= __core__.StringName.new0())->int:
    """
				Returns a constant from the first matching `Theme` in the tree if that `Theme` has a constant item with the specified `name` and `theme_type`.
				See `get_theme_color` for details.
			"""
    pass

  def has_theme_icon_override(self, name:__core__.StringName|str)->bool:
    """
				Returns `true` if there is a local override for a theme icon with the specified `name` in this `Control` node.
				See `add_theme_icon_override`.
			"""
    pass

  def has_theme_stylebox_override(self, name:__core__.StringName|str)->bool:
    """
				Returns `true` if there is a local override for a theme `StyleBox` with the specified `name` in this `Control` node.
				See `add_theme_stylebox_override`.
			"""
    pass

  def has_theme_font_override(self, name:__core__.StringName|str)->bool:
    """
				Returns `true` if there is a local override for a theme `Font` with the specified `name` in this `Control` node.
				See `add_theme_font_override`.
			"""
    pass

  def has_theme_font_size_override(self, name:__core__.StringName|str)->bool:
    """
				Returns `true` if there is a local override for a theme font size with the specified `name` in this `Control` node.
				See `add_theme_font_size_override`.
			"""
    pass

  def has_theme_color_override(self, name:__core__.StringName|str)->bool:
    """
				Returns `true` if there is a local override for a theme `Color` with the specified `name` in this `Control` node.
				See `add_theme_color_override`.
			"""
    pass

  def has_theme_constant_override(self, name:__core__.StringName|str)->bool:
    """
				Returns `true` if there is a local override for a theme constant with the specified `name` in this `Control` node.
				See `add_theme_constant_override`.
			"""
    pass

  def has_theme_icon(self, name:__core__.StringName|str, theme_type:__core__.StringName|str= __core__.StringName.new0())->bool:
    """
				Returns `true` if there is a matching `Theme` in the tree that has an icon item with the specified `name` and `theme_type`.
				See `get_theme_color` for details.
			"""
    pass

  def has_theme_stylebox(self, name:__core__.StringName|str, theme_type:__core__.StringName|str= __core__.StringName.new0())->bool:
    """
				Returns `true` if there is a matching `Theme` in the tree that has a stylebox item with the specified `name` and `theme_type`.
				See `get_theme_color` for details.
			"""
    pass

  def has_theme_font(self, name:__core__.StringName|str, theme_type:__core__.StringName|str= __core__.StringName.new0())->bool:
    """
				Returns `true` if there is a matching `Theme` in the tree that has a font item with the specified `name` and `theme_type`.
				See `get_theme_color` for details.
			"""
    pass

  def has_theme_font_size(self, name:__core__.StringName|str, theme_type:__core__.StringName|str= __core__.StringName.new0())->bool:
    """
				Returns `true` if there is a matching `Theme` in the tree that has a font size item with the specified `name` and `theme_type`.
				See `get_theme_color` for details.
			"""
    pass

  def has_theme_color(self, name:__core__.StringName|str, theme_type:__core__.StringName|str= __core__.StringName.new0())->bool:
    """
				Returns `true` if there is a matching `Theme` in the tree that has a color item with the specified `name` and `theme_type`.
				See `get_theme_color` for details.
			"""
    pass

  def has_theme_constant(self, name:__core__.StringName|str, theme_type:__core__.StringName|str= __core__.StringName.new0())->bool:
    """
				Returns `true` if there is a matching `Theme` in the tree that has a constant item with the specified `name` and `theme_type`.
				See `get_theme_color` for details.
			"""
    pass

  def get_theme_default_base_scale(self)->float:
    """
				Returns the default base scale value from the first matching `Theme` in the tree if that `Theme` has a valid `Theme.default_base_scale` value.
				See `get_theme_color` for details.
			"""
    pass

  def get_theme_default_font(self)->__fontfile__.FontFile|__fontvariation__.FontVariation|__systemfont__.SystemFont|__font__.Font:
    """
				Returns the default font from the first matching `Theme` in the tree if that `Theme` has a valid `Theme.default_font` value.
				See `get_theme_color` for details.
			"""
    pass

  def get_theme_default_font_size(self)->int:
    """
				Returns the default font size value from the first matching `Theme` in the tree if that `Theme` has a valid `Theme.default_font_size` value.
				See `get_theme_color` for details.
			"""
    pass

  def get_parent_control(self)->__menubar__.MenuBar|__vscrollbar__.VScrollBar|__vsplitcontainer__.VSplitContainer|__graphelement__.GraphElement|__button__.Button|__graphnode__.GraphNode|__hflowcontainer__.HFlowContainer|__panel__.Panel|__openxrbindingmodifiereditor__.OpenXRBindingModifierEditor|__progressbar__.ProgressBar|__graphframe__.GraphFrame|__textedit__.TextEdit|__boxcontainer__.BoxContainer|__margincontainer__.MarginContainer|__hboxcontainer__.HBoxContainer|__openxrinteractionprofileeditor__.OpenXRInteractionProfileEditor|__tabcontainer__.TabContainer|__hseparator__.HSeparator|__control__.Control|__colorpickerbutton__.ColorPickerButton|__tree__.Tree|__label__.Label|__lineedit__.LineEdit|__texturebutton__.TextureButton|__richtextlabel__.RichTextLabel|__texturerect__.TextureRect|__slider__.Slider|__codeedit__.CodeEdit|__colorpicker__.ColorPicker|__ninepatchrect__.NinePatchRect|__colorrect__.ColorRect|__graphedit__.GraphEdit|__vflowcontainer__.VFlowContainer|__editorinspector__.EditorInspector|__editorspinslider__.EditorSpinSlider|__vseparator__.VSeparator|__panelcontainer__.PanelContainer|__centercontainer__.CenterContainer|__editorproperty__.EditorProperty|__aspectratiocontainer__.AspectRatioContainer|__checkbox__.CheckBox|__separator__.Separator|__textureprogressbar__.TextureProgressBar|__range__.Range|__vboxcontainer__.VBoxContainer|__tabbar__.TabBar|__hsplitcontainer__.HSplitContainer|__scrollbar__.ScrollBar|__checkbutton__.CheckButton|__gridcontainer__.GridContainer|__openxrinteractionprofileeditorbase__.OpenXRInteractionProfileEditorBase|__editorscriptpicker__.EditorScriptPicker|__splitcontainer__.SplitContainer|__editorresourcepicker__.EditorResourcePicker|__spinbox__.SpinBox|__videostreamplayer__.VideoStreamPlayer|__referencerect__.ReferenceRect|__scripteditor__.ScriptEditor|__scripteditorbase__.ScriptEditorBase|__menubutton__.MenuButton|__container__.Container|__flowcontainer__.FlowContainer|__scrollcontainer__.ScrollContainer|__itemlist__.ItemList|__editortoaster__.EditorToaster|__subviewportcontainer__.SubViewportContainer|__filesystemdock__.FileSystemDock|__hslider__.HSlider|__hscrollbar__.HScrollBar|__basebutton__.BaseButton|__vslider__.VSlider|__optionbutton__.OptionButton|__linkbutton__.LinkButton:
    """
				Returns the parent control node.
			"""
    pass

  def set_h_grow_direction(self, direction:int )->None:
    """"""
    pass

  def get_h_grow_direction(self)->int:
    """"""
    pass

  def set_v_grow_direction(self, direction:int )->None:
    """"""
    pass

  def get_v_grow_direction(self)->int:
    """"""
    pass

  def set_tooltip_auto_translate_mode(self, mode:int )->None:
    """"""
    pass

  def get_tooltip_auto_translate_mode(self)->int:
    """"""
    pass

  def set_tooltip_text(self, hint:str)->None:
    """"""
    pass

  def get_tooltip_text(self)->str:
    """"""
    pass

  def get_tooltip(self, at_position:__core__.Vector2= __core__.Vector2.new0())->str:
    """
				Returns the tooltip text for the position `at_position` in control's local coordinates, which will typically appear when the cursor is resting over this control. By default, it returns `tooltip_text`.
				This method can be overridden to customize its behavior. See `_get_tooltip`.
				**Note:** If this method returns an empty `String` and `_make_custom_tooltip` is not overridden, no tooltip is displayed.
			"""
    pass

  def set_default_cursor_shape(self, shape:int )->None:
    """"""
    pass

  def get_default_cursor_shape(self)->int:
    """"""
    pass

  def get_cursor_shape(self, position:__core__.Vector2= __core__.Vector2.new0())->int:
    """
				Returns the mouse cursor shape for this control when hovered over `position` in local coordinates. For most controls, this is the same as `mouse_default_cursor_shape`, but some built-in controls implement more complex logic.
			"""
    pass

  def set_focus_neighbor(self, side:int , neighbor:__core__.NodePath|str)->None:
    """
				Sets the focus neighbor for the specified `enum Side` to the `Control` at `neighbor` node path. A setter method for `focus_neighbor_bottom`, `focus_neighbor_left`, `focus_neighbor_right` and `focus_neighbor_top`.
			"""
    pass

  def get_focus_neighbor(self, side:int )->__core__.NodePath:
    """
				Returns the focus neighbor for the specified `enum Side`. A getter method for `focus_neighbor_bottom`, `focus_neighbor_left`, `focus_neighbor_right` and `focus_neighbor_top`.
				**Note:** To find the next `Control` on the specific `enum Side`, even if a neighbor is not assigned, use `find_valid_focus_neighbor`.
			"""
    pass

  def set_focus_next(self, next:__core__.NodePath|str)->None:
    """"""
    pass

  def get_focus_next(self)->__core__.NodePath:
    """"""
    pass

  def set_focus_previous(self, previous:__core__.NodePath|str)->None:
    """"""
    pass

  def get_focus_previous(self)->__core__.NodePath:
    """"""
    pass

  def force_drag(self, data:Any, preview:__control__.Control)->None:
    """
				Forces drag and bypasses `_get_drag_data` and `set_drag_preview` by passing `data` and `preview`. Drag will start even if the mouse is neither over nor pressed on this control.
				The methods `_can_drop_data` and `_drop_data` must be implemented on controls that want to receive drop data.
			"""
    pass

  def set_mouse_filter(self, filter:int )->None:
    """"""
    pass

  def get_mouse_filter(self)->int:
    """"""
    pass

  def set_force_pass_scroll_events(self, force_pass_scroll_events:bool)->None:
    """"""
    pass

  def is_force_pass_scroll_events(self)->bool:
    """"""
    pass

  def set_clip_contents(self, enable:bool)->None:
    """"""
    pass

  def is_clipping_contents(self)->bool:
    """"""
    pass

  def grab_click_focus(self)->None:
    """
				Creates an `InputEventMouseButton` that attempts to click the control. If the event is received, the control gains focus.
				
				```gdscript
				func _process(delta):
					grab_click_focus() # When clicking another Control node, this node will be clicked instead.
				```
				
				
			"""
    pass

  def set_drag_forwarding(self, drag_func:__core__.Callable, can_drop_func:__core__.Callable, drop_func:__core__.Callable)->None:
    """
				Sets the given callables to be used instead of the control's own drag-and-drop virtual methods. If a callable is empty, its respective virtual method is used as normal.
				The arguments for each callable should be exactly the same as their respective virtual methods, which would be:
				- `drag_func` corresponds to `_get_drag_data` and requires a `Vector2`;
				- `can_drop_func` corresponds to `_can_drop_data` and requires both a `Vector2` and a `Variant`;
				- `drop_func` corresponds to `_drop_data` and requires both a `Vector2` and a `Variant`.
			"""
    pass

  def set_drag_preview(self, control:__control__.Control)->None:
    """
				Shows the given control at the mouse pointer. A good time to call this method is in `_get_drag_data`. The control must not be in the scene tree. You should not free the control, and you should not keep a reference to the control beyond the duration of the drag. It will be deleted automatically after the drag has ended.
				
				```gdscript
				@export var color = Color(1, 0, 0, 1)

				func _get_drag_data(position):
					# Use a control that is not in the tree
					var cpb = ColorPickerButton.new()
					cpb.color = color
					cpb.size = Vector2(50, 50)
					set_drag_preview(cpb)
					return color
				```
				
				
			"""
    pass

  def is_drag_successful(self)->bool:
    """
				Returns `true` if a drag operation is successful. Alternative to `Viewport.gui_is_drag_successful`.
				Best used with `constant Node.NOTIFICATION_DRAG_END`.
			"""
    pass

  def warp_mouse(self, position:__core__.Vector2)->None:
    """
				Moves the mouse cursor to `position`, relative to `position` of this `Control`.
				**Note:** `warp_mouse` is only supported on Windows, macOS and Linux. It has no effect on Android, iOS and Web.
			"""
    pass

  def set_shortcut_context(self, node:__node__.Node)->None:
    """"""
    pass

  def get_shortcut_context(self)->__audiostreamplayer2d__.AudioStreamPlayer2D|__xrbodymodifier3d__.XRBodyModifier3D|__vsplitcontainer__.VSplitContainer|__graphelement__.GraphElement|__navigationobstacle3d__.NavigationObstacle3D|__visibleonscreennotifier3d__.VisibleOnScreenNotifier3D|__generic6dofjoint3d__.Generic6DOFJoint3D|__gpuparticlescollisionsphere3d__.GPUParticlesCollisionSphere3D|__conetwistjoint3d__.ConeTwistJoint3D|__graphframe__.GraphFrame|__csgtorus3d__.CSGTorus3D|__animatablebody3d__.AnimatableBody3D|__audiolistener2d__.AudioListener2D|__camera2d__.Camera2D|__multiplayersynchronizer__.MultiplayerSynchronizer|__margincontainer__.MarginContainer|__resourcepreloader__.ResourcePreloader|__hboxcontainer__.HBoxContainer|__gpuparticlescollision3d__.GPUParticlesCollision3D|__scriptcreatedialog__.ScriptCreateDialog|__softbody3d__.SoftBody3D|__control__.Control|__lineedit__.LineEdit|__backbuffercopy__.BackBufferCopy|__xrhandmodifier3d__.XRHandModifier3D|__richtextlabel__.RichTextLabel|__gpuparticles3d__.GPUParticles3D|__openxrvisibilitymask__.OpenXRVisibilityMask|__slider__.Slider|__spotlight3d__.SpotLight3D|__popupmenu__.PopupMenu|__light3d__.Light3D|__parallaxbackground__.ParallaxBackground|__physicalbonesimulator3d__.PhysicalBoneSimulator3D|__collisionshape2d__.CollisionShape2D|__sprite2d__.Sprite2D|__confirmationdialog__.ConfirmationDialog|__skeleton3d__.Skeleton3D|__graphedit__.GraphEdit|__animationmixer__.AnimationMixer|__editorspinslider__.EditorSpinSlider|__pathfollow3d__.PathFollow3D|__pointlight2d__.PointLight2D|__panelcontainer__.PanelContainer|__aspectratiocontainer__.AspectRatioContainer|__checkbox__.CheckBox|__separator__.Separator|__joint2d__.Joint2D|__remotetransform2d__.RemoteTransform2D|__vboxcontainer__.VBoxContainer|__checkbutton__.CheckButton|__gridcontainer__.GridContainer|__parallax2d__.Parallax2D|__collisionobject3d__.CollisionObject3D|__flowcontainer__.FlowContainer|__animatedsprite2d__.AnimatedSprite2D|__pinjoint2d__.PinJoint2D|__path3d__.Path3D|__openxrhand__.OpenXRHand|__skeletonmodifier3d__.SkeletonModifier3D|__lightoccluder2d__.LightOccluder2D|__filesystemdock__.FileSystemDock|__hingejoint3d__.HingeJoint3D|__basebutton__.BaseButton|__xranchor3d__.XRAnchor3D|__openxrcompositionlayer__.OpenXRCompositionLayer|__linkbutton__.LinkButton|__csgpolygon3d__.CSGPolygon3D|__gpuparticles2d__.GPUParticles2D|__editorresourcepreview__.EditorResourcePreview|__button__.Button|__light2d__.Light2D|__panel__.Panel|__canvasitem__.CanvasItem|__gpuparticlescollisionheightfield3d__.GPUParticlesCollisionHeightField3D|__boxcontainer__.BoxContainer|__gpuparticlesattractorbox3d__.GPUParticlesAttractorBox3D|__tabcontainer__.TabContainer|__audiolistener3d__.AudioListener3D|__editorplugin__.EditorPlugin|__navigationregion3d__.NavigationRegion3D|__animationplayer__.AnimationPlayer|__pinjoint3d__.PinJoint3D|__collisionshape3d__.CollisionShape3D|__label__.Label|__bone2d__.Bone2D|__dampedspringjoint2d__.DampedSpringJoint2D|__texturebutton__.TextureButton|__gpuparticlescollisionsdf3d__.GPUParticlesCollisionSDF3D|__multimeshinstance3d__.MultiMeshInstance3D|__xrcamera3d__.XRCamera3D|__canvaslayer__.CanvasLayer|__navigationlink3d__.NavigationLink3D|__reflectionprobe__.ReflectionProbe|__vehiclewheel3d__.VehicleWheel3D|__physicalbone2d__.PhysicalBone2D|__csgshape3d__.CSGShape3D|__lightmapprobe__.LightmapProbe|__vflowcontainer__.VFlowContainer|__node__.Node|__filedialog__.FileDialog|__gridmapeditorplugin__.GridMapEditorPlugin|__openxrcompositionlayerequirect__.OpenXRCompositionLayerEquirect|__characterbody3d__.CharacterBody3D|__hsplitcontainer__.HSplitContainer|__window__.Window|__decal__.Decal|__spinbox__.SpinBox|__directionallight2d__.DirectionalLight2D|__referencerect__.ReferenceRect|__scripteditor__.ScriptEditor|__raycast3d__.RayCast3D|__scripteditorbase__.ScriptEditorBase|__collisionobject2d__.CollisionObject2D|__voxelgi__.VoxelGI|__editortoaster__.EditorToaster|__meshinstance3d__.MeshInstance3D|__shapecast2d__.ShapeCast2D|__springbonesimulator3d__.SpringBoneSimulator3D|__canvasgroup__.CanvasGroup|__visibleonscreennotifier2d__.VisibleOnScreenNotifier2D|__canvasmodulate__.CanvasModulate|__remotetransform3d__.RemoteTransform3D|__navigationagent2d__.NavigationAgent2D|__xrorigin3d__.XROrigin3D|__navigationlink2d__.NavigationLink2D|__visibleonscreenenabler2d__.VisibleOnScreenEnabler2D|__graphnode__.GraphNode|__csgcylinder3d__.CSGCylinder3D|__animationtree__.AnimationTree|__skeleton2d__.Skeleton2D|__node2d__.Node2D|__hflowcontainer__.HFlowContainer|__spritebase3d__.SpriteBase3D|__boneattachment3d__.BoneAttachment3D|__openxrbindingmodifiereditor__.OpenXRBindingModifierEditor|__importermeshinstance3d__.ImporterMeshInstance3D|__path2d__.Path2D|__pathfollow2d__.PathFollow2D|__springbonecollisioncapsule3d__.SpringBoneCollisionCapsule3D|__openxrinteractionprofileeditor__.OpenXRInteractionProfileEditor|__raycast2d__.RayCast2D|__marker3d__.Marker3D|__hseparator__.HSeparator|__physicalbone3d__.PhysicalBone3D|__csgsphere3d__.CSGSphere3D|__tree__.Tree|__shapecast3d__.ShapeCast3D|__openxrcompositionlayercylinder__.OpenXRCompositionLayerCylinder|__instanceplaceholder__.InstancePlaceholder|__visualinstance3d__.VisualInstance3D|__gridmap__.GridMap|__missingnode__.MissingNode|__groovejoint2d__.GrooveJoint2D|__animatablebody2d__.AnimatableBody2D|__gpuparticlesattractorsphere3d__.GPUParticlesAttractorSphere3D|__acceptdialog__.AcceptDialog|__ninepatchrect__.NinePatchRect|__cpuparticles2d__.CPUParticles2D|__navigationagent3d__.NavigationAgent3D|__subviewport__.SubViewport|__audiostreamplayer3d__.AudioStreamPlayer3D|__camera3d__.Camera3D|__editorfiledialog__.EditorFileDialog|__textureprogressbar__.TextureProgressBar|__range__.Range|__audiostreamplayer__.AudioStreamPlayer|__tilemaplayer__.TileMapLayer|__retargetmodifier3d__.RetargetModifier3D|__scrollbar__.ScrollBar|__occluderinstance3d__.OccluderInstance3D|__rootmotionview__.RootMotionView|__rigidbody2d__.RigidBody2D|__splitcontainer__.SplitContainer|__editorresourcepicker__.EditorResourcePicker|__lightmapgi__.LightmapGI|__videostreamplayer__.VideoStreamPlayer|__popup__.Popup|__physicsbody3d__.PhysicsBody3D|__multimeshinstance2d__.MultiMeshInstance2D|__sprite3d__.Sprite3D|__gpuparticlesattractor3d__.GPUParticlesAttractor3D|__xrcontroller3d__.XRController3D|__animatedsprite3d__.AnimatedSprite3D|__container__.Container|__staticbody3d__.StaticBody3D|__itemlist__.ItemList|__statusindicator__.StatusIndicator|__editorcommandpalette__.EditorCommandPalette|__subviewportcontainer__.SubViewportContainer|__springbonecollisionplane3d__.SpringBoneCollisionPlane3D|__gpuparticlescollisionbox3d__.GPUParticlesCollisionBox3D|__popuppanel__.PopupPanel|__staticbody2d__.StaticBody2D|__gpuparticlesattractorvectorfield3d__.GPUParticlesAttractorVectorField3D|__visibleonscreenenabler3d__.VisibleOnScreenEnabler3D|__openxrcompositionlayerquad__.OpenXRCompositionLayerQuad|__csgbox3d__.CSGBox3D|__menubar__.MenuBar|__vscrollbar__.VScrollBar|__collisionpolygon2d__.CollisionPolygon2D|__collisionpolygon3d__.CollisionPolygon3D|__area3d__.Area3D|__label3d__.Label3D|__progressbar__.ProgressBar|__textedit__.TextEdit|__directionallight3d__.DirectionalLight3D|__csgprimitive3d__.CSGPrimitive3D|__colorpickerbutton__.ColorPickerButton|__rigidbody3d__.RigidBody3D|__xrfacemodifier3d__.XRFaceModifier3D|__vehiclebody3d__.VehicleBody3D|__texturerect__.TextureRect|__codeedit__.CodeEdit|__physicsbody2d__.PhysicsBody2D|__characterbody2d__.CharacterBody2D|__colorpicker__.ColorPicker|__cpuparticles3d__.CPUParticles3D|__springbonecollisionsphere3d__.SpringBoneCollisionSphere3D|__marker2d__.Marker2D|__csgmesh3d__.CSGMesh3D|__tilemap__.TileMap|__colorrect__.ColorRect|__navigationobstacle2d__.NavigationObstacle2D|__xrnode3d__.XRNode3D|__editorinspector__.EditorInspector|__httprequest__.HTTPRequest|__area2d__.Area2D|__csgcombiner3d__.CSGCombiner3D|__fogvolume__.FogVolume|__sliderjoint3d__.SliderJoint3D|__vseparator__.VSeparator|__line2d__.Line2D|__skeletonik3d__.SkeletonIK3D|__centercontainer__.CenterContainer|__editorproperty__.EditorProperty|__geometryinstance3d__.GeometryInstance3D|__tabbar__.TabBar|__meshinstance2d__.MeshInstance2D|__joint3d__.Joint3D|__worldenvironment__.WorldEnvironment|__viewport__.Viewport|__openxrinteractionprofileeditorbase__.OpenXRInteractionProfileEditorBase|__editorscriptpicker__.EditorScriptPicker|__touchscreenbutton__.TouchScreenButton|__editorfilesystem__.EditorFileSystem|__omnilight3d__.OmniLight3D|__node3d__.Node3D|__timer__.Timer|__menubutton__.MenuButton|__navigationregion2d__.NavigationRegion2D|__scrollcontainer__.ScrollContainer|__springbonecollision3d__.SpringBoneCollision3D|__multiplayerspawner__.MultiplayerSpawner|__polygon2d__.Polygon2D|__lookatmodifier3d__.LookAtModifier3D|__shaderglobalsoverride__.ShaderGlobalsOverride|__springarm3d__.SpringArm3D|__hslider__.HSlider|__hscrollbar__.HScrollBar|__vslider__.VSlider|__parallaxlayer__.ParallaxLayer|__optionbutton__.OptionButton:
    """"""
    pass

  def update_minimum_size(self)->None:
    """
				Invalidates the size cache in this node and in parent nodes up to top level. Intended to be used with `get_minimum_size` when the return value is changed. Setting `custom_minimum_size` directly calls this method automatically.
			"""
    pass

  def set_layout_direction(self, direction:int )->None:
    """"""
    pass

  def get_layout_direction(self)->int:
    """"""
    pass

  def is_layout_rtl(self)->bool:
    """
				Returns `true` if the layout is right-to-left. See also `layout_direction`.
			"""
    pass

  def set_auto_translate(self, enable:bool)->None:
    """"""
    pass

  def is_auto_translating(self)->bool:
    """"""
    pass

  def set_localize_numeral_system(self, enable:bool)->None:
    """"""
    pass

  def is_localizing_numeral_system(self)->bool:
    """"""
    pass


