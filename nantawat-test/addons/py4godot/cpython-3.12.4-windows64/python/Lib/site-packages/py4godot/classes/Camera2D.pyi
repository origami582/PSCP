from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AudioStreamPlayer2D as __audiostreamplayer2d__
import py4godot.classes.XRBodyModifier3D as __xrbodymodifier3d__
import py4godot.classes.VSplitContainer as __vsplitcontainer__
import py4godot.classes.GraphElement as __graphelement__
import py4godot.classes.NavigationObstacle3D as __navigationobstacle3d__
import py4godot.classes.VisibleOnScreenNotifier3D as __visibleonscreennotifier3d__
import py4godot.classes.Generic6DOFJoint3D as __generic6dofjoint3d__
import py4godot.classes.GPUParticlesCollisionSphere3D as __gpuparticlescollisionsphere3d__
import py4godot.classes.ConeTwistJoint3D as __conetwistjoint3d__
import py4godot.classes.GraphFrame as __graphframe__
import py4godot.classes.CSGTorus3D as __csgtorus3d__
import py4godot.classes.AnimatableBody3D as __animatablebody3d__
import py4godot.classes.AudioListener2D as __audiolistener2d__
import py4godot.classes.Camera2D as __camera2d__
import py4godot.classes.MultiplayerSynchronizer as __multiplayersynchronizer__
import py4godot.classes.MarginContainer as __margincontainer__
import py4godot.classes.ResourcePreloader as __resourcepreloader__
import py4godot.classes.HBoxContainer as __hboxcontainer__
import py4godot.classes.GPUParticlesCollision3D as __gpuparticlescollision3d__
import py4godot.classes.ScriptCreateDialog as __scriptcreatedialog__
import py4godot.classes.SoftBody3D as __softbody3d__
import py4godot.classes.Control as __control__
import py4godot.classes.LineEdit as __lineedit__
import py4godot.classes.BackBufferCopy as __backbuffercopy__
import py4godot.classes.XRHandModifier3D as __xrhandmodifier3d__
import py4godot.classes.RichTextLabel as __richtextlabel__
import py4godot.classes.GPUParticles3D as __gpuparticles3d__
import py4godot.classes.OpenXRVisibilityMask as __openxrvisibilitymask__
import py4godot.classes.Slider as __slider__
import py4godot.classes.SpotLight3D as __spotlight3d__
import py4godot.classes.PopupMenu as __popupmenu__
import py4godot.classes.Light3D as __light3d__
import py4godot.classes.ParallaxBackground as __parallaxbackground__
import py4godot.classes.PhysicalBoneSimulator3D as __physicalbonesimulator3d__
import py4godot.classes.CollisionShape2D as __collisionshape2d__
import py4godot.classes.Sprite2D as __sprite2d__
import py4godot.classes.ConfirmationDialog as __confirmationdialog__
import py4godot.classes.Skeleton3D as __skeleton3d__
import py4godot.classes.GraphEdit as __graphedit__
import py4godot.classes.AnimationMixer as __animationmixer__
import py4godot.classes.EditorSpinSlider as __editorspinslider__
import py4godot.classes.PathFollow3D as __pathfollow3d__
import py4godot.classes.PointLight2D as __pointlight2d__
import py4godot.classes.PanelContainer as __panelcontainer__
import py4godot.classes.AspectRatioContainer as __aspectratiocontainer__
import py4godot.classes.CheckBox as __checkbox__
import py4godot.classes.Separator as __separator__
import py4godot.classes.Joint2D as __joint2d__
import py4godot.classes.RemoteTransform2D as __remotetransform2d__
import py4godot.classes.VBoxContainer as __vboxcontainer__
import py4godot.classes.CheckButton as __checkbutton__
import py4godot.classes.GridContainer as __gridcontainer__
import py4godot.classes.Parallax2D as __parallax2d__
import py4godot.classes.CollisionObject3D as __collisionobject3d__
import py4godot.classes.FlowContainer as __flowcontainer__
import py4godot.classes.AnimatedSprite2D as __animatedsprite2d__
import py4godot.classes.PinJoint2D as __pinjoint2d__
import py4godot.classes.Path3D as __path3d__
import py4godot.classes.OpenXRHand as __openxrhand__
import py4godot.classes.SkeletonModifier3D as __skeletonmodifier3d__
import py4godot.classes.LightOccluder2D as __lightoccluder2d__
import py4godot.classes.FileSystemDock as __filesystemdock__
import py4godot.classes.HingeJoint3D as __hingejoint3d__
import py4godot.classes.BaseButton as __basebutton__
import py4godot.classes.XRAnchor3D as __xranchor3d__
import py4godot.classes.OpenXRCompositionLayer as __openxrcompositionlayer__
import py4godot.classes.LinkButton as __linkbutton__
import py4godot.classes.CSGPolygon3D as __csgpolygon3d__
import py4godot.classes.GPUParticles2D as __gpuparticles2d__
import py4godot.classes.EditorResourcePreview as __editorresourcepreview__
import py4godot.classes.Button as __button__
import py4godot.classes.Light2D as __light2d__
import py4godot.classes.Panel as __panel__
import py4godot.classes.CanvasItem as __canvasitem__
import py4godot.classes.GPUParticlesCollisionHeightField3D as __gpuparticlescollisionheightfield3d__
import py4godot.classes.BoxContainer as __boxcontainer__
import py4godot.classes.GPUParticlesAttractorBox3D as __gpuparticlesattractorbox3d__
import py4godot.classes.TabContainer as __tabcontainer__
import py4godot.classes.AudioListener3D as __audiolistener3d__
import py4godot.classes.EditorPlugin as __editorplugin__
import py4godot.classes.NavigationRegion3D as __navigationregion3d__
import py4godot.classes.AnimationPlayer as __animationplayer__
import py4godot.classes.PinJoint3D as __pinjoint3d__
import py4godot.classes.CollisionShape3D as __collisionshape3d__
import py4godot.classes.Label as __label__
import py4godot.classes.Bone2D as __bone2d__
import py4godot.classes.DampedSpringJoint2D as __dampedspringjoint2d__
import py4godot.classes.TextureButton as __texturebutton__
import py4godot.classes.GPUParticlesCollisionSDF3D as __gpuparticlescollisionsdf3d__
import py4godot.classes.MultiMeshInstance3D as __multimeshinstance3d__
import py4godot.classes.XRCamera3D as __xrcamera3d__
import py4godot.classes.CanvasLayer as __canvaslayer__
import py4godot.classes.NavigationLink3D as __navigationlink3d__
import py4godot.classes.ReflectionProbe as __reflectionprobe__
import py4godot.classes.VehicleWheel3D as __vehiclewheel3d__
import py4godot.classes.PhysicalBone2D as __physicalbone2d__
import py4godot.classes.CSGShape3D as __csgshape3d__
import py4godot.classes.LightmapProbe as __lightmapprobe__
import py4godot.classes.VFlowContainer as __vflowcontainer__
import py4godot.classes.Node as __node__
import py4godot.classes.FileDialog as __filedialog__
import py4godot.classes.GridMapEditorPlugin as __gridmapeditorplugin__
import py4godot.classes.OpenXRCompositionLayerEquirect as __openxrcompositionlayerequirect__
import py4godot.classes.CharacterBody3D as __characterbody3d__
import py4godot.classes.HSplitContainer as __hsplitcontainer__
import py4godot.classes.Window as __window__
import py4godot.classes.Decal as __decal__
import py4godot.classes.SpinBox as __spinbox__
import py4godot.classes.DirectionalLight2D as __directionallight2d__
import py4godot.classes.ReferenceRect as __referencerect__
import py4godot.classes.ScriptEditor as __scripteditor__
import py4godot.classes.RayCast3D as __raycast3d__
import py4godot.classes.ScriptEditorBase as __scripteditorbase__
import py4godot.classes.CollisionObject2D as __collisionobject2d__
import py4godot.classes.VoxelGI as __voxelgi__
import py4godot.classes.EditorToaster as __editortoaster__
import py4godot.classes.MeshInstance3D as __meshinstance3d__
import py4godot.classes.ShapeCast2D as __shapecast2d__
import py4godot.classes.SpringBoneSimulator3D as __springbonesimulator3d__
import py4godot.classes.CanvasGroup as __canvasgroup__
import py4godot.classes.VisibleOnScreenNotifier2D as __visibleonscreennotifier2d__
import py4godot.classes.CanvasModulate as __canvasmodulate__
import py4godot.classes.RemoteTransform3D as __remotetransform3d__
import py4godot.classes.NavigationAgent2D as __navigationagent2d__
import py4godot.classes.XROrigin3D as __xrorigin3d__
import py4godot.classes.NavigationLink2D as __navigationlink2d__
import py4godot.classes.VisibleOnScreenEnabler2D as __visibleonscreenenabler2d__
import py4godot.classes.GraphNode as __graphnode__
import py4godot.classes.CSGCylinder3D as __csgcylinder3d__
import py4godot.classes.AnimationTree as __animationtree__
import py4godot.classes.Skeleton2D as __skeleton2d__
import py4godot.classes.Node2D as __node2d__
import py4godot.classes.HFlowContainer as __hflowcontainer__
import py4godot.classes.SpriteBase3D as __spritebase3d__
import py4godot.classes.BoneAttachment3D as __boneattachment3d__
import py4godot.classes.OpenXRBindingModifierEditor as __openxrbindingmodifiereditor__
import py4godot.classes.ImporterMeshInstance3D as __importermeshinstance3d__
import py4godot.classes.Path2D as __path2d__
import py4godot.classes.PathFollow2D as __pathfollow2d__
import py4godot.classes.SpringBoneCollisionCapsule3D as __springbonecollisioncapsule3d__
import py4godot.classes.OpenXRInteractionProfileEditor as __openxrinteractionprofileeditor__
import py4godot.classes.RayCast2D as __raycast2d__
import py4godot.classes.Marker3D as __marker3d__
import py4godot.classes.HSeparator as __hseparator__
import py4godot.classes.PhysicalBone3D as __physicalbone3d__
import py4godot.classes.CSGSphere3D as __csgsphere3d__
import py4godot.classes.Tree as __tree__
import py4godot.classes.ShapeCast3D as __shapecast3d__
import py4godot.classes.OpenXRCompositionLayerCylinder as __openxrcompositionlayercylinder__
import py4godot.classes.InstancePlaceholder as __instanceplaceholder__
import py4godot.classes.VisualInstance3D as __visualinstance3d__
import py4godot.classes.GridMap as __gridmap__
import py4godot.classes.MissingNode as __missingnode__
import py4godot.classes.GrooveJoint2D as __groovejoint2d__
import py4godot.classes.AnimatableBody2D as __animatablebody2d__
import py4godot.classes.GPUParticlesAttractorSphere3D as __gpuparticlesattractorsphere3d__
import py4godot.classes.AcceptDialog as __acceptdialog__
import py4godot.classes.NinePatchRect as __ninepatchrect__
import py4godot.classes.CPUParticles2D as __cpuparticles2d__
import py4godot.classes.NavigationAgent3D as __navigationagent3d__
import py4godot.classes.SubViewport as __subviewport__
import py4godot.classes.AudioStreamPlayer3D as __audiostreamplayer3d__
import py4godot.classes.Camera3D as __camera3d__
import py4godot.classes.EditorFileDialog as __editorfiledialog__
import py4godot.classes.TextureProgressBar as __textureprogressbar__
import py4godot.classes.Range as __range__
import py4godot.classes.AudioStreamPlayer as __audiostreamplayer__
import py4godot.classes.TileMapLayer as __tilemaplayer__
import py4godot.classes.RetargetModifier3D as __retargetmodifier3d__
import py4godot.classes.ScrollBar as __scrollbar__
import py4godot.classes.OccluderInstance3D as __occluderinstance3d__
import py4godot.classes.RootMotionView as __rootmotionview__
import py4godot.classes.RigidBody2D as __rigidbody2d__
import py4godot.classes.SplitContainer as __splitcontainer__
import py4godot.classes.EditorResourcePicker as __editorresourcepicker__
import py4godot.classes.LightmapGI as __lightmapgi__
import py4godot.classes.VideoStreamPlayer as __videostreamplayer__
import py4godot.classes.Popup as __popup__
import py4godot.classes.PhysicsBody3D as __physicsbody3d__
import py4godot.classes.MultiMeshInstance2D as __multimeshinstance2d__
import py4godot.classes.Sprite3D as __sprite3d__
import py4godot.classes.GPUParticlesAttractor3D as __gpuparticlesattractor3d__
import py4godot.classes.XRController3D as __xrcontroller3d__
import py4godot.classes.AnimatedSprite3D as __animatedsprite3d__
import py4godot.classes.Container as __container__
import py4godot.classes.StaticBody3D as __staticbody3d__
import py4godot.classes.ItemList as __itemlist__
import py4godot.classes.StatusIndicator as __statusindicator__
import py4godot.classes.EditorCommandPalette as __editorcommandpalette__
import py4godot.classes.SubViewportContainer as __subviewportcontainer__
import py4godot.classes.SpringBoneCollisionPlane3D as __springbonecollisionplane3d__
import py4godot.classes.GPUParticlesCollisionBox3D as __gpuparticlescollisionbox3d__
import py4godot.classes.PopupPanel as __popuppanel__
import py4godot.classes.StaticBody2D as __staticbody2d__
import py4godot.classes.GPUParticlesAttractorVectorField3D as __gpuparticlesattractorvectorfield3d__
import py4godot.classes.VisibleOnScreenEnabler3D as __visibleonscreenenabler3d__
import py4godot.classes.OpenXRCompositionLayerQuad as __openxrcompositionlayerquad__
import py4godot.classes.CSGBox3D as __csgbox3d__
import py4godot.classes.MenuBar as __menubar__
import py4godot.classes.VScrollBar as __vscrollbar__
import py4godot.classes.CollisionPolygon2D as __collisionpolygon2d__
import py4godot.classes.CollisionPolygon3D as __collisionpolygon3d__
import py4godot.classes.Area3D as __area3d__
import py4godot.classes.Label3D as __label3d__
import py4godot.classes.ProgressBar as __progressbar__
import py4godot.classes.TextEdit as __textedit__
import py4godot.classes.DirectionalLight3D as __directionallight3d__
import py4godot.classes.CSGPrimitive3D as __csgprimitive3d__
import py4godot.classes.ColorPickerButton as __colorpickerbutton__
import py4godot.classes.RigidBody3D as __rigidbody3d__
import py4godot.classes.XRFaceModifier3D as __xrfacemodifier3d__
import py4godot.classes.VehicleBody3D as __vehiclebody3d__
import py4godot.classes.TextureRect as __texturerect__
import py4godot.classes.CodeEdit as __codeedit__
import py4godot.classes.PhysicsBody2D as __physicsbody2d__
import py4godot.classes.CharacterBody2D as __characterbody2d__
import py4godot.classes.ColorPicker as __colorpicker__
import py4godot.classes.CPUParticles3D as __cpuparticles3d__
import py4godot.classes.SpringBoneCollisionSphere3D as __springbonecollisionsphere3d__
import py4godot.classes.Marker2D as __marker2d__
import py4godot.classes.CSGMesh3D as __csgmesh3d__
import py4godot.classes.TileMap as __tilemap__
import py4godot.classes.ColorRect as __colorrect__
import py4godot.classes.NavigationObstacle2D as __navigationobstacle2d__
import py4godot.classes.XRNode3D as __xrnode3d__
import py4godot.classes.EditorInspector as __editorinspector__
import py4godot.classes.HTTPRequest as __httprequest__
import py4godot.classes.Area2D as __area2d__
import py4godot.classes.CSGCombiner3D as __csgcombiner3d__
import py4godot.classes.FogVolume as __fogvolume__
import py4godot.classes.SliderJoint3D as __sliderjoint3d__
import py4godot.classes.VSeparator as __vseparator__
import py4godot.classes.Line2D as __line2d__
import py4godot.classes.SkeletonIK3D as __skeletonik3d__
import py4godot.classes.CenterContainer as __centercontainer__
import py4godot.classes.EditorProperty as __editorproperty__
import py4godot.classes.GeometryInstance3D as __geometryinstance3d__
import py4godot.classes.TabBar as __tabbar__
import py4godot.classes.MeshInstance2D as __meshinstance2d__
import py4godot.classes.Joint3D as __joint3d__
import py4godot.classes.WorldEnvironment as __worldenvironment__
import py4godot.classes.Viewport as __viewport__
import py4godot.classes.OpenXRInteractionProfileEditorBase as __openxrinteractionprofileeditorbase__
import py4godot.classes.EditorScriptPicker as __editorscriptpicker__
import py4godot.classes.TouchScreenButton as __touchscreenbutton__
import py4godot.classes.EditorFileSystem as __editorfilesystem__
import py4godot.classes.OmniLight3D as __omnilight3d__
import py4godot.classes.Node3D as __node3d__
import py4godot.classes.Timer as __timer__
import py4godot.classes.MenuButton as __menubutton__
import py4godot.classes.NavigationRegion2D as __navigationregion2d__
import py4godot.classes.ScrollContainer as __scrollcontainer__
import py4godot.classes.SpringBoneCollision3D as __springbonecollision3d__
import py4godot.classes.MultiplayerSpawner as __multiplayerspawner__
import py4godot.classes.Polygon2D as __polygon2d__
import py4godot.classes.LookAtModifier3D as __lookatmodifier3d__
import py4godot.classes.ShaderGlobalsOverride as __shaderglobalsoverride__
import py4godot.classes.SpringArm3D as __springarm3d__
import py4godot.classes.HSlider as __hslider__
import py4godot.classes.HScrollBar as __hscrollbar__
import py4godot.classes.VSlider as __vslider__
import py4godot.classes.ParallaxLayer as __parallaxlayer__
import py4godot.classes.OptionButton as __optionbutton__


class AnchorMode:
  ANCHOR_MODE_FIXED_TOPERATOR_LEFT:int = 0
  ANCHOR_MODE_DRAG_CENTER:int = 1
class Camera2DProcessCallback:
  CAMERA2D_PROCESS_PHYSICS:int = 0
  CAMERA2D_PROCESS_IDLE:int = 1


class Camera2D(__node2d__.Node2D):
  """
		Camera node for 2D scenes. It forces the screen (current layer) to scroll following this node. This makes it easier (and faster) to program scrollable scenes than manually changing the position of `CanvasItem`-based nodes.
		Cameras register themselves in the nearest `Viewport` node (when ascending the tree). Only one camera can be active per viewport. If no viewport is available ascending the tree, the camera will register in the global viewport.
		This node is intended to be a simple helper to get things going quickly, but more functionality may be desired to change how the camera works. To make your own custom camera node, inherit it from `Node2D` and change the transform of the canvas by setting `Viewport.canvas_transform` in `Viewport` (you can obtain the current `Viewport` by using `Node.get_viewport`).
		Note that the `Camera2D` node's `Node2D.global_position` doesn't represent the actual position of the screen, which may differ due to applied smoothing or limits. You can use `get_screen_center_position` to get the real position. Same for the node's `Node2D.global_rotation` which may be different due to applied rotation smoothing. You can use `get_screen_rotation` to get the current rotation of the screen.
	"""

  @staticmethod
  def constructor()->Camera2D:pass



  @staticmethod
  def cast(other:__object__.Object)->Camera2D:pass


  @property
  def offset(self)->__core__.Vector2:
    """"""
    pass
  @offset.setter
  def offset(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def anchor_mode(self)->int:
    """"""
    pass
  @anchor_mode.setter
  def anchor_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def ignore_rotation(self)->bool:
    """"""
    pass
  @ignore_rotation.setter
  def ignore_rotation(self,  value:bool)->None:
    """"""
    pass
  @property
  def enabled(self)->bool:
    """"""
    pass
  @enabled.setter
  def enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def zoom(self)->__core__.Vector2:
    """"""
    pass
  @zoom.setter
  def zoom(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def custom_viewport(self)->__filedialog__.FileDialog|__scriptcreatedialog__.ScriptCreateDialog|__popup__.Popup|__popupmenu__.PopupMenu|__subviewport__.SubViewport|__editorcommandpalette__.EditorCommandPalette|__window__.Window|__popuppanel__.PopupPanel|__acceptdialog__.AcceptDialog|__confirmationdialog__.ConfirmationDialog|__viewport__.Viewport|__editorfiledialog__.EditorFileDialog:
    """"""
    pass
  @custom_viewport.setter
  def custom_viewport(self,  value:__viewport__.Viewport)->None:
    """"""
    pass
  @property
  def process_callback(self)->int:
    """"""
    pass
  @process_callback.setter
  def process_callback(self,  value:int)->None:
    """"""
    pass
  @property
  def limit_left(self)->int:
    """"""
    pass
  @limit_left.setter
  def limit_left(self,  value:int)->None:
    """"""
    pass
  @property
  def limit_top(self)->int:
    """"""
    pass
  @limit_top.setter
  def limit_top(self,  value:int)->None:
    """"""
    pass
  @property
  def limit_right(self)->int:
    """"""
    pass
  @limit_right.setter
  def limit_right(self,  value:int)->None:
    """"""
    pass
  @property
  def limit_bottom(self)->int:
    """"""
    pass
  @limit_bottom.setter
  def limit_bottom(self,  value:int)->None:
    """"""
    pass
  @property
  def limit_smoothed(self)->bool:
    """"""
    pass
  @limit_smoothed.setter
  def limit_smoothed(self,  value:bool)->None:
    """"""
    pass
  @property
  def position_smoothing_enabled(self)->bool:
    """"""
    pass
  @position_smoothing_enabled.setter
  def position_smoothing_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def position_smoothing_speed(self)->float:
    """"""
    pass
  @position_smoothing_speed.setter
  def position_smoothing_speed(self,  value:float)->None:
    """"""
    pass
  @property
  def rotation_smoothing_enabled(self)->bool:
    """"""
    pass
  @rotation_smoothing_enabled.setter
  def rotation_smoothing_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def rotation_smoothing_speed(self)->float:
    """"""
    pass
  @rotation_smoothing_speed.setter
  def rotation_smoothing_speed(self,  value:float)->None:
    """"""
    pass
  @property
  def drag_horizontal_enabled(self)->bool:
    """"""
    pass
  @drag_horizontal_enabled.setter
  def drag_horizontal_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def drag_vertical_enabled(self)->bool:
    """"""
    pass
  @drag_vertical_enabled.setter
  def drag_vertical_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def drag_horizontal_offset(self)->float:
    """"""
    pass
  @drag_horizontal_offset.setter
  def drag_horizontal_offset(self,  value:float)->None:
    """"""
    pass
  @property
  def drag_vertical_offset(self)->float:
    """"""
    pass
  @drag_vertical_offset.setter
  def drag_vertical_offset(self,  value:float)->None:
    """"""
    pass
  @property
  def drag_left_margin(self)->float:
    """"""
    pass
  @drag_left_margin.setter
  def drag_left_margin(self,  value:float)->None:
    """"""
    pass
  @property
  def drag_top_margin(self)->float:
    """"""
    pass
  @drag_top_margin.setter
  def drag_top_margin(self,  value:float)->None:
    """"""
    pass
  @property
  def drag_right_margin(self)->float:
    """"""
    pass
  @drag_right_margin.setter
  def drag_right_margin(self,  value:float)->None:
    """"""
    pass
  @property
  def drag_bottom_margin(self)->float:
    """"""
    pass
  @drag_bottom_margin.setter
  def drag_bottom_margin(self,  value:float)->None:
    """"""
    pass
  @property
  def editor_draw_screen(self)->bool:
    """"""
    pass
  @editor_draw_screen.setter
  def editor_draw_screen(self,  value:bool)->None:
    """"""
    pass
  @property
  def editor_draw_limits(self)->bool:
    """"""
    pass
  @editor_draw_limits.setter
  def editor_draw_limits(self,  value:bool)->None:
    """"""
    pass
  @property
  def editor_draw_drag_margin(self)->bool:
    """"""
    pass
  @editor_draw_drag_margin.setter
  def editor_draw_drag_margin(self,  value:bool)->None:
    """"""
    pass
  def set_offset(self, offset:__core__.Vector2)->None:
    """"""
    pass

  def get_offset(self)->__core__.Vector2:
    """"""
    pass

  def set_anchor_mode(self, anchor_mode:int )->None:
    """"""
    pass

  def get_anchor_mode(self)->int:
    """"""
    pass

  def set_ignore_rotation(self, ignore:bool)->None:
    """"""
    pass

  def is_ignoring_rotation(self)->bool:
    """"""
    pass

  def set_process_callback(self, mode:int )->None:
    """"""
    pass

  def get_process_callback(self)->int:
    """"""
    pass

  def set_enabled(self, enabled:bool)->None:
    """"""
    pass

  def is_enabled(self)->bool:
    """"""
    pass

  def make_current(self)->None:
    """
				Forces this `Camera2D` to become the current active one. `enabled` must be `true`.
			"""
    pass

  def is_current(self)->bool:
    """
				Returns `true` if this `Camera2D` is the active camera (see `Viewport.get_camera_2d`).
			"""
    pass

  def set_limit(self, margin:int , limit:int)->None:
    """
				Sets the camera limit for the specified `enum Side`. See also `limit_bottom`, `limit_top`, `limit_left`, and `limit_right`.
			"""
    pass

  def get_limit(self, margin:int )->int:
    """
				Returns the camera limit for the specified `enum Side`. See also `limit_bottom`, `limit_top`, `limit_left`, and `limit_right`.
			"""
    pass

  def set_limit_smoothing_enabled(self, limit_smoothing_enabled:bool)->None:
    """"""
    pass

  def is_limit_smoothing_enabled(self)->bool:
    """"""
    pass

  def set_drag_vertical_enabled(self, enabled:bool)->None:
    """"""
    pass

  def is_drag_vertical_enabled(self)->bool:
    """"""
    pass

  def set_drag_horizontal_enabled(self, enabled:bool)->None:
    """"""
    pass

  def is_drag_horizontal_enabled(self)->bool:
    """"""
    pass

  def set_drag_vertical_offset(self, offset:float)->None:
    """"""
    pass

  def get_drag_vertical_offset(self)->float:
    """"""
    pass

  def set_drag_horizontal_offset(self, offset:float)->None:
    """"""
    pass

  def get_drag_horizontal_offset(self)->float:
    """"""
    pass

  def set_drag_margin(self, margin:int , drag_margin:float)->None:
    """
				Sets the specified `enum Side`'s margin. See also `drag_bottom_margin`, `drag_top_margin`, `drag_left_margin`, and `drag_right_margin`.
			"""
    pass

  def get_drag_margin(self, margin:int )->float:
    """
				Returns the specified `enum Side`'s margin. See also `drag_bottom_margin`, `drag_top_margin`, `drag_left_margin`, and `drag_right_margin`.
			"""
    pass

  def get_target_position(self)->__core__.Vector2:
    """
				Returns this camera's target position, in global coordinates.
				**Note:** The returned value is not the same as `Node2D.global_position`, as it is affected by the drag properties. It is also not the same as the current position if `position_smoothing_enabled` is `true` (see `get_screen_center_position`).
			"""
    pass

  def get_screen_center_position(self)->__core__.Vector2:
    """
				Returns the center of the screen from this camera's point of view, in global coordinates.
				**Note:** The exact targeted position of the camera may be different. See `get_target_position`.
			"""
    pass

  def set_zoom(self, zoom:__core__.Vector2)->None:
    """"""
    pass

  def get_zoom(self)->__core__.Vector2:
    """"""
    pass

  def set_custom_viewport(self, viewport:__node__.Node)->None:
    """"""
    pass

  def get_custom_viewport(self)->__audiostreamplayer2d__.AudioStreamPlayer2D|__xrbodymodifier3d__.XRBodyModifier3D|__vsplitcontainer__.VSplitContainer|__graphelement__.GraphElement|__navigationobstacle3d__.NavigationObstacle3D|__visibleonscreennotifier3d__.VisibleOnScreenNotifier3D|__generic6dofjoint3d__.Generic6DOFJoint3D|__gpuparticlescollisionsphere3d__.GPUParticlesCollisionSphere3D|__conetwistjoint3d__.ConeTwistJoint3D|__graphframe__.GraphFrame|__csgtorus3d__.CSGTorus3D|__animatablebody3d__.AnimatableBody3D|__audiolistener2d__.AudioListener2D|__camera2d__.Camera2D|__multiplayersynchronizer__.MultiplayerSynchronizer|__margincontainer__.MarginContainer|__resourcepreloader__.ResourcePreloader|__hboxcontainer__.HBoxContainer|__gpuparticlescollision3d__.GPUParticlesCollision3D|__scriptcreatedialog__.ScriptCreateDialog|__softbody3d__.SoftBody3D|__control__.Control|__lineedit__.LineEdit|__backbuffercopy__.BackBufferCopy|__xrhandmodifier3d__.XRHandModifier3D|__richtextlabel__.RichTextLabel|__gpuparticles3d__.GPUParticles3D|__openxrvisibilitymask__.OpenXRVisibilityMask|__slider__.Slider|__spotlight3d__.SpotLight3D|__popupmenu__.PopupMenu|__light3d__.Light3D|__parallaxbackground__.ParallaxBackground|__physicalbonesimulator3d__.PhysicalBoneSimulator3D|__collisionshape2d__.CollisionShape2D|__sprite2d__.Sprite2D|__confirmationdialog__.ConfirmationDialog|__skeleton3d__.Skeleton3D|__graphedit__.GraphEdit|__animationmixer__.AnimationMixer|__editorspinslider__.EditorSpinSlider|__pathfollow3d__.PathFollow3D|__pointlight2d__.PointLight2D|__panelcontainer__.PanelContainer|__aspectratiocontainer__.AspectRatioContainer|__checkbox__.CheckBox|__separator__.Separator|__joint2d__.Joint2D|__remotetransform2d__.RemoteTransform2D|__vboxcontainer__.VBoxContainer|__checkbutton__.CheckButton|__gridcontainer__.GridContainer|__parallax2d__.Parallax2D|__collisionobject3d__.CollisionObject3D|__flowcontainer__.FlowContainer|__animatedsprite2d__.AnimatedSprite2D|__pinjoint2d__.PinJoint2D|__path3d__.Path3D|__openxrhand__.OpenXRHand|__skeletonmodifier3d__.SkeletonModifier3D|__lightoccluder2d__.LightOccluder2D|__filesystemdock__.FileSystemDock|__hingejoint3d__.HingeJoint3D|__basebutton__.BaseButton|__xranchor3d__.XRAnchor3D|__openxrcompositionlayer__.OpenXRCompositionLayer|__linkbutton__.LinkButton|__csgpolygon3d__.CSGPolygon3D|__gpuparticles2d__.GPUParticles2D|__editorresourcepreview__.EditorResourcePreview|__button__.Button|__light2d__.Light2D|__panel__.Panel|__canvasitem__.CanvasItem|__gpuparticlescollisionheightfield3d__.GPUParticlesCollisionHeightField3D|__boxcontainer__.BoxContainer|__gpuparticlesattractorbox3d__.GPUParticlesAttractorBox3D|__tabcontainer__.TabContainer|__audiolistener3d__.AudioListener3D|__editorplugin__.EditorPlugin|__navigationregion3d__.NavigationRegion3D|__animationplayer__.AnimationPlayer|__pinjoint3d__.PinJoint3D|__collisionshape3d__.CollisionShape3D|__label__.Label|__bone2d__.Bone2D|__dampedspringjoint2d__.DampedSpringJoint2D|__texturebutton__.TextureButton|__gpuparticlescollisionsdf3d__.GPUParticlesCollisionSDF3D|__multimeshinstance3d__.MultiMeshInstance3D|__xrcamera3d__.XRCamera3D|__canvaslayer__.CanvasLayer|__navigationlink3d__.NavigationLink3D|__reflectionprobe__.ReflectionProbe|__vehiclewheel3d__.VehicleWheel3D|__physicalbone2d__.PhysicalBone2D|__csgshape3d__.CSGShape3D|__lightmapprobe__.LightmapProbe|__vflowcontainer__.VFlowContainer|__node__.Node|__filedialog__.FileDialog|__gridmapeditorplugin__.GridMapEditorPlugin|__openxrcompositionlayerequirect__.OpenXRCompositionLayerEquirect|__characterbody3d__.CharacterBody3D|__hsplitcontainer__.HSplitContainer|__window__.Window|__decal__.Decal|__spinbox__.SpinBox|__directionallight2d__.DirectionalLight2D|__referencerect__.ReferenceRect|__scripteditor__.ScriptEditor|__raycast3d__.RayCast3D|__scripteditorbase__.ScriptEditorBase|__collisionobject2d__.CollisionObject2D|__voxelgi__.VoxelGI|__editortoaster__.EditorToaster|__meshinstance3d__.MeshInstance3D|__shapecast2d__.ShapeCast2D|__springbonesimulator3d__.SpringBoneSimulator3D|__canvasgroup__.CanvasGroup|__visibleonscreennotifier2d__.VisibleOnScreenNotifier2D|__canvasmodulate__.CanvasModulate|__remotetransform3d__.RemoteTransform3D|__navigationagent2d__.NavigationAgent2D|__xrorigin3d__.XROrigin3D|__navigationlink2d__.NavigationLink2D|__visibleonscreenenabler2d__.VisibleOnScreenEnabler2D|__graphnode__.GraphNode|__csgcylinder3d__.CSGCylinder3D|__animationtree__.AnimationTree|__skeleton2d__.Skeleton2D|__node2d__.Node2D|__hflowcontainer__.HFlowContainer|__spritebase3d__.SpriteBase3D|__boneattachment3d__.BoneAttachment3D|__openxrbindingmodifiereditor__.OpenXRBindingModifierEditor|__importermeshinstance3d__.ImporterMeshInstance3D|__path2d__.Path2D|__pathfollow2d__.PathFollow2D|__springbonecollisioncapsule3d__.SpringBoneCollisionCapsule3D|__openxrinteractionprofileeditor__.OpenXRInteractionProfileEditor|__raycast2d__.RayCast2D|__marker3d__.Marker3D|__hseparator__.HSeparator|__physicalbone3d__.PhysicalBone3D|__csgsphere3d__.CSGSphere3D|__tree__.Tree|__shapecast3d__.ShapeCast3D|__openxrcompositionlayercylinder__.OpenXRCompositionLayerCylinder|__instanceplaceholder__.InstancePlaceholder|__visualinstance3d__.VisualInstance3D|__gridmap__.GridMap|__missingnode__.MissingNode|__groovejoint2d__.GrooveJoint2D|__animatablebody2d__.AnimatableBody2D|__gpuparticlesattractorsphere3d__.GPUParticlesAttractorSphere3D|__acceptdialog__.AcceptDialog|__ninepatchrect__.NinePatchRect|__cpuparticles2d__.CPUParticles2D|__navigationagent3d__.NavigationAgent3D|__subviewport__.SubViewport|__audiostreamplayer3d__.AudioStreamPlayer3D|__camera3d__.Camera3D|__editorfiledialog__.EditorFileDialog|__textureprogressbar__.TextureProgressBar|__range__.Range|__audiostreamplayer__.AudioStreamPlayer|__tilemaplayer__.TileMapLayer|__retargetmodifier3d__.RetargetModifier3D|__scrollbar__.ScrollBar|__occluderinstance3d__.OccluderInstance3D|__rootmotionview__.RootMotionView|__rigidbody2d__.RigidBody2D|__splitcontainer__.SplitContainer|__editorresourcepicker__.EditorResourcePicker|__lightmapgi__.LightmapGI|__videostreamplayer__.VideoStreamPlayer|__popup__.Popup|__physicsbody3d__.PhysicsBody3D|__multimeshinstance2d__.MultiMeshInstance2D|__sprite3d__.Sprite3D|__gpuparticlesattractor3d__.GPUParticlesAttractor3D|__xrcontroller3d__.XRController3D|__animatedsprite3d__.AnimatedSprite3D|__container__.Container|__staticbody3d__.StaticBody3D|__itemlist__.ItemList|__statusindicator__.StatusIndicator|__editorcommandpalette__.EditorCommandPalette|__subviewportcontainer__.SubViewportContainer|__springbonecollisionplane3d__.SpringBoneCollisionPlane3D|__gpuparticlescollisionbox3d__.GPUParticlesCollisionBox3D|__popuppanel__.PopupPanel|__staticbody2d__.StaticBody2D|__gpuparticlesattractorvectorfield3d__.GPUParticlesAttractorVectorField3D|__visibleonscreenenabler3d__.VisibleOnScreenEnabler3D|__openxrcompositionlayerquad__.OpenXRCompositionLayerQuad|__csgbox3d__.CSGBox3D|__menubar__.MenuBar|__vscrollbar__.VScrollBar|__collisionpolygon2d__.CollisionPolygon2D|__collisionpolygon3d__.CollisionPolygon3D|__area3d__.Area3D|__label3d__.Label3D|__progressbar__.ProgressBar|__textedit__.TextEdit|__directionallight3d__.DirectionalLight3D|__csgprimitive3d__.CSGPrimitive3D|__colorpickerbutton__.ColorPickerButton|__rigidbody3d__.RigidBody3D|__xrfacemodifier3d__.XRFaceModifier3D|__vehiclebody3d__.VehicleBody3D|__texturerect__.TextureRect|__codeedit__.CodeEdit|__physicsbody2d__.PhysicsBody2D|__characterbody2d__.CharacterBody2D|__colorpicker__.ColorPicker|__cpuparticles3d__.CPUParticles3D|__springbonecollisionsphere3d__.SpringBoneCollisionSphere3D|__marker2d__.Marker2D|__csgmesh3d__.CSGMesh3D|__tilemap__.TileMap|__colorrect__.ColorRect|__navigationobstacle2d__.NavigationObstacle2D|__xrnode3d__.XRNode3D|__editorinspector__.EditorInspector|__httprequest__.HTTPRequest|__area2d__.Area2D|__csgcombiner3d__.CSGCombiner3D|__fogvolume__.FogVolume|__sliderjoint3d__.SliderJoint3D|__vseparator__.VSeparator|__line2d__.Line2D|__skeletonik3d__.SkeletonIK3D|__centercontainer__.CenterContainer|__editorproperty__.EditorProperty|__geometryinstance3d__.GeometryInstance3D|__tabbar__.TabBar|__meshinstance2d__.MeshInstance2D|__joint3d__.Joint3D|__worldenvironment__.WorldEnvironment|__viewport__.Viewport|__openxrinteractionprofileeditorbase__.OpenXRInteractionProfileEditorBase|__editorscriptpicker__.EditorScriptPicker|__touchscreenbutton__.TouchScreenButton|__editorfilesystem__.EditorFileSystem|__omnilight3d__.OmniLight3D|__node3d__.Node3D|__timer__.Timer|__menubutton__.MenuButton|__navigationregion2d__.NavigationRegion2D|__scrollcontainer__.ScrollContainer|__springbonecollision3d__.SpringBoneCollision3D|__multiplayerspawner__.MultiplayerSpawner|__polygon2d__.Polygon2D|__lookatmodifier3d__.LookAtModifier3D|__shaderglobalsoverride__.ShaderGlobalsOverride|__springarm3d__.SpringArm3D|__hslider__.HSlider|__hscrollbar__.HScrollBar|__vslider__.VSlider|__parallaxlayer__.ParallaxLayer|__optionbutton__.OptionButton:
    """"""
    pass

  def set_position_smoothing_speed(self, position_smoothing_speed:float)->None:
    """"""
    pass

  def get_position_smoothing_speed(self)->float:
    """"""
    pass

  def set_position_smoothing_enabled(self, position_smoothing_speed:bool)->None:
    """"""
    pass

  def is_position_smoothing_enabled(self)->bool:
    """"""
    pass

  def set_rotation_smoothing_enabled(self, enabled:bool)->None:
    """"""
    pass

  def is_rotation_smoothing_enabled(self)->bool:
    """"""
    pass

  def set_rotation_smoothing_speed(self, speed:float)->None:
    """"""
    pass

  def get_rotation_smoothing_speed(self)->float:
    """"""
    pass

  def force_update_scroll(self)->None:
    """
				Forces the camera to update scroll immediately.
			"""
    pass

  def reset_smoothing(self)->None:
    """
				Sets the camera's position immediately to its current smoothing destination.
				This method has no effect if `position_smoothing_enabled` is `false`.
			"""
    pass

  def align(self)->None:
    """
				Aligns the camera to the tracked node.
			"""
    pass

  def set_screen_drawing_enabled(self, screen_drawing_enabled:bool)->None:
    """"""
    pass

  def is_screen_drawing_enabled(self)->bool:
    """"""
    pass

  def set_limit_drawing_enabled(self, limit_drawing_enabled:bool)->None:
    """"""
    pass

  def is_limit_drawing_enabled(self)->bool:
    """"""
    pass

  def set_margin_drawing_enabled(self, margin_drawing_enabled:bool)->None:
    """"""
    pass

  def is_margin_drawing_enabled(self)->bool:
    """"""
    pass


