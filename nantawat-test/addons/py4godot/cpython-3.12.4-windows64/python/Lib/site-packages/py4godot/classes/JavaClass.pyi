from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.n as __n__
import py4godot.classes.i as __i__
import py4godot.classes.e as __e__
import py4godot.classes.o as __o__
import py4godot.classes.d as __d__
import py4godot.classes.T as __t__
import py4godot.classes.RefCounted as __refcounted__
import py4godot.classes.c as __c__
import py4godot.classes.t as __t__
import py4godot.classes.D as __d__
import py4godot.classes.r as __r__
import py4godot.classes.p as __p__
import py4godot.classes.a as __a__
import py4godot.classes.JavaClass as __javaclass__
import py4godot.classes.A as __a__
import py4godot.classes.y as __y__



class JavaClass(__refcounted__.RefCounted):
  """
		Represents a class from the Java Native Interface. It is returned from `JavaClassWrapper.wrap`.
		**Note:** This class only works on Android. On any other platform, this class does nothing.
		**Note:** This class is not to be confused with `JavaScriptObject`.
	"""

  @staticmethod
  def constructor()->JavaClass:pass



  @staticmethod
  def cast(other:__object__.Object)->JavaClass:pass


  def get_java_class_name(self)->str:
    """
				Returns the Java class name.
			"""
    pass

  def get_java_method_list(self)->typedarray::Dictionary:
    """
				Returns the object's Java methods and their signatures as an `Array` of dictionaries, in the same format as `Object.get_method_list`.
			"""
    pass

  def get_java_parent_class(self)->__javaclass__.JavaClass:
    """
				Returns a `JavaClass` representing the Java parent class of this class.
			"""
    pass


