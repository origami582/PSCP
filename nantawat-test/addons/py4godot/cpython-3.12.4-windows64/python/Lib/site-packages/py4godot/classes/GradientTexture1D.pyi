from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.Gradient as __gradient__



class GradientTexture1D(__texture2d__.Texture2D):
  """
		A 1D texture that obtains colors from a `Gradient` to fill the texture data. The texture is filled by sampling the gradient for each pixel. Therefore, the texture does not necessarily represent an exact copy of the gradient, as it may miss some colors if there are not enough pixels. See also `GradientTexture2D`, `CurveTexture` and `CurveXYZTexture`.
	"""

  @staticmethod
  def constructor()->GradientTexture1D:pass



  @staticmethod
  def cast(other:__object__.Object)->GradientTexture1D:pass


  @property
  def gradient(self)->__gradient__.Gradient:
    """"""
    pass
  @gradient.setter
  def gradient(self,  value:__gradient__.Gradient)->None:
    """"""
    pass
  @property
  def width(self)->int:
    """"""
    pass
  @width.setter
  def width(self,  value:int)->None:
    """"""
    pass
  @property
  def use_hdr(self)->bool:
    """"""
    pass
  @use_hdr.setter
  def use_hdr(self,  value:bool)->None:
    """"""
    pass
  def set_gradient(self, gradient:__gradient__.Gradient)->None:
    """"""
    pass

  def get_gradient(self)->__gradient__.Gradient:
    """"""
    pass

  def set_width(self, width:int)->None:
    """"""
    pass

  def set_use_hdr(self, enabled:bool)->None:
    """"""
    pass

  def is_using_hdr(self)->bool:
    """"""
    pass


