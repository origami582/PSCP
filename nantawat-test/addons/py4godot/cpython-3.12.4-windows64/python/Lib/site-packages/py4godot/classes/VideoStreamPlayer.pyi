from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.NoiseTexture2D as __noisetexture2d__
import py4godot.classes.Control as __control__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.ViewportTexture as __viewporttexture__
import py4godot.classes.PlaceholderTexture2D as __placeholdertexture2d__
import py4godot.classes.AtlasTexture as __atlastexture__
import py4godot.classes.GradientTexture1D as __gradienttexture1d__
import py4godot.classes.AnimatedTexture as __animatedtexture__
import py4godot.classes.ImageTexture as __imagetexture__
import py4godot.classes.PortableCompressedTexture2D as __portablecompressedtexture2d__
import py4godot.classes.CompressedTexture2D as __compressedtexture2d__
import py4godot.classes.CanvasTexture as __canvastexture__
import py4godot.classes.VideoStreamTheora as __videostreamtheora__
import py4godot.classes.Texture2DRD as __texture2drd__
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.ExternalTexture as __externaltexture__
import py4godot.classes.MeshTexture as __meshtexture__
import py4godot.classes.VideoStream as __videostream__
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.CurveXYZTexture as __curvexyztexture__
import py4godot.classes.CameraTexture as __cameratexture__



class VideoStreamPlayer(__control__.Control):
  """
		A control used for playback of `VideoStream` resources.
		Supported video formats are `url=https://www.theora.org/`Ogg Theora`/url` (`.ogv`, `VideoStreamTheora`) and any format exposed via a GDExtension plugin.
		**Warning:** On Web, video playback _will_ perform poorly due to missing architecture-specific assembly optimizations.
	"""
  finished: BuiltinSignal

  @staticmethod
  def constructor()->VideoStreamPlayer:pass



  @staticmethod
  def cast(other:__object__.Object)->VideoStreamPlayer:pass


  @property
  def audio_track(self)->int:
    """"""
    pass
  @audio_track.setter
  def audio_track(self,  value:int)->None:
    """"""
    pass
  @property
  def stream(self)->__videostream__.VideoStream|__videostreamtheora__.VideoStreamTheora:
    """"""
    pass
  @stream.setter
  def stream(self,  value:__videostream__.VideoStream)->None:
    """"""
    pass
  @property
  def volume_db(self)->float:
    """"""
    pass
  @volume_db.setter
  def volume_db(self,  value:float)->None:
    """"""
    pass
  @property
  def volume(self)->float:
    """"""
    pass
  @volume.setter
  def volume(self,  value:float)->None:
    """"""
    pass
  @property
  def autoplay(self)->bool:
    """"""
    pass
  @autoplay.setter
  def autoplay(self,  value:bool)->None:
    """"""
    pass
  @property
  def paused(self)->bool:
    """"""
    pass
  @paused.setter
  def paused(self,  value:bool)->None:
    """"""
    pass
  @property
  def expand(self)->bool:
    """"""
    pass
  @expand.setter
  def expand(self,  value:bool)->None:
    """"""
    pass
  @property
  def loop(self)->bool:
    """"""
    pass
  @loop.setter
  def loop(self,  value:bool)->None:
    """"""
    pass
  @property
  def buffering_msec(self)->int:
    """"""
    pass
  @buffering_msec.setter
  def buffering_msec(self,  value:int)->None:
    """"""
    pass
  @property
  def stream_position(self)->float:
    """"""
    pass
  @stream_position.setter
  def stream_position(self,  value:float)->None:
    """"""
    pass
  @property
  def bus(self)->__core__.StringName:
    """"""
    pass
  @bus.setter
  def bus(self,  value:__core__.StringName)->None:
    """"""
    pass
  def set_stream(self, stream:__videostream__.VideoStream)->None:
    """"""
    pass

  def get_stream(self)->__videostream__.VideoStream|__videostreamtheora__.VideoStreamTheora:
    """"""
    pass

  def play(self)->None:
    """
				Starts the video playback from the beginning. If the video is paused, this will not unpause the video.
			"""
    pass

  def stop(self)->None:
    """
				Stops the video playback and sets the stream position to 0.
				**Note:** Although the stream position will be set to 0, the first frame of the video stream won't become the current frame.
			"""
    pass

  def is_playing(self)->bool:
    """
				Returns `true` if the video is playing.
				**Note:** The video is still considered playing if paused during playback.
			"""
    pass

  def set_paused(self, paused:bool)->None:
    """"""
    pass

  def is_paused(self)->bool:
    """"""
    pass

  def set_loop(self, loop:bool)->None:
    """"""
    pass

  def has_loop(self)->bool:
    """"""
    pass

  def set_volume(self, volume:float)->None:
    """"""
    pass

  def get_volume(self)->float:
    """"""
    pass

  def set_volume_db(self, db:float)->None:
    """"""
    pass

  def get_volume_db(self)->float:
    """"""
    pass

  def set_audio_track(self, track:int)->None:
    """"""
    pass

  def get_audio_track(self)->int:
    """"""
    pass

  def get_stream_name(self)->str:
    """
				Returns the video stream's name, or `"<No Stream>"` if no video stream is assigned.
			"""
    pass

  def get_stream_length(self)->float:
    """
				The length of the current stream, in seconds.
			"""
    pass

  def set_stream_position(self, position:float)->None:
    """"""
    pass

  def get_stream_position(self)->float:
    """"""
    pass

  def set_autoplay(self, enabled:bool)->None:
    """"""
    pass

  def has_autoplay(self)->bool:
    """"""
    pass

  def set_expand(self, enable:bool)->None:
    """"""
    pass

  def has_expand(self)->bool:
    """"""
    pass

  def set_buffering_msec(self, msec:int)->None:
    """"""
    pass

  def get_buffering_msec(self)->int:
    """"""
    pass

  def set_bus(self, bus:__core__.StringName|str)->None:
    """"""
    pass

  def get_bus(self)->__core__.StringName:
    """"""
    pass

  def get_video_texture(self)->__noisetexture2d__.NoiseTexture2D|__texture2d__.Texture2D|__viewporttexture__.ViewportTexture|__placeholdertexture2d__.PlaceholderTexture2D|__atlastexture__.AtlasTexture|__gradienttexture1d__.GradientTexture1D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__compressedtexture2d__.CompressedTexture2D|__canvastexture__.CanvasTexture|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__externaltexture__.ExternalTexture|__meshtexture__.MeshTexture|__gradienttexture2d__.GradientTexture2D|__curvexyztexture__.CurveXYZTexture|__cameratexture__.CameraTexture:
    """
				Returns the current frame as a `Texture2D`.
			"""
    pass


