from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.MultiplayerSynchronizer as __multiplayersynchronizer__
import py4godot.classes.Node as __node__
import py4godot.classes.SceneReplicationConfig as __scenereplicationconfig__


class VisibilityUpdateMode:
  VISIBILITY_PROCESS_IDLE:int = 0
  VISIBILITY_PROCESS_PHYSICS:int = 1
  VISIBILITY_PROCESS_NONE:int = 2


class MultiplayerSynchronizer(__node__.Node):
  """"""
  synchronized: BuiltinSignal
  delta_synchronized: BuiltinSignal
  visibility_changed: BuiltinSignal

  @staticmethod
  def constructor()->MultiplayerSynchronizer:pass



  @staticmethod
  def cast(other:__object__.Object)->MultiplayerSynchronizer:pass


  @property
  def root_path(self)->__core__.NodePath:
    """"""
    pass
  @root_path.setter
  def root_path(self,  value:__core__.NodePath)->None:
    """"""
    pass
  @property
  def replication_interval(self)->float:
    """"""
    pass
  @replication_interval.setter
  def replication_interval(self,  value:float)->None:
    """"""
    pass
  @property
  def delta_interval(self)->float:
    """"""
    pass
  @delta_interval.setter
  def delta_interval(self,  value:float)->None:
    """"""
    pass
  @property
  def replication_config(self)->__scenereplicationconfig__.SceneReplicationConfig:
    """"""
    pass
  @replication_config.setter
  def replication_config(self,  value:__scenereplicationconfig__.SceneReplicationConfig)->None:
    """"""
    pass
  @property
  def visibility_update_mode(self)->int:
    """"""
    pass
  @visibility_update_mode.setter
  def visibility_update_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def public_visibility(self)->bool:
    """"""
    pass
  @public_visibility.setter
  def public_visibility(self,  value:bool)->None:
    """"""
    pass
  def set_root_path(self, path:__core__.NodePath|str)->None:
    """"""
    pass

  def get_root_path(self)->__core__.NodePath:
    """"""
    pass

  def set_replication_interval(self, milliseconds:float)->None:
    """"""
    pass

  def get_replication_interval(self)->float:
    """"""
    pass

  def set_delta_interval(self, milliseconds:float)->None:
    """"""
    pass

  def get_delta_interval(self)->float:
    """"""
    pass

  def set_replication_config(self, config:__scenereplicationconfig__.SceneReplicationConfig)->None:
    """"""
    pass

  def get_replication_config(self)->__scenereplicationconfig__.SceneReplicationConfig:
    """"""
    pass

  def set_visibility_update_mode(self, mode:int )->None:
    """"""
    pass

  def get_visibility_update_mode(self)->int:
    """"""
    pass

  def update_visibility(self, for_peer:int=0)->None:
    """"""
    pass

  def set_visibility_public(self, visible:bool)->None:
    """"""
    pass

  def is_visibility_public(self)->bool:
    """"""
    pass

  def add_visibility_filter(self, filter:__core__.Callable)->None:
    """"""
    pass

  def remove_visibility_filter(self, filter:__core__.Callable)->None:
    """"""
    pass

  def set_visibility_for(self, peer:int, visible:bool)->None:
    """"""
    pass

  def get_visibility_for(self, peer:int)->bool:
    """"""
    pass


