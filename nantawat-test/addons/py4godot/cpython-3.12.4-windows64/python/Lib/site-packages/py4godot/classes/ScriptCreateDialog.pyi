from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.ConfirmationDialog as __confirmationdialog__



class ScriptCreateDialog(__confirmationdialog__.ConfirmationDialog):
  """
		The `ScriptCreateDialog` creates script files according to a given template for a given scripting language. The standard use is to configure its fields prior to calling one of the `Window.popup` methods.
		
		```gdscript
		func _ready():
			var dialog = ScriptCreateDialog.new();
			dialog.config("Node", "res://new_node.gd") # For in-engine types.
			dialog.config("\"res://base_node.gd\"", "res://derived_node.gd") # For script types.
			dialog.popup_centered()
		```
		
		
	"""
  script_created: BuiltinSignal

  @staticmethod
  def constructor()->ScriptCreateDialog:pass



  @staticmethod
  def cast(other:__object__.Object)->ScriptCreateDialog:pass


  def config(self, inherits:str, path:str, built_in_enabled:bool=True, load_enabled:bool=True)->None:
    """
				Prefills required fields to configure the ScriptCreateDialog for use.
			"""
    pass


