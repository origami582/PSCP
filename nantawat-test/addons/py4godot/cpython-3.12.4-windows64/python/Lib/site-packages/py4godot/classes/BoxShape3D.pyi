from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Shape3D as __shape3d__



class BoxShape3D(__shape3d__.Shape3D):
  """
		A 3D box shape, intended for use in physics. Usually used to provide a shape for a `CollisionShape3D`.
		**Performance:** `BoxShape3D` is fast to check collisions against. It is faster than `CapsuleShape3D` and `CylinderShape3D`, but slower than `SphereShape3D`.
	"""

  @staticmethod
  def constructor()->BoxShape3D:pass



  @staticmethod
  def cast(other:__object__.Object)->BoxShape3D:pass


  @property
  def size(self)->__core__.Vector3:
    """"""
    pass
  @size.setter
  def size(self,  value:__core__.Vector3)->None:
    """"""
    pass
  def set_size(self, size:__core__.Vector3)->None:
    """"""
    pass

  def get_size(self)->__core__.Vector3:
    """"""
    pass


