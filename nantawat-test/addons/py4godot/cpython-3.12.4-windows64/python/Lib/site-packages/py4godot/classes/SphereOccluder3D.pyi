from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Occluder3D as __occluder3d__



class SphereOccluder3D(__occluder3d__.Occluder3D):
  """
		`SphereOccluder3D` stores a sphere shape that can be used by the engine's occlusion culling system.
		See `OccluderInstance3D`'s documentation for instructions on setting up occlusion culling.
	"""

  @staticmethod
  def constructor()->SphereOccluder3D:pass



  @staticmethod
  def cast(other:__object__.Object)->SphereOccluder3D:pass


  @property
  def radius(self)->float:
    """"""
    pass
  @radius.setter
  def radius(self,  value:float)->None:
    """"""
    pass
  def set_radius(self, radius:float)->None:
    """"""
    pass

  def get_radius(self)->float:
    """"""
    pass


