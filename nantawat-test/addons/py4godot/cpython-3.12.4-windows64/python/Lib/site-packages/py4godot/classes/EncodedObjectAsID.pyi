from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted as __refcounted__



class EncodedObjectAsID(__refcounted__.RefCounted):
  """
		Utility class which holds a reference to the internal identifier of an `Object` instance, as given by `Object.get_instance_id`. This ID can then be used to retrieve the object instance with `@GlobalScope.instance_from_id`.
		This class is used internally by the editor inspector and script debugger, but can also be used in plugins to pass and display objects as their IDs.
	"""

  @staticmethod
  def constructor()->EncodedObjectAsID:pass



  @staticmethod
  def cast(other:__object__.Object)->EncodedObjectAsID:pass


  @property
  def object_id(self)->int:
    """"""
    pass
  @object_id.setter
  def object_id(self,  value:int)->None:
    """"""
    pass
  def set_object_id(self, id:int)->None:
    """"""
    pass

  def get_object_id(self)->int:
    """"""
    pass


