from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNode as __visualshadernode__
import py4godot.classes.VisualShaderNodeParticleEmit as __visualshadernodeparticleemit__


class EmitFlags:
  EMIT_FLAG_POSITION:int = 1
  EMIT_FLAG_ROT_SCALE:int = 2
  EMIT_FLAG_VELOCITY:int = 4
  EMIT_FLAG_COLOR:int = 8
  EMIT_FLAG_CUSTOM:int = 16


class VisualShaderNodeParticleEmit(__visualshadernode__.VisualShaderNode):
  """
		This node internally calls `emit_subparticle` shader method. It will emit a particle from the configured sub-emitter and also allows to customize how its emitted. Requires a sub-emitter assigned to the particles node with this shader.
	"""

  @staticmethod
  def constructor()->VisualShaderNodeParticleEmit:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeParticleEmit:pass


  @property
  def flags(self)->int:
    """"""
    pass
  @flags.setter
  def flags(self,  value:int)->None:
    """"""
    pass
  def set_flags(self, flags:int )->None:
    """"""
    pass

  def get_flags(self)->int:
    """"""
    pass


