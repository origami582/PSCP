from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.ConfirmationDialog as __confirmationdialog__



class EditorCommandPalette(__confirmationdialog__.ConfirmationDialog):
  """
		Object that holds all the available Commands and their shortcuts text. These Commands can be accessed through **Editor > Command Palette** menu.
		Command key names use slash delimiters to distinguish sections, for example: `"example/command1"` then `example` will be the section name.
		
		```gdscript
		var command_palette = EditorInterface.get_command_palette()
		# external_command is a function that will be called with the command is executed.
		var command_callable = Callable(self, "external_command").bind(arguments)
		command_palette.add_command("command", "test/command",command_callable)
		```
		
		
		**Note:** This class shouldn't be instantiated directly. Instead, access the singleton using `EditorInterface.get_command_palette`.
	"""

  @staticmethod
  def constructor()->EditorCommandPalette:pass



  @staticmethod
  def cast(other:__object__.Object)->EditorCommandPalette:pass


  def add_command(self, command_name:str, key_name:str, binded_callable:__core__.Callable, shortcut_text:str= __core__.String.new0())->None:
    """
				Adds a custom command to EditorCommandPalette.
				- `command_name`: `String` (Name of the **Command**. This is displayed to the user.)
				- `key_name`: `String` (Name of the key for a particular **Command**. This is used to uniquely identify the **Command**.)
				- `binded_callable`: `Callable` (Callable of the **Command**. This will be executed when the **Command** is selected.)
				- `shortcut_text`: `String` (Shortcut text of the **Command** if available.)
			"""
    pass

  def remove_command(self, key_name:str)->None:
    """
				Removes the custom command from EditorCommandPalette.
				- `key_name`: `String` (Name of the key for a particular **Command**.)
			"""
    pass


