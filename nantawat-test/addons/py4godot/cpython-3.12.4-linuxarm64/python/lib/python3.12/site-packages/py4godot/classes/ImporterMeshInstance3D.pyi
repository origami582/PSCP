from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.CSGSphere3D as __csgsphere3d__
import py4godot.classes.CSGTorus3D as __csgtorus3d__
import py4godot.classes.CSGCombiner3D as __csgcombiner3d__
import py4godot.classes.CPUParticles3D as __cpuparticles3d__
import py4godot.classes.CSGShape3D as __csgshape3d__
import py4godot.classes.Node3D as __node3d__
import py4godot.classes.MeshInstance3D as __meshinstance3d__
import py4godot.classes.Skin as __skin__
import py4godot.classes.GeometryInstance3D as __geometryinstance3d__
import py4godot.classes.Sprite3D as __sprite3d__
import py4godot.classes.CSGBox3D as __csgbox3d__
import py4godot.classes.MultiMeshInstance3D as __multimeshinstance3d__
import py4godot.classes.CSGPolygon3D as __csgpolygon3d__
import py4godot.classes.CSGMesh3D as __csgmesh3d__
import py4godot.classes.SoftBody3D as __softbody3d__
import py4godot.classes.ImporterMesh as __importermesh__
import py4godot.classes.GPUParticles3D as __gpuparticles3d__
import py4godot.classes.CSGPrimitive3D as __csgprimitive3d__
import py4godot.classes.AnimatedSprite3D as __animatedsprite3d__
import py4godot.classes.CSGCylinder3D as __csgcylinder3d__
import py4godot.classes.Label3D as __label3d__
import py4godot.classes.SpriteBase3D as __spritebase3d__



class ImporterMeshInstance3D(__node3d__.Node3D):
  """
"""

  @staticmethod
  def constructor()->ImporterMeshInstance3D:pass



  @staticmethod
  def cast(other:__object__.Object)->ImporterMeshInstance3D:pass


  @property
  def mesh(self)->__importermesh__.ImporterMesh:
    """"""
    pass
  @mesh.setter
  def mesh(self,  value:__importermesh__.ImporterMesh)->None:
    """"""
    pass
  @property
  def skin(self)->__skin__.Skin:
    """"""
    pass
  @skin.setter
  def skin(self,  value:__skin__.Skin)->None:
    """"""
    pass
  @property
  def skeleton_path(self)->__core__.NodePath:
    """"""
    pass
  @skeleton_path.setter
  def skeleton_path(self,  value:__core__.NodePath)->None:
    """"""
    pass
  @property
  def layer_mask(self)->int:
    """"""
    pass
  @layer_mask.setter
  def layer_mask(self,  value:int)->None:
    """"""
    pass
  @property
  def cast_shadow(self)->int:
    """"""
    pass
  @cast_shadow.setter
  def cast_shadow(self,  value:int)->None:
    """"""
    pass
  @property
  def visibility_range_begin(self)->float:
    """"""
    pass
  @visibility_range_begin.setter
  def visibility_range_begin(self,  value:float)->None:
    """"""
    pass
  @property
  def visibility_range_begin_margin(self)->float:
    """"""
    pass
  @visibility_range_begin_margin.setter
  def visibility_range_begin_margin(self,  value:float)->None:
    """"""
    pass
  @property
  def visibility_range_end(self)->float:
    """"""
    pass
  @visibility_range_end.setter
  def visibility_range_end(self,  value:float)->None:
    """"""
    pass
  @property
  def visibility_range_end_margin(self)->float:
    """"""
    pass
  @visibility_range_end_margin.setter
  def visibility_range_end_margin(self,  value:float)->None:
    """"""
    pass
  @property
  def visibility_range_fade_mode(self)->int:
    """"""
    pass
  @visibility_range_fade_mode.setter
  def visibility_range_fade_mode(self,  value:int)->None:
    """"""
    pass
  def set_mesh(self, mesh:__importermesh__.ImporterMesh)->None:
    """"""
    pass

  def get_mesh(self)->__importermesh__.ImporterMesh:
    """"""
    pass

  def set_skin(self, skin:__skin__.Skin)->None:
    """"""
    pass

  def get_skin(self)->__skin__.Skin:
    """"""
    pass

  def set_skeleton_path(self, skeleton_path:__core__.NodePath|str)->None:
    """"""
    pass

  def get_skeleton_path(self)->__core__.NodePath:
    """"""
    pass

  def set_layer_mask(self, layer_mask:int)->None:
    """"""
    pass

  def get_layer_mask(self)->int:
    """"""
    pass

  def set_cast_shadows_setting(self, shadow_casting_setting:int )->None:
    """"""
    pass

  def get_cast_shadows_setting(self)->int:
    """"""
    pass

  def set_visibility_range_end_margin(self, distance:float)->None:
    """"""
    pass

  def get_visibility_range_end_margin(self)->float:
    """"""
    pass

  def set_visibility_range_end(self, distance:float)->None:
    """"""
    pass

  def get_visibility_range_end(self)->float:
    """"""
    pass

  def set_visibility_range_begin_margin(self, distance:float)->None:
    """"""
    pass

  def get_visibility_range_begin_margin(self)->float:
    """"""
    pass

  def set_visibility_range_begin(self, distance:float)->None:
    """"""
    pass

  def get_visibility_range_begin(self)->float:
    """"""
    pass

  def set_visibility_range_fade_mode(self, mode:int )->None:
    """"""
    pass

  def get_visibility_range_fade_mode(self)->int:
    """"""
    pass


