from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AudioStreamMP3 as __audiostreammp3__
import py4godot.classes.AudioStream as __audiostream__
import py4godot.classes.AudioStreamPlaylist as __audiostreamplaylist__
import py4godot.classes.AudioStreamOggVorbis as __audiostreamoggvorbis__
import py4godot.classes.AudioStreamPolyphonic as __audiostreampolyphonic__
import py4godot.classes.AudioStreamGenerator as __audiostreamgenerator__
import py4godot.classes.AudioStreamWAV as __audiostreamwav__
import py4godot.classes.AudioStreamInteractive as __audiostreaminteractive__
import py4godot.classes.AudioStreamMicrophone as __audiostreammicrophone__
import py4godot.classes.AudioStreamRandomizer as __audiostreamrandomizer__
import py4godot.classes.AudioStreamSynchronized as __audiostreamsynchronized__



class AudioStreamSynchronized(__audiostream__.AudioStream):
  """"""

  @staticmethod
  def constructor()->AudioStreamSynchronized:pass



  @staticmethod
  def cast(other:__object__.Object)->AudioStreamSynchronized:pass


  @property
  def stream_count(self)->int:
    """"""
    pass
  @stream_count.setter
  def stream_count(self,  value:int)->None:
    """"""
    pass
  def set_stream_count(self, stream_count:int)->None:
    """"""
    pass

  def get_stream_count(self)->int:
    """"""
    pass

  def set_sync_stream(self, stream_index:int, audio_stream:__audiostream__.AudioStream)->None:
    """"""
    pass

  def get_sync_stream(self, stream_index:int)->__audiostreammp3__.AudioStreamMP3|__audiostream__.AudioStream|__audiostreamplaylist__.AudioStreamPlaylist|__audiostreamoggvorbis__.AudioStreamOggVorbis|__audiostreampolyphonic__.AudioStreamPolyphonic|__audiostreamgenerator__.AudioStreamGenerator|__audiostreamwav__.AudioStreamWAV|__audiostreaminteractive__.AudioStreamInteractive|__audiostreammicrophone__.AudioStreamMicrophone|__audiostreamrandomizer__.AudioStreamRandomizer|__audiostreamsynchronized__.AudioStreamSynchronized:
    """"""
    pass

  def set_sync_stream_volume(self, stream_index:int, volume_db:float)->None:
    """"""
    pass

  def get_sync_stream_volume(self, stream_index:int)->float:
    """"""
    pass


