from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNode as __visualshadernode__
import py4godot.classes.PlaceholderTexture2D as __placeholdertexture2d__
import py4godot.classes.Texture2DRD as __texture2drd__
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.NoiseTexture2D as __noisetexture2d__
import py4godot.classes.AnimatedTexture as __animatedtexture__
import py4godot.classes.VisualShaderNodeTexture as __visualshadernodetexture__
import py4godot.classes.ImageTexture as __imagetexture__
import py4godot.classes.GradientTexture1D as __gradienttexture1d__
import py4godot.classes.CanvasTexture as __canvastexture__
import py4godot.classes.PortableCompressedTexture2D as __portablecompressedtexture2d__
import py4godot.classes.ExternalTexture as __externaltexture__
import py4godot.classes.ViewportTexture as __viewporttexture__
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.MeshTexture as __meshtexture__
import py4godot.classes.CameraTexture as __cameratexture__
import py4godot.classes.CurveXYZTexture as __curvexyztexture__
import py4godot.classes.CompressedTexture2D as __compressedtexture2d__
import py4godot.classes.AtlasTexture as __atlastexture__
import py4godot.classes.Texture2D as __texture2d__


class Source:
  SOURCE_TEXTURE:int = 0
  SOURCE_SCREEN:int = 1
  SOURCE_2D_TEXTURE:int = 2
  SOURCE_2D_NORMAL:int = 3
  SOURCE_DEPTH:int = 4
  SOURCE_PORT:int = 5
  SOURCE_3D_NORMAL:int = 6
  SOURCE_ROUGHNESS:int = 7
  SOURCE_MAX:int = 8
class TextureType:
  KIND_DATA:int = 0
  KIND_COLOR:int = 1
  KIND_NORMAL_MAP:int = 2
  KIND_MAX:int = 3


class VisualShaderNodeTexture(__visualshadernode__.VisualShaderNode):
  """
		Performs a lookup operation on the provided texture, with support for multiple texture sources to choose from.
	"""

  @staticmethod
  def constructor()->VisualShaderNodeTexture:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeTexture:pass


  @property
  def source(self)->int:
    """"""
    pass
  @source.setter
  def source(self,  value:int)->None:
    """"""
    pass
  @property
  def texture(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass
  @texture.setter
  def texture(self,  value:__texture2d__.Texture2D)->None:
    """"""
    pass
  @property
  def texture_type(self)->int:
    """"""
    pass
  @texture_type.setter
  def texture_type(self,  value:int)->None:
    """"""
    pass
  def set_source(self, value:int )->None:
    """"""
    pass

  def get_source(self)->int:
    """"""
    pass

  def set_texture(self, value:__texture2d__.Texture2D)->None:
    """"""
    pass

  def get_texture(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass

  def set_texture_type(self, value:int )->None:
    """"""
    pass

  def get_texture_type(self)->int:
    """"""
    pass


