from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Button as __button__
import py4godot.classes.PopupMenu as __popupmenu__



class MenuButton(__button__.Button):
  """
		A button that brings up a `PopupMenu` when clicked. To create new items inside this `PopupMenu`, use `get_popup().add_item("My Item Name")`. You can also create them directly from Godot editor's inspector.
		See also `BaseButton` which contains common properties and methods associated with this node.
	"""
  about_to_popup: BuiltinSignal

  @staticmethod
  def constructor()->MenuButton:pass



  @staticmethod
  def cast(other:__object__.Object)->MenuButton:pass


  @property
  def switch_on_hover(self)->bool:
    """"""
    pass
  @switch_on_hover.setter
  def switch_on_hover(self,  value:bool)->None:
    """"""
    pass
  @property
  def item_count(self)->int:
    """"""
    pass
  @item_count.setter
  def item_count(self,  value:int)->None:
    """"""
    pass
  def get_popup(self)->__popupmenu__.PopupMenu:
    """
				Returns the `PopupMenu` contained in this button.
				**Warning:** This is a required internal node, removing and freeing it may cause a crash. If you wish to hide it or any of its children, use their `Window.visible` property.
			"""
    pass

  def show_popup(self)->None:
    """
				Adjusts popup position and sizing for the `MenuButton`, then shows the `PopupMenu`. Prefer this over using `get_popup().popup()`.
			"""
    pass

  def set_switch_on_hover(self, enable:bool)->None:
    """"""
    pass

  def is_switch_on_hover(self)->bool:
    """"""
    pass

  def set_disable_shortcuts(self, disabled:bool)->None:
    """
				If `true`, shortcuts are disabled and cannot be used to trigger the button.
			"""
    pass

  def set_item_count(self, count:int)->None:
    """"""
    pass

  def get_item_count(self)->int:
    """"""
    pass


