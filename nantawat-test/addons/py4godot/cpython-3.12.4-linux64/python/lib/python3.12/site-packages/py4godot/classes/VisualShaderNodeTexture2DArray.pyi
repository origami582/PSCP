from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.CompressedTexture2DArray as __compressedtexture2darray__
import py4godot.classes.PlaceholderCubemapArray as __placeholdercubemaparray__
import py4godot.classes.TextureLayered as __texturelayered__
import py4godot.classes.PlaceholderCubemap as __placeholdercubemap__
import py4godot.classes.CompressedTextureLayered as __compressedtexturelayered__
import py4godot.classes.TextureCubemapRD as __texturecubemaprd__
import py4godot.classes.VisualShaderNodeSample3D as __visualshadernodesample3d__
import py4godot.classes.CompressedCubemapArray as __compressedcubemaparray__
import py4godot.classes.PlaceholderTextureLayered as __placeholdertexturelayered__
import py4godot.classes.Texture2DArrayRD as __texture2darrayrd__
import py4godot.classes.PlaceholderTexture2DArray as __placeholdertexture2darray__
import py4godot.classes.TextureLayeredRD as __texturelayeredrd__
import py4godot.classes.CubemapArray as __cubemaparray__
import py4godot.classes.Cubemap as __cubemap__
import py4godot.classes.Texture2DArray as __texture2darray__
import py4godot.classes.ImageTextureLayered as __imagetexturelayered__
import py4godot.classes.TextureCubemapArrayRD as __texturecubemaparrayrd__
import py4godot.classes.CompressedCubemap as __compressedcubemap__



class VisualShaderNodeTexture2DArray(__visualshadernodesample3d__.VisualShaderNodeSample3D):
  """
		Translated to `uniform sampler2DArray` in the shader language.
	"""

  @staticmethod
  def constructor()->VisualShaderNodeTexture2DArray:pass



  def __setitem__(self, value:Any,  index:int) -> None: pass

  def __getitem__(self,  index:int)->Any:pass

  def __iter__(self)->VisualShaderNodeTexture2DArray:pass

  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeTexture2DArray:pass


  @property
  def texture_array(self)->Texture2DArray,CompressedTexture2DArray,PlaceholderTexture2DArray,Texture2DArrayRD:
    """"""
    pass
  @texture_array.setter
  def texture_array(self,  value:__texture2darray__.Texture2DArray)->None:
    """"""
    pass
  def set_texture_array(self, value:__texturelayered__.TextureLayered)->None:
    """"""
    pass

  def get_texture_array(self)->__compressedtexture2darray__.CompressedTexture2DArray|__placeholdercubemaparray__.PlaceholderCubemapArray|__texturelayered__.TextureLayered|__placeholdercubemap__.PlaceholderCubemap|__compressedtexturelayered__.CompressedTextureLayered|__texturecubemaprd__.TextureCubemapRD|__compressedcubemaparray__.CompressedCubemapArray|__placeholdertexturelayered__.PlaceholderTextureLayered|__texture2darrayrd__.Texture2DArrayRD|__placeholdertexture2darray__.PlaceholderTexture2DArray|__texturelayeredrd__.TextureLayeredRD|__cubemaparray__.CubemapArray|__cubemap__.Cubemap|__texture2darray__.Texture2DArray|__imagetexturelayered__.ImageTextureLayered|__texturecubemaparrayrd__.TextureCubemapArrayRD|__compressedcubemap__.CompressedCubemap:
    """"""
    pass


