from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RenderingDevice as __renderingdevice__
import py4godot.classes.RefCounted as __refcounted__



class RDAttachmentFormat(__refcounted__.RefCounted):
  """
		This object is used by `RenderingDevice`.
	"""

  @staticmethod
  def constructor()->RDAttachmentFormat:pass



  @staticmethod
  def cast(other:__object__.Object)->RDAttachmentFormat:pass


  @property
  def format(self)->int:
    """"""
    pass
  @format.setter
  def format(self,  value:int)->None:
    """"""
    pass
  @property
  def samples(self)->int:
    """"""
    pass
  @samples.setter
  def samples(self,  value:int)->None:
    """"""
    pass
  @property
  def usage_flags(self)->int:
    """"""
    pass
  @usage_flags.setter
  def usage_flags(self,  value:int)->None:
    """"""
    pass
  def set_format(self, p_member:int )->None:
    """"""
    pass

  def get_format(self)->int:
    """"""
    pass

  def set_samples(self, p_member:int )->None:
    """"""
    pass

  def get_samples(self)->int:
    """"""
    pass

  def set_usage_flags(self, p_member:int)->None:
    """"""
    pass

  def get_usage_flags(self)->int:
    """"""
    pass


