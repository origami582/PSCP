from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.TextServerExtension as __textserverextension__



class TextServerDummy(__textserverextension__.TextServerExtension):
  """
		A dummy `TextServer` interface that doesn't do anything. Useful for freeing up memory when rendering text is not needed, as text servers are resource-intensive. It can also be used for performance comparisons in complex GUIs to check the impact of text rendering.
		A dummy text server is always available at the start of a project. Here's how to access it:
		```gdscript
		var dummy_text_server = TextServerManager.find_interface("Dummy")
		if dummy_text_server != null:
			TextServerManager.set_primary_interface(dummy_text_server)
			# If the other text servers are unneeded, they can be removed:
			for i in TextServerManager.get_interface_count():
				var text_server = TextServerManager.get_interface(i)
				if text_server != dummy_text_server:
					TextServerManager.remove_interface(text_server)
		```
		The command line argument `--text-driver Dummy` (case-sensitive) can be used to force the "Dummy" `TextServer` on any project.
	"""

  @staticmethod
  def constructor()->TextServerDummy:pass



  @staticmethod
  def cast(other:__object__.Object)->TextServerDummy:pass


