from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.GeometryInstance3D as __geometryinstance3d__
import py4godot.classes.MultiMesh as __multimesh__



class MultiMeshInstance3D(__geometryinstance3d__.GeometryInstance3D):
  """
		`MultiMeshInstance3D` is a specialized node to instance `GeometryInstance3D`s based on a `MultiMesh` resource.
		This is useful to optimize the rendering of a high number of instances of a given mesh (for example trees in a forest or grass strands).
	"""

  @staticmethod
  def constructor()->MultiMeshInstance3D:pass



  @staticmethod
  def cast(other:__object__.Object)->MultiMeshInstance3D:pass


  @property
  def multimesh(self)->__multimesh__.MultiMesh:
    """"""
    pass
  @multimesh.setter
  def multimesh(self,  value:__multimesh__.MultiMesh)->None:
    """"""
    pass
  def set_multimesh(self, multimesh:__multimesh__.MultiMesh)->None:
    """"""
    pass

  def get_multimesh(self)->__multimesh__.MultiMesh:
    """"""
    pass


