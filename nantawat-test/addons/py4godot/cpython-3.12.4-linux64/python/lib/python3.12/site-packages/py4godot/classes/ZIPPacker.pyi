from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.ZIPPacker as __zippacker__
import py4godot.classes.RefCounted as __refcounted__


class ZipAppend:
  APPEND_CREATE:int = 0
  APPEND_CREATEAFTER:int = 1
  APPEND_ADDINZIP:int = 2


class ZIPPacker(__refcounted__.RefCounted):
  """"""

  @staticmethod
  def constructor()->ZIPPacker:pass



  @staticmethod
  def cast(other:__object__.Object)->ZIPPacker:pass


  def open(self, path:str, append:int =0)->int:
    """"""
    pass

  def start_file(self, path:str)->int:
    """"""
    pass

  def write_file(self, data:__core__.PackedByteArray)->int:
    """"""
    pass

  def close_file(self)->int:
    """"""
    pass

  def close(self)->int:
    """"""
    pass


