from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Texture2DRD as __texture2drd__
import py4godot.classes.TextServer as __textserver__
import py4godot.classes.TextServerDummy as __textserverdummy__
import py4godot.classes.VSplitContainer as __vsplitcontainer__
import py4godot.classes.EditorInspector as __editorinspector__
import py4godot.classes.HBoxContainer as __hboxcontainer__
import py4godot.classes.TextureButton as __texturebutton__
import py4godot.classes.ExternalTexture as __externaltexture__
import py4godot.classes.VFlowContainer as __vflowcontainer__
import py4godot.classes.EditorProperty as __editorproperty__
import py4godot.classes.AspectRatioContainer as __aspectratiocontainer__
import py4godot.classes.ColorRect as __colorrect__
import py4godot.classes.TextServerExtension as __textserverextension__
import py4godot.classes.SpinBox as __spinbox__
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.Range as __range__
import py4godot.classes.ReferenceRect as __referencerect__
import py4godot.classes.ScrollContainer as __scrollcontainer__
import py4godot.classes.AtlasTexture as __atlastexture__
import py4godot.classes.Container as __container__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.CheckButton as __checkbutton__
import py4godot.classes.Label as __label__
import py4godot.classes.CenterContainer as __centercontainer__
import py4godot.classes.HSlider as __hslider__
import py4godot.classes.RichTextLabel as __richtextlabel__
import py4godot.classes.LineEdit as __lineedit__
import py4godot.classes.HSeparator as __hseparator__
import py4godot.classes.AnimatedTexture as __animatedtexture__
import py4godot.classes.ImageTexture as __imagetexture__
import py4godot.classes.GradientTexture1D as __gradienttexture1d__
import py4godot.classes.HFlowContainer as __hflowcontainer__
import py4godot.classes.PanelContainer as __panelcontainer__
import py4godot.classes.TabBar as __tabbar__
import py4godot.classes.VSeparator as __vseparator__
import py4godot.classes.SubViewportContainer as __subviewportcontainer__
import py4godot.classes.LinkButton as __linkbutton__
import py4godot.classes.OpenXRInteractionProfileEditor as __openxrinteractionprofileeditor__
import py4godot.classes.GraphEdit as __graphedit__
import py4godot.classes.OpenXRInteractionProfileEditorBase as __openxrinteractionprofileeditorbase__
import py4godot.classes.CurveXYZTexture as __curvexyztexture__
import py4godot.classes.Separator as __separator__
import py4godot.classes.TextEdit as __textedit__
import py4godot.classes.Tree as __tree__
import py4godot.classes.FlowContainer as __flowcontainer__
import py4godot.classes.MenuBar as __menubar__
import py4godot.classes.HSplitContainer as __hsplitcontainer__
import py4godot.classes.NinePatchRect as __ninepatchrect__
import py4godot.classes.PlaceholderTexture2D as __placeholdertexture2d__
import py4godot.classes.VBoxContainer as __vboxcontainer__
import py4godot.classes.NoiseTexture2D as __noisetexture2d__
import py4godot.classes.VScrollBar as __vscrollbar__
import py4godot.classes.ItemList as __itemlist__
import py4godot.classes.TextureProgressBar as __textureprogressbar__
import py4godot.classes.TextureRect as __texturerect__
import py4godot.classes.VideoStreamPlayer as __videostreamplayer__
import py4godot.classes.ScriptEditorBase as __scripteditorbase__
import py4godot.classes.Panel as __panel__
import py4godot.classes.PortableCompressedTexture2D as __portablecompressedtexture2d__
import py4godot.classes.ViewportTexture as __viewporttexture__
import py4godot.classes.VSlider as __vslider__
import py4godot.classes.EditorToaster as __editortoaster__
import py4godot.classes.ProgressBar as __progressbar__
import py4godot.classes.MeshTexture as __meshtexture__
import py4godot.classes.ScriptEditor as __scripteditor__
import py4godot.classes.OptionButton as __optionbutton__
import py4godot.classes.SplitContainer as __splitcontainer__
import py4godot.classes.GraphElement as __graphelement__
import py4godot.classes.BaseButton as __basebutton__
import py4godot.classes.ColorPicker as __colorpicker__
import py4godot.classes.MenuButton as __menubutton__
import py4godot.classes.FileSystemDock as __filesystemdock__
import py4godot.classes.OpenXRBindingModifierEditor as __openxrbindingmodifiereditor__
import py4godot.classes.ScrollBar as __scrollbar__
import py4godot.classes.Slider as __slider__
import py4godot.classes.EditorSpinSlider as __editorspinslider__
import py4godot.classes.GraphNode as __graphnode__
import py4godot.classes.CanvasTexture as __canvastexture__
import py4godot.classes.HScrollBar as __hscrollbar__
import py4godot.classes.CheckBox as __checkbox__
import py4godot.classes.EditorResourcePicker as __editorresourcepicker__
import py4godot.classes.GraphFrame as __graphframe__
import py4godot.classes.CodeEdit as __codeedit__
import py4godot.classes.ColorPickerButton as __colorpickerbutton__
import py4godot.classes.EditorScriptPicker as __editorscriptpicker__
import py4godot.classes.TextServerAdvanced as __textserveradvanced__
import py4godot.classes.MarginContainer as __margincontainer__
import py4godot.classes.BoxContainer as __boxcontainer__
import py4godot.classes.CameraTexture as __cameratexture__
import py4godot.classes.TabContainer as __tabcontainer__
import py4godot.classes.Control as __control__
import py4godot.classes.Button as __button__
import py4godot.classes.CompressedTexture2D as __compressedtexture2d__
import py4godot.classes.GridContainer as __gridcontainer__



class Button(__basebutton__.BaseButton):
  """
		`Button` is the standard themed button. It can contain text and an icon, and it will display them according to the current `Theme`.
		**Example:** Create a button and connect a method that will be called when the button is pressed:
		
		```gdscript
		func _ready():
			var button = Button.new()
			button.text = "Click me"
			button.pressed.connect(_button_pressed)
			add_child(button)

		func _button_pressed():
			print("Hello world!")
		```
		
		
		See also `BaseButton` which contains common properties and methods associated with this node.
		**Note:** Buttons do not detect touch input and therefore don't support multitouch, since mouse emulation can only press one button at a given time. Use `TouchScreenButton` for buttons that trigger gameplay movement or actions.
	"""

  @staticmethod
  def constructor()->Button:pass



  @staticmethod
  def cast(other:__object__.Object)->Button:pass


  @property
  def text(self)->str:
    """"""
    pass
  @text.setter
  def text(self,  value:str)->None:
    """"""
    pass
  @property
  def icon(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass
  @icon.setter
  def icon(self,  value:__texture2d__.Texture2D)->None:
    """"""
    pass
  @property
  def flat(self)->bool:
    """"""
    pass
  @flat.setter
  def flat(self,  value:bool)->None:
    """"""
    pass
  @property
  def alignment(self)->int:
    """"""
    pass
  @alignment.setter
  def alignment(self,  value:int)->None:
    """"""
    pass
  @property
  def text_overrun_behavior(self)->int:
    """"""
    pass
  @text_overrun_behavior.setter
  def text_overrun_behavior(self,  value:int)->None:
    """"""
    pass
  @property
  def autowrap_mode(self)->int:
    """"""
    pass
  @autowrap_mode.setter
  def autowrap_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def clip_text(self)->bool:
    """"""
    pass
  @clip_text.setter
  def clip_text(self,  value:bool)->None:
    """"""
    pass
  @property
  def icon_alignment(self)->int:
    """"""
    pass
  @icon_alignment.setter
  def icon_alignment(self,  value:int)->None:
    """"""
    pass
  @property
  def vertical_icon_alignment(self)->int:
    """"""
    pass
  @vertical_icon_alignment.setter
  def vertical_icon_alignment(self,  value:int)->None:
    """"""
    pass
  @property
  def expand_icon(self)->bool:
    """"""
    pass
  @expand_icon.setter
  def expand_icon(self,  value:bool)->None:
    """"""
    pass
  @property
  def text_direction(self)->int:
    """"""
    pass
  @text_direction.setter
  def text_direction(self,  value:int)->None:
    """"""
    pass
  @property
  def language(self)->str:
    """"""
    pass
  @language.setter
  def language(self,  value:str)->None:
    """"""
    pass
  def set_text(self, text:str)->None:
    """"""
    pass

  def get_text(self)->str:
    """"""
    pass

  def set_text_overrun_behavior(self, overrun_behavior:int )->None:
    """"""
    pass

  def get_text_overrun_behavior(self)->int:
    """"""
    pass

  def set_autowrap_mode(self, autowrap_mode:int )->None:
    """"""
    pass

  def get_autowrap_mode(self)->int:
    """"""
    pass

  def set_text_direction(self, direction:int )->None:
    """"""
    pass

  def get_text_direction(self)->int:
    """"""
    pass

  def set_language(self, language:str)->None:
    """"""
    pass

  def get_language(self)->str:
    """"""
    pass

  def set_button_icon(self, texture:__texture2d__.Texture2D)->None:
    """"""
    pass

  def get_button_icon(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass

  def set_flat(self, enabled:bool)->None:
    """"""
    pass

  def is_flat(self)->bool:
    """"""
    pass

  def set_clip_text(self, enabled:bool)->None:
    """"""
    pass

  def get_clip_text(self)->bool:
    """"""
    pass

  def set_text_alignment(self, alignment:int )->None:
    """"""
    pass

  def get_text_alignment(self)->int:
    """"""
    pass

  def set_icon_alignment(self, icon_alignment:int )->None:
    """"""
    pass

  def get_icon_alignment(self)->int:
    """"""
    pass

  def set_vertical_icon_alignment(self, vertical_icon_alignment:int )->None:
    """"""
    pass

  def get_vertical_icon_alignment(self)->int:
    """"""
    pass

  def set_expand_icon(self, enabled:bool)->None:
    """"""
    pass

  def is_expand_icon(self)->bool:
    """"""
    pass


