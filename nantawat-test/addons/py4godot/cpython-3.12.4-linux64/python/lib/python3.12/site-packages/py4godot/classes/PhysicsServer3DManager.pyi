from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Object as __object__



class PhysicsServer3DManager(__object__.Object):
  """
		`PhysicsServer3DManager` is the API for registering `PhysicsServer3D` implementations and for setting the default implementation.
		**Note:** It is not possible to switch physics servers at runtime. This class is only used on startup at the server initialization level, by Godot itself and possibly by GDExtensions.
	"""



  @staticmethod
  def cast(other:__object__.Object)->PhysicsServer3DManager:pass

  @staticmethod
  def instance()->PhysicsServer3DManager:pass

  def register_server(self, name:str, create_callback:__core__.Callable)->None:
    """
				Register a `PhysicsServer3D` implementation by passing a `name` and a `Callable` that returns a `PhysicsServer3D` object.
			"""
    pass

  def set_default_server(self, name:str, priority:int)->None:
    """
				Set the default `PhysicsServer3D` implementation to the one identified by `name`, if `priority` is greater than the priority of the current default implementation.
			"""
    pass


