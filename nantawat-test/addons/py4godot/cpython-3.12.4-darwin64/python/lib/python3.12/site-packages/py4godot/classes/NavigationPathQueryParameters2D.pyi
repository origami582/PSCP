from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted as __refcounted__
import py4godot.classes.NavigationPathQueryParameters2D as __navigationpathqueryparameters2d__


class PathfindingAlgorithm:
  PATHFINDING_ALGORITHM_ASTAR:int = 0
class PathPostProcessing:
  PATH_POSTPROCESSING_CORRIDORFUNNEL:int = 0
  PATH_POSTPROCESSING_EDGECENTERED:int = 1
  PATH_POSTPROCESSING_NONE:int = 2
class PathMetadataFlags:
  PATH_METADATA_INCLUDE_NONE:int = 0
  PATH_METADATA_INCLUDE_TYPES:int = 1
  PATH_METADATA_INCLUDE_RIDS:int = 2
  PATH_METADATA_INCLUDE_OWNERS:int = 4
  PATH_METADATA_INCLUDE_ALL:int = 7


class NavigationPathQueryParameters2D(__refcounted__.RefCounted):
  """
		By changing various properties of this object, such as the start and target position, you can configure path queries to the `NavigationServer2D`.
	"""

  @staticmethod
  def constructor()->NavigationPathQueryParameters2D:pass



  @staticmethod
  def cast(other:__object__.Object)->NavigationPathQueryParameters2D:pass


  @property
  def map(self)->__core__.RID:
    """"""
    pass
  @map.setter
  def map(self,  value:__core__.RID)->None:
    """"""
    pass
  @property
  def start_position(self)->__core__.Vector2:
    """"""
    pass
  @start_position.setter
  def start_position(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def target_position(self)->__core__.Vector2:
    """"""
    pass
  @target_position.setter
  def target_position(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def navigation_layers(self)->int:
    """"""
    pass
  @navigation_layers.setter
  def navigation_layers(self,  value:int)->None:
    """"""
    pass
  @property
  def pathfinding_algorithm(self)->int:
    """"""
    pass
  @pathfinding_algorithm.setter
  def pathfinding_algorithm(self,  value:int)->None:
    """"""
    pass
  @property
  def path_postprocessing(self)->int:
    """"""
    pass
  @path_postprocessing.setter
  def path_postprocessing(self,  value:int)->None:
    """"""
    pass
  @property
  def metadata_flags(self)->int:
    """"""
    pass
  @metadata_flags.setter
  def metadata_flags(self,  value:int)->None:
    """"""
    pass
  @property
  def simplify_path(self)->bool:
    """"""
    pass
  @simplify_path.setter
  def simplify_path(self,  value:bool)->None:
    """"""
    pass
  @property
  def simplify_epsilon(self)->float:
    """"""
    pass
  @simplify_epsilon.setter
  def simplify_epsilon(self,  value:float)->None:
    """"""
    pass
  def set_pathfinding_algorithm(self, pathfinding_algorithm:int )->None:
    """"""
    pass

  def get_pathfinding_algorithm(self)->int:
    """"""
    pass

  def set_path_postprocessing(self, path_postprocessing:int )->None:
    """"""
    pass

  def get_path_postprocessing(self)->int:
    """"""
    pass

  def set_map(self, map:__core__.RID)->None:
    """"""
    pass

  def get_map(self)->__core__.RID:
    """"""
    pass

  def set_start_position(self, start_position:__core__.Vector2)->None:
    """"""
    pass

  def get_start_position(self)->__core__.Vector2:
    """"""
    pass

  def set_target_position(self, target_position:__core__.Vector2)->None:
    """"""
    pass

  def get_target_position(self)->__core__.Vector2:
    """"""
    pass

  def set_navigation_layers(self, navigation_layers:int)->None:
    """"""
    pass

  def get_navigation_layers(self)->int:
    """"""
    pass

  def set_metadata_flags(self, flags:int)->None:
    """"""
    pass

  def get_metadata_flags(self)->int:
    """"""
    pass

  def set_simplify_path(self, enabled:bool)->None:
    """"""
    pass

  def get_simplify_path(self)->bool:
    """"""
    pass

  def set_simplify_epsilon(self, epsilon:float)->None:
    """"""
    pass

  def get_simplify_epsilon(self)->float:
    """"""
    pass


