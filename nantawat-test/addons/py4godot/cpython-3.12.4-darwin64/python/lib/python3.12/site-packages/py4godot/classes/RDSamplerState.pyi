from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RenderingDevice as __renderingdevice__
import py4godot.classes.RefCounted as __refcounted__



class RDSamplerState(__refcounted__.RefCounted):
  """
		This object is used by `RenderingDevice`.
	"""

  @staticmethod
  def constructor()->RDSamplerState:pass



  @staticmethod
  def cast(other:__object__.Object)->RDSamplerState:pass


  @property
  def mag_filter(self)->int:
    """"""
    pass
  @mag_filter.setter
  def mag_filter(self,  value:int)->None:
    """"""
    pass
  @property
  def min_filter(self)->int:
    """"""
    pass
  @min_filter.setter
  def min_filter(self,  value:int)->None:
    """"""
    pass
  @property
  def mip_filter(self)->int:
    """"""
    pass
  @mip_filter.setter
  def mip_filter(self,  value:int)->None:
    """"""
    pass
  @property
  def repeat_u(self)->int:
    """"""
    pass
  @repeat_u.setter
  def repeat_u(self,  value:int)->None:
    """"""
    pass
  @property
  def repeat_v(self)->int:
    """"""
    pass
  @repeat_v.setter
  def repeat_v(self,  value:int)->None:
    """"""
    pass
  @property
  def repeat_w(self)->int:
    """"""
    pass
  @repeat_w.setter
  def repeat_w(self,  value:int)->None:
    """"""
    pass
  @property
  def lod_bias(self)->float:
    """"""
    pass
  @lod_bias.setter
  def lod_bias(self,  value:float)->None:
    """"""
    pass
  @property
  def use_anisotropy(self)->bool:
    """"""
    pass
  @use_anisotropy.setter
  def use_anisotropy(self,  value:bool)->None:
    """"""
    pass
  @property
  def anisotropy_max(self)->float:
    """"""
    pass
  @anisotropy_max.setter
  def anisotropy_max(self,  value:float)->None:
    """"""
    pass
  @property
  def enable_compare(self)->bool:
    """"""
    pass
  @enable_compare.setter
  def enable_compare(self,  value:bool)->None:
    """"""
    pass
  @property
  def compare_op(self)->int:
    """"""
    pass
  @compare_op.setter
  def compare_op(self,  value:int)->None:
    """"""
    pass
  @property
  def min_lod(self)->float:
    """"""
    pass
  @min_lod.setter
  def min_lod(self,  value:float)->None:
    """"""
    pass
  @property
  def max_lod(self)->float:
    """"""
    pass
  @max_lod.setter
  def max_lod(self,  value:float)->None:
    """"""
    pass
  @property
  def border_color(self)->int:
    """"""
    pass
  @border_color.setter
  def border_color(self,  value:int)->None:
    """"""
    pass
  @property
  def unnormalized_uvw(self)->bool:
    """"""
    pass
  @unnormalized_uvw.setter
  def unnormalized_uvw(self,  value:bool)->None:
    """"""
    pass
  def set_mag_filter(self, p_member:int )->None:
    """"""
    pass

  def get_mag_filter(self)->int:
    """"""
    pass

  def set_min_filter(self, p_member:int )->None:
    """"""
    pass

  def get_min_filter(self)->int:
    """"""
    pass

  def set_mip_filter(self, p_member:int )->None:
    """"""
    pass

  def get_mip_filter(self)->int:
    """"""
    pass

  def set_repeat_u(self, p_member:int )->None:
    """"""
    pass

  def get_repeat_u(self)->int:
    """"""
    pass

  def set_repeat_v(self, p_member:int )->None:
    """"""
    pass

  def get_repeat_v(self)->int:
    """"""
    pass

  def set_repeat_w(self, p_member:int )->None:
    """"""
    pass

  def get_repeat_w(self)->int:
    """"""
    pass

  def set_lod_bias(self, p_member:float)->None:
    """"""
    pass

  def get_lod_bias(self)->float:
    """"""
    pass

  def set_use_anisotropy(self, p_member:bool)->None:
    """"""
    pass

  def get_use_anisotropy(self)->bool:
    """"""
    pass

  def set_anisotropy_max(self, p_member:float)->None:
    """"""
    pass

  def get_anisotropy_max(self)->float:
    """"""
    pass

  def set_enable_compare(self, p_member:bool)->None:
    """"""
    pass

  def get_enable_compare(self)->bool:
    """"""
    pass

  def set_compare_op(self, p_member:int )->None:
    """"""
    pass

  def get_compare_op(self)->int:
    """"""
    pass

  def set_min_lod(self, p_member:float)->None:
    """"""
    pass

  def get_min_lod(self)->float:
    """"""
    pass

  def set_max_lod(self, p_member:float)->None:
    """"""
    pass

  def get_max_lod(self)->float:
    """"""
    pass

  def set_border_color(self, p_member:int )->None:
    """"""
    pass

  def get_border_color(self)->int:
    """"""
    pass

  def set_unnormalized_uvw(self, p_member:bool)->None:
    """"""
    pass

  def get_unnormalized_uvw(self)->bool:
    """"""
    pass


