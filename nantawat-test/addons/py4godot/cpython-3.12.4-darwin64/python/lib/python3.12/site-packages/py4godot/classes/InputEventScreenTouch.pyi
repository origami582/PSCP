from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.InputEventFromWindow as __inputeventfromwindow__



class InputEventScreenTouch(__inputeventfromwindow__.InputEventFromWindow):
  """
		Stores information about multi-touch press/release input events. Supports touch press, touch release and `index` for multi-touch count and order.
	"""

  @staticmethod
  def constructor()->InputEventScreenTouch:pass



  @staticmethod
  def cast(other:__object__.Object)->InputEventScreenTouch:pass


  @property
  def index(self)->int:
    """"""
    pass
  @index.setter
  def index(self,  value:int)->None:
    """"""
    pass
  @property
  def position(self)->__core__.Vector2:
    """"""
    pass
  @position.setter
  def position(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def canceled(self)->bool:
    """"""
    pass
  @canceled.setter
  def canceled(self,  value:bool)->None:
    """"""
    pass
  @property
  def pressed(self)->bool:
    """"""
    pass
  @pressed.setter
  def pressed(self,  value:bool)->None:
    """"""
    pass
  @property
  def double_tap(self)->bool:
    """"""
    pass
  @double_tap.setter
  def double_tap(self,  value:bool)->None:
    """"""
    pass
  def set_index(self, index:int)->None:
    """"""
    pass

  def get_index(self)->int:
    """"""
    pass

  def set_position(self, position:__core__.Vector2)->None:
    """"""
    pass

  def get_position(self)->__core__.Vector2:
    """"""
    pass

  def set_pressed(self, pressed:bool)->None:
    """"""
    pass

  def set_canceled(self, canceled:bool)->None:
    """"""
    pass

  def set_double_tap(self, double_tap:bool)->None:
    """"""
    pass

  def is_double_tap(self)->bool:
    """"""
    pass


