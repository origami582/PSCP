from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.XRPositionalTracker as __xrpositionaltracker__
import py4godot.classes.XRBodyTracker as __xrbodytracker__


class BodyFlags:
  BODY_FLAG_UPPER_BODY_SUPPORTED:int = 1
  BODY_FLAG_LOWER_BODY_SUPPORTED:int = 2
  BODY_FLAG_HANDS_SUPPORTED:int = 4
class Joint:
  JOINT_ROOT:int = 0
  JOINT_HIPS:int = 1
  JOINT_SPINE:int = 2
  JOINT_CHEST:int = 3
  JOINT_UPPER_CHEST:int = 4
  JOINT_NECK:int = 5
  JOINT_HEAD:int = 6
  JOINT_HEAD_TIP:int = 7
  JOINT_LEFT_SHOULDER:int = 8
  JOINT_LEFT_UPPER_ARM:int = 9
  JOINT_LEFT_LOWER_ARM:int = 10
  JOINT_RIGHT_SHOULDER:int = 11
  JOINT_RIGHT_UPPER_ARM:int = 12
  JOINT_RIGHT_LOWER_ARM:int = 13
  JOINT_LEFT_UPPER_LEG:int = 14
  JOINT_LEFT_LOWER_LEG:int = 15
  JOINT_LEFT_FOOT:int = 16
  JOINT_LEFT_TOES:int = 17
  JOINT_RIGHT_UPPER_LEG:int = 18
  JOINT_RIGHT_LOWER_LEG:int = 19
  JOINT_RIGHT_FOOT:int = 20
  JOINT_RIGHT_TOES:int = 21
  JOINT_LEFT_HAND:int = 22
  JOINT_LEFT_PALM:int = 23
  JOINT_LEFT_WRIST:int = 24
  JOINT_LEFT_THUMB_METACARPAL:int = 25
  JOINT_LEFT_THUMB_PHALANX_PROXIMAL:int = 26
  JOINT_LEFT_THUMB_PHALANX_DISTAL:int = 27
  JOINT_LEFT_THUMB_TIP:int = 28
  JOINT_LEFT_INDEX_FINGER_METACARPAL:int = 29
  JOINT_LEFT_INDEX_FINGER_PHALANX_PROXIMAL:int = 30
  JOINT_LEFT_INDEX_FINGER_PHALANX_INTERMEDIATE:int = 31
  JOINT_LEFT_INDEX_FINGER_PHALANX_DISTAL:int = 32
  JOINT_LEFT_INDEX_FINGER_TIP:int = 33
  JOINT_LEFT_MIDDLE_FINGER_METACARPAL:int = 34
  JOINT_LEFT_MIDDLE_FINGER_PHALANX_PROXIMAL:int = 35
  JOINT_LEFT_MIDDLE_FINGER_PHALANX_INTERMEDIATE:int = 36
  JOINT_LEFT_MIDDLE_FINGER_PHALANX_DISTAL:int = 37
  JOINT_LEFT_MIDDLE_FINGER_TIP:int = 38
  JOINT_LEFT_RING_FINGER_METACARPAL:int = 39
  JOINT_LEFT_RING_FINGER_PHALANX_PROXIMAL:int = 40
  JOINT_LEFT_RING_FINGER_PHALANX_INTERMEDIATE:int = 41
  JOINT_LEFT_RING_FINGER_PHALANX_DISTAL:int = 42
  JOINT_LEFT_RING_FINGER_TIP:int = 43
  JOINT_LEFT_PINKY_FINGER_METACARPAL:int = 44
  JOINT_LEFT_PINKY_FINGER_PHALANX_PROXIMAL:int = 45
  JOINT_LEFT_PINKY_FINGER_PHALANX_INTERMEDIATE:int = 46
  JOINT_LEFT_PINKY_FINGER_PHALANX_DISTAL:int = 47
  JOINT_LEFT_PINKY_FINGER_TIP:int = 48
  JOINT_RIGHT_HAND:int = 49
  JOINT_RIGHT_PALM:int = 50
  JOINT_RIGHT_WRIST:int = 51
  JOINT_RIGHT_THUMB_METACARPAL:int = 52
  JOINT_RIGHT_THUMB_PHALANX_PROXIMAL:int = 53
  JOINT_RIGHT_THUMB_PHALANX_DISTAL:int = 54
  JOINT_RIGHT_THUMB_TIP:int = 55
  JOINT_RIGHT_INDEX_FINGER_METACARPAL:int = 56
  JOINT_RIGHT_INDEX_FINGER_PHALANX_PROXIMAL:int = 57
  JOINT_RIGHT_INDEX_FINGER_PHALANX_INTERMEDIATE:int = 58
  JOINT_RIGHT_INDEX_FINGER_PHALANX_DISTAL:int = 59
  JOINT_RIGHT_INDEX_FINGER_TIP:int = 60
  JOINT_RIGHT_MIDDLE_FINGER_METACARPAL:int = 61
  JOINT_RIGHT_MIDDLE_FINGER_PHALANX_PROXIMAL:int = 62
  JOINT_RIGHT_MIDDLE_FINGER_PHALANX_INTERMEDIATE:int = 63
  JOINT_RIGHT_MIDDLE_FINGER_PHALANX_DISTAL:int = 64
  JOINT_RIGHT_MIDDLE_FINGER_TIP:int = 65
  JOINT_RIGHT_RING_FINGER_METACARPAL:int = 66
  JOINT_RIGHT_RING_FINGER_PHALANX_PROXIMAL:int = 67
  JOINT_RIGHT_RING_FINGER_PHALANX_INTERMEDIATE:int = 68
  JOINT_RIGHT_RING_FINGER_PHALANX_DISTAL:int = 69
  JOINT_RIGHT_RING_FINGER_TIP:int = 70
  JOINT_RIGHT_PINKY_FINGER_METACARPAL:int = 71
  JOINT_RIGHT_PINKY_FINGER_PHALANX_PROXIMAL:int = 72
  JOINT_RIGHT_PINKY_FINGER_PHALANX_INTERMEDIATE:int = 73
  JOINT_RIGHT_PINKY_FINGER_PHALANX_DISTAL:int = 74
  JOINT_RIGHT_PINKY_FINGER_TIP:int = 75
  JOINT_MAX:int = 76
class JointFlags:
  JOINT_FLAG_ORIENTATION_VALID:int = 1
  JOINT_FLAG_ORIENTATION_TRACKED:int = 2
  JOINT_FLAG_POSITION_VALID:int = 4
  JOINT_FLAG_POSITION_TRACKED:int = 8


class XRBodyTracker(__xrpositionaltracker__.XRPositionalTracker):
  """
		A body tracking system will create an instance of this object and add it to the `XRServer`. This tracking system will then obtain skeleton data, convert it to the Godot Humanoid skeleton and store this data on the `XRBodyTracker` object.
		Use `XRBodyModifier3D` to animate a body mesh using body tracking data.
	"""

  @staticmethod
  def constructor()->XRBodyTracker:pass



  @staticmethod
  def cast(other:__object__.Object)->XRBodyTracker:pass


  @property
  def has_tracking_data(self)->bool:
    """"""
    pass
  @has_tracking_data.setter
  def has_tracking_data(self,  value:bool)->None:
    """"""
    pass
  @property
  def body_flags(self)->int:
    """"""
    pass
  @body_flags.setter
  def body_flags(self,  value:int)->None:
    """"""
    pass
  def set_has_tracking_data(self, has_data:bool)->None:
    """"""
    pass

  def get_has_tracking_data(self)->bool:
    """"""
    pass

  def set_body_flags(self, flags:int)->None:
    """"""
    pass

  def get_body_flags(self)->int:
    """"""
    pass

  def set_joint_flags(self, joint:int , flags:int)->None:
    """
				Sets flags about the validity of the tracking data for the given body joint.
			"""
    pass

  def get_joint_flags(self, joint:int )->int:
    """
				Returns flags about the validity of the tracking data for the given body joint.
			"""
    pass

  def set_joint_transform(self, joint:int , transform:__core__.Transform3D)->None:
    """
				Sets the transform for the given body joint.
			"""
    pass

  def get_joint_transform(self, joint:int )->__core__.Transform3D:
    """
				Returns the transform for the given body joint.
			"""
    pass


