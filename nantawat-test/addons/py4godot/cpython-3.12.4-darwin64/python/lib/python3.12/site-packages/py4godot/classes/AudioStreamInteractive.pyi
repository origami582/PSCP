from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AudioStreamMP3 as __audiostreammp3__
import py4godot.classes.AudioStream as __audiostream__
import py4godot.classes.AudioStreamPlaylist as __audiostreamplaylist__
import py4godot.classes.AudioStreamOggVorbis as __audiostreamoggvorbis__
import py4godot.classes.AudioStreamPolyphonic as __audiostreampolyphonic__
import py4godot.classes.AudioStreamGenerator as __audiostreamgenerator__
import py4godot.classes.AudioStreamWAV as __audiostreamwav__
import py4godot.classes.AudioStreamInteractive as __audiostreaminteractive__
import py4godot.classes.AudioStreamMicrophone as __audiostreammicrophone__
import py4godot.classes.AudioStreamRandomizer as __audiostreamrandomizer__
import py4godot.classes.AudioStreamSynchronized as __audiostreamsynchronized__


class TransitionFromTime:
  TRANSITION_FROM_TIME_IMMEDIATE:int = 0
  TRANSITION_FROM_TIME_NEXT_BEAT:int = 1
  TRANSITION_FROM_TIME_NEXT_BAR:int = 2
  TRANSITION_FROM_TIME_END:int = 3
class TransitionToTime:
  TRANSITION_TO_TIME_SAME_POSITION:int = 0
  TRANSITION_TO_TIME_START:int = 1
class FadeMode:
  FADE_DISABLED:int = 0
  FADE_IN:int = 1
  FADE_OUT:int = 2
  FADE_CROSS:int = 3
  FADE_AUTOMATIC:int = 4
class AutoAdvanceMode:
  AUTO_ADVANCE_DISABLED:int = 0
  AUTO_ADVANCE_ENABLED:int = 1
  AUTO_ADVANCE_RETURN_TO_HOLD:int = 2


class AudioStreamInteractive(__audiostream__.AudioStream):
  """"""

  @staticmethod
  def constructor()->AudioStreamInteractive:pass



  @staticmethod
  def cast(other:__object__.Object)->AudioStreamInteractive:pass


  @property
  def clip_count(self)->int:
    """"""
    pass
  @clip_count.setter
  def clip_count(self,  value:int)->None:
    """"""
    pass
  @property
  def initial_clip(self)->int:
    """"""
    pass
  @initial_clip.setter
  def initial_clip(self,  value:int)->None:
    """"""
    pass
  def set_clip_count(self, clip_count:int)->None:
    """"""
    pass

  def get_clip_count(self)->int:
    """"""
    pass

  def set_initial_clip(self, clip_index:int)->None:
    """"""
    pass

  def get_initial_clip(self)->int:
    """"""
    pass

  def set_clip_name(self, clip_index:int, name:__core__.StringName|str)->None:
    """"""
    pass

  def get_clip_name(self, clip_index:int)->__core__.StringName:
    """"""
    pass

  def set_clip_stream(self, clip_index:int, stream:__audiostream__.AudioStream)->None:
    """"""
    pass

  def get_clip_stream(self, clip_index:int)->__audiostreammp3__.AudioStreamMP3|__audiostream__.AudioStream|__audiostreamplaylist__.AudioStreamPlaylist|__audiostreamoggvorbis__.AudioStreamOggVorbis|__audiostreampolyphonic__.AudioStreamPolyphonic|__audiostreamgenerator__.AudioStreamGenerator|__audiostreamwav__.AudioStreamWAV|__audiostreaminteractive__.AudioStreamInteractive|__audiostreammicrophone__.AudioStreamMicrophone|__audiostreamrandomizer__.AudioStreamRandomizer|__audiostreamsynchronized__.AudioStreamSynchronized:
    """"""
    pass

  def set_clip_auto_advance(self, clip_index:int, mode:int )->None:
    """"""
    pass

  def get_clip_auto_advance(self, clip_index:int)->int:
    """"""
    pass

  def set_clip_auto_advance_next_clip(self, clip_index:int, auto_advance_next_clip:int)->None:
    """"""
    pass

  def get_clip_auto_advance_next_clip(self, clip_index:int)->int:
    """"""
    pass

  def add_transition(self, from_clip:int, to_clip:int, from_time:int , to_time:int , fade_mode:int , fade_beats:float, use_filler_clip:bool=False, filler_clip:int=-1, hold_previous:bool=False)->None:
    """"""
    pass

  def has_transition(self, from_clip:int, to_clip:int)->bool:
    """"""
    pass

  def erase_transition(self, from_clip:int, to_clip:int)->None:
    """"""
    pass

  def get_transition_list(self)->__core__.PackedInt32Array:
    """"""
    pass

  def get_transition_from_time(self, from_clip:int, to_clip:int)->int:
    """"""
    pass

  def get_transition_to_time(self, from_clip:int, to_clip:int)->int:
    """"""
    pass

  def get_transition_fade_mode(self, from_clip:int, to_clip:int)->int:
    """"""
    pass

  def get_transition_fade_beats(self, from_clip:int, to_clip:int)->float:
    """"""
    pass

  def is_transition_using_filler_clip(self, from_clip:int, to_clip:int)->bool:
    """"""
    pass

  def get_transition_filler_clip(self, from_clip:int, to_clip:int)->int:
    """"""
    pass

  def is_transition_holding_previous(self, from_clip:int, to_clip:int)->bool:
    """"""
    pass


