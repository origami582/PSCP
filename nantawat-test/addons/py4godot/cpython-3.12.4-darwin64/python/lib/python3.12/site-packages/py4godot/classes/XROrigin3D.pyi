from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Node3D as __node3d__



class XROrigin3D(__node3d__.Node3D):
  """
		This is a special node within the AR/VR system that maps the physical location of the center of our tracking space to the virtual location within our game world.
		Multiple origin points can be added to the scene tree, but only one can used at a time. All the `XRCamera3D`, `XRController3D`, and `XRAnchor3D` nodes should be direct children of this node for spatial tracking to work correctly.
		It is the position of this node that you update when your character needs to move through your game world while we're not moving in the real world. Movement in the real world is always in relation to this origin point.
		For example, if your character is driving a car, the `XROrigin3D` node should be a child node of this car. Or, if you're implementing a teleport system to move your character, you should change the position of this node.
	"""

  @staticmethod
  def constructor()->XROrigin3D:pass



  @staticmethod
  def cast(other:__object__.Object)->XROrigin3D:pass


  @property
  def world_scale(self)->float:
    """"""
    pass
  @world_scale.setter
  def world_scale(self,  value:float)->None:
    """"""
    pass
  @property
  def current(self)->bool:
    """"""
    pass
  @current.setter
  def current(self,  value:bool)->None:
    """"""
    pass
  def set_world_scale(self, world_scale:float)->None:
    """"""
    pass

  def get_world_scale(self)->float:
    """"""
    pass

  def set_current(self, enabled:bool)->None:
    """"""
    pass

  def is_current(self)->bool:
    """"""
    pass


