from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AudioStreamPlayback as __audiostreamplayback__
import py4godot.classes.AudioStream as __audiostream__
import py4godot.classes.AudioStreamPlaybackOggVorbis as __audiostreamplaybackoggvorbis__
import py4godot.classes.AudioStreamGenerator as __audiostreamgenerator__
import py4godot.classes.AudioStreamMicrophone as __audiostreammicrophone__
import py4godot.classes.AudioStreamPlaybackPolyphonic as __audiostreamplaybackpolyphonic__
import py4godot.classes.AudioStreamRandomizer as __audiostreamrandomizer__
import py4godot.classes.AudioServer as __audioserver__
import py4godot.classes.AudioStreamPlaybackResampled as __audiostreamplaybackresampled__
import py4godot.classes.Node2D as __node2d__
import py4godot.classes.AudioStreamMP3 as __audiostreammp3__
import py4godot.classes.AudioStreamGeneratorPlayback as __audiostreamgeneratorplayback__
import py4godot.classes.AudioStreamPlaybackInteractive as __audiostreamplaybackinteractive__
import py4godot.classes.AudioStreamPlaylist as __audiostreamplaylist__
import py4godot.classes.AudioStreamOggVorbis as __audiostreamoggvorbis__
import py4godot.classes.AudioStreamPolyphonic as __audiostreampolyphonic__
import py4godot.classes.AudioStreamWAV as __audiostreamwav__
import py4godot.classes.AudioStreamInteractive as __audiostreaminteractive__
import py4godot.classes.AudioStreamPlaybackPlaylist as __audiostreamplaybackplaylist__
import py4godot.classes.AudioStreamSynchronized as __audiostreamsynchronized__
import py4godot.classes.AudioStreamPlaybackSynchronized as __audiostreamplaybacksynchronized__



class AudioStreamPlayer2D(__node2d__.Node2D):
  """
		Plays audio that is attenuated with distance to the listener.
		By default, audio is heard from the screen center. This can be changed by adding an `AudioListener2D` node to the scene and enabling it by calling `AudioListener2D.make_current` on it.
		See also `AudioStreamPlayer` to play a sound non-positionally.
		**Note:** Hiding an `AudioStreamPlayer2D` node does not disable its audio output. To temporarily disable an `AudioStreamPlayer2D`'s audio output, set `volume_db` to a very low value like `-100` (which isn't audible to human hearing).
	"""
  finished: BuiltinSignal

  @staticmethod
  def constructor()->AudioStreamPlayer2D:pass



  @staticmethod
  def cast(other:__object__.Object)->AudioStreamPlayer2D:pass


  @property
  def stream(self)->__audiostreammp3__.AudioStreamMP3|__audiostream__.AudioStream|__audiostreamplaylist__.AudioStreamPlaylist|__audiostreamoggvorbis__.AudioStreamOggVorbis|__audiostreampolyphonic__.AudioStreamPolyphonic|__audiostreamgenerator__.AudioStreamGenerator|__audiostreamwav__.AudioStreamWAV|__audiostreaminteractive__.AudioStreamInteractive|__audiostreammicrophone__.AudioStreamMicrophone|__audiostreamrandomizer__.AudioStreamRandomizer|__audiostreamsynchronized__.AudioStreamSynchronized:
    """"""
    pass
  @stream.setter
  def stream(self,  value:__audiostream__.AudioStream)->None:
    """"""
    pass
  @property
  def volume_db(self)->float:
    """"""
    pass
  @volume_db.setter
  def volume_db(self,  value:float)->None:
    """"""
    pass
  @property
  def volume_linear(self)->float:
    """"""
    pass
  @volume_linear.setter
  def volume_linear(self,  value:float)->None:
    """"""
    pass
  @property
  def pitch_scale(self)->float:
    """"""
    pass
  @pitch_scale.setter
  def pitch_scale(self,  value:float)->None:
    """"""
    pass
  @property
  def playing(self)->bool:
    """"""
    pass
  @playing.setter
  def playing(self,  value:bool)->None:
    """"""
    pass
  @property
  def autoplay(self)->bool:
    """"""
    pass
  @autoplay.setter
  def autoplay(self,  value:bool)->None:
    """"""
    pass
  @property
  def stream_paused(self)->bool:
    """"""
    pass
  @stream_paused.setter
  def stream_paused(self,  value:bool)->None:
    """"""
    pass
  @property
  def max_distance(self)->float:
    """"""
    pass
  @max_distance.setter
  def max_distance(self,  value:float)->None:
    """"""
    pass
  @property
  def attenuation(self)->float:
    """"""
    pass
  @attenuation.setter
  def attenuation(self,  value:float)->None:
    """"""
    pass
  @property
  def max_polyphony(self)->int:
    """"""
    pass
  @max_polyphony.setter
  def max_polyphony(self,  value:int)->None:
    """"""
    pass
  @property
  def panning_strength(self)->float:
    """"""
    pass
  @panning_strength.setter
  def panning_strength(self,  value:float)->None:
    """"""
    pass
  @property
  def bus(self)->__core__.StringName:
    """"""
    pass
  @bus.setter
  def bus(self,  value:__core__.StringName)->None:
    """"""
    pass
  @property
  def area_mask(self)->int:
    """"""
    pass
  @area_mask.setter
  def area_mask(self,  value:int)->None:
    """"""
    pass
  @property
  def playback_type(self)->int:
    """"""
    pass
  @playback_type.setter
  def playback_type(self,  value:int)->None:
    """"""
    pass
  def set_stream(self, stream:__audiostream__.AudioStream)->None:
    """"""
    pass

  def get_stream(self)->__audiostreammp3__.AudioStreamMP3|__audiostream__.AudioStream|__audiostreamplaylist__.AudioStreamPlaylist|__audiostreamoggvorbis__.AudioStreamOggVorbis|__audiostreampolyphonic__.AudioStreamPolyphonic|__audiostreamgenerator__.AudioStreamGenerator|__audiostreamwav__.AudioStreamWAV|__audiostreaminteractive__.AudioStreamInteractive|__audiostreammicrophone__.AudioStreamMicrophone|__audiostreamrandomizer__.AudioStreamRandomizer|__audiostreamsynchronized__.AudioStreamSynchronized:
    """"""
    pass

  def set_volume_db(self, volume_db:float)->None:
    """"""
    pass

  def get_volume_db(self)->float:
    """"""
    pass

  def set_volume_linear(self, volume_linear:float)->None:
    """"""
    pass

  def get_volume_linear(self)->float:
    """"""
    pass

  def set_pitch_scale(self, pitch_scale:float)->None:
    """"""
    pass

  def get_pitch_scale(self)->float:
    """"""
    pass

  def play(self, from_position:float=0.0)->None:
    """
				Queues the audio to play on the next physics frame, from the given position `from_position`, in seconds.
			"""
    pass

  def seek(self, to_position:float)->None:
    """
				Sets the position from which audio will be played, in seconds.
			"""
    pass

  def stop(self)->None:
    """
				Stops the audio.
			"""
    pass

  def is_playing(self)->bool:
    """"""
    pass

  def get_playback_position(self)->float:
    """
				Returns the position in the `AudioStream`.
			"""
    pass

  def set_bus(self, bus:__core__.StringName|str)->None:
    """"""
    pass

  def get_bus(self)->__core__.StringName:
    """"""
    pass

  def set_autoplay(self, enable:bool)->None:
    """"""
    pass

  def is_autoplay_enabled(self)->bool:
    """"""
    pass

  def set_playing(self, enable:bool)->None:
    """"""
    pass

  def set_max_distance(self, pixels:float)->None:
    """"""
    pass

  def get_max_distance(self)->float:
    """"""
    pass

  def set_attenuation(self, curve:float)->None:
    """"""
    pass

  def get_attenuation(self)->float:
    """"""
    pass

  def set_area_mask(self, mask:int)->None:
    """"""
    pass

  def get_area_mask(self)->int:
    """"""
    pass

  def set_stream_paused(self, pause:bool)->None:
    """"""
    pass

  def get_stream_paused(self)->bool:
    """"""
    pass

  def set_max_polyphony(self, max_polyphony:int)->None:
    """"""
    pass

  def get_max_polyphony(self)->int:
    """"""
    pass

  def set_panning_strength(self, panning_strength:float)->None:
    """"""
    pass

  def get_panning_strength(self)->float:
    """"""
    pass

  def has_stream_playback(self)->bool:
    """
				Returns whether the `AudioStreamPlayer` can return the `AudioStreamPlayback` object or not.
			"""
    pass

  def get_stream_playback(self)->__audiostreamplayback__.AudioStreamPlayback|__audiostreamgeneratorplayback__.AudioStreamGeneratorPlayback|__audiostreamplaybackinteractive__.AudioStreamPlaybackInteractive|__audiostreamplaybackoggvorbis__.AudioStreamPlaybackOggVorbis|__audiostreamplaybackpolyphonic__.AudioStreamPlaybackPolyphonic|__audiostreamplaybackplaylist__.AudioStreamPlaybackPlaylist|__audiostreamplaybackresampled__.AudioStreamPlaybackResampled|__audiostreamplaybacksynchronized__.AudioStreamPlaybackSynchronized:
    """
				Returns the `AudioStreamPlayback` object associated with this `AudioStreamPlayer2D`.
			"""
    pass

  def set_playback_type(self, playback_type:int )->None:
    """"""
    pass

  def get_playback_type(self)->int:
    """"""
    pass


