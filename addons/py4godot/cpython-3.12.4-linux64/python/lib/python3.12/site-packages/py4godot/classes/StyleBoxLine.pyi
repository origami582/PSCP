from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.StyleBox as __stylebox__



class StyleBoxLine(__stylebox__.StyleBox):
  """
		A `StyleBox` that displays a single line of a given color and thickness. The line can be either horizontal or vertical. Useful for separators.
	"""

  @staticmethod
  def constructor()->StyleBoxLine:pass



  @staticmethod
  def cast(other:__object__.Object)->StyleBoxLine:pass


  @property
  def color(self)->__core__.Color:
    """"""
    pass
  @color.setter
  def color(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def grow_begin(self)->float:
    """"""
    pass
  @grow_begin.setter
  def grow_begin(self,  value:float)->None:
    """"""
    pass
  @property
  def grow_end(self)->float:
    """"""
    pass
  @grow_end.setter
  def grow_end(self,  value:float)->None:
    """"""
    pass
  @property
  def thickness(self)->int:
    """"""
    pass
  @thickness.setter
  def thickness(self,  value:int)->None:
    """"""
    pass
  @property
  def vertical(self)->bool:
    """"""
    pass
  @vertical.setter
  def vertical(self,  value:bool)->None:
    """"""
    pass
  def set_color(self, color:__core__.Color)->None:
    """"""
    pass

  def get_color(self)->__core__.Color:
    """"""
    pass

  def set_thickness(self, thickness:int)->None:
    """"""
    pass

  def get_thickness(self)->int:
    """"""
    pass

  def set_grow_begin(self, offset:float)->None:
    """"""
    pass

  def get_grow_begin(self)->float:
    """"""
    pass

  def set_grow_end(self, offset:float)->None:
    """"""
    pass

  def get_grow_end(self)->float:
    """"""
    pass

  def set_vertical(self, vertical:bool)->None:
    """"""
    pass

  def is_vertical(self)->bool:
    """"""
    pass


