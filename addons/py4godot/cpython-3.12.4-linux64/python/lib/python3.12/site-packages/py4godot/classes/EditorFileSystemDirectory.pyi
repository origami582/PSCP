from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Object as __object__
import py4godot.classes.EditorFileSystemDirectory as __editorfilesystemdirectory__



class EditorFileSystemDirectory(__object__.Object):
  """
		A more generalized, low-level variation of the directory concept.
	"""

  @staticmethod
  def constructor()->EditorFileSystemDirectory:pass



  @staticmethod
  def cast(other:__object__.Object)->EditorFileSystemDirectory:pass


  def get_subdir_count(self)->int:
    """
				Returns the number of subdirectories in this directory.
			"""
    pass

  def get_subdir(self, idx:int)->__editorfilesystemdirectory__.EditorFileSystemDirectory:
    """
				Returns the subdirectory at index `idx`.
			"""
    pass

  def get_file_count(self)->int:
    """
				Returns the number of files in this directory.
			"""
    pass

  def get_file(self, idx:int)->str:
    """
				Returns the name of the file at index `idx`.
			"""
    pass

  def get_file_path(self, idx:int)->str:
    """
				Returns the path to the file at index `idx`.
			"""
    pass

  def get_file_type(self, idx:int)->__core__.StringName:
    """
				Returns the resource type of the file at index `idx`. This returns a string such as `"Resource"` or `"GDScript"`, _not_ a file extension such as `".gd"`.
			"""
    pass

  def get_file_script_class_name(self, idx:int)->str:
    """
				Returns the name of the script class defined in the file at index `idx`. If the file doesn't define a script class using the `class_name` syntax, this will return an empty string.
			"""
    pass

  def get_file_script_class_extends(self, idx:int)->str:
    """
				Returns the base class of the script class defined in the file at index `idx`. If the file doesn't define a script class using the `class_name` syntax, this will return an empty string.
			"""
    pass

  def get_file_import_is_valid(self, idx:int)->bool:
    """
				Returns `true` if the file at index `idx` imported properly.
			"""
    pass

  def get_name(self)->str:
    """
				Returns the name of this directory.
			"""
    pass

  def get_path(self)->str:
    """
				Returns the path to this directory.
			"""
    pass

  def get_parent(self)->__editorfilesystemdirectory__.EditorFileSystemDirectory:
    """
				Returns the parent directory for this directory or `null` if called on a directory at `res://` or `user://`.
			"""
    pass

  def find_file_index(self, name:str)->int:
    """
				Returns the index of the file with name `name` or `-1` if not found.
			"""
    pass

  def find_dir_index(self, name:str)->int:
    """
				Returns the index of the directory with name `name` or `-1` if not found.
			"""
    pass


