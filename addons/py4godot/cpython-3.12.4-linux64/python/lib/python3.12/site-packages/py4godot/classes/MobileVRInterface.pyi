from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.XRInterface as __xrinterface__



class MobileVRInterface(__xrinterface__.XRInterface):
  """"""

  @staticmethod
  def constructor()->MobileVRInterface:pass



  @staticmethod
  def cast(other:__object__.Object)->MobileVRInterface:pass


  @property
  def eye_height(self)->float:
    """"""
    pass
  @eye_height.setter
  def eye_height(self,  value:float)->None:
    """"""
    pass
  @property
  def iod(self)->float:
    """"""
    pass
  @iod.setter
  def iod(self,  value:float)->None:
    """"""
    pass
  @property
  def display_width(self)->float:
    """"""
    pass
  @display_width.setter
  def display_width(self,  value:float)->None:
    """"""
    pass
  @property
  def display_to_lens(self)->float:
    """"""
    pass
  @display_to_lens.setter
  def display_to_lens(self,  value:float)->None:
    """"""
    pass
  @property
  def offset_rect(self)->__core__.Rect2:
    """"""
    pass
  @offset_rect.setter
  def offset_rect(self,  value:__core__.Rect2)->None:
    """"""
    pass
  @property
  def oversample(self)->float:
    """"""
    pass
  @oversample.setter
  def oversample(self,  value:float)->None:
    """"""
    pass
  @property
  def k1(self)->float:
    """"""
    pass
  @k1.setter
  def k1(self,  value:float)->None:
    """"""
    pass
  @property
  def k2(self)->float:
    """"""
    pass
  @k2.setter
  def k2(self,  value:float)->None:
    """"""
    pass
  @property
  def vrs_min_radius(self)->float:
    """"""
    pass
  @vrs_min_radius.setter
  def vrs_min_radius(self,  value:float)->None:
    """"""
    pass
  @property
  def vrs_strength(self)->float:
    """"""
    pass
  @vrs_strength.setter
  def vrs_strength(self,  value:float)->None:
    """"""
    pass
  def set_eye_height(self, eye_height:float)->None:
    """"""
    pass

  def get_eye_height(self)->float:
    """"""
    pass

  def set_iod(self, iod:float)->None:
    """"""
    pass

  def get_iod(self)->float:
    """"""
    pass

  def set_display_width(self, display_width:float)->None:
    """"""
    pass

  def get_display_width(self)->float:
    """"""
    pass

  def set_display_to_lens(self, display_to_lens:float)->None:
    """"""
    pass

  def get_display_to_lens(self)->float:
    """"""
    pass

  def set_offset_rect(self, offset_rect:__core__.Rect2)->None:
    """"""
    pass

  def get_offset_rect(self)->__core__.Rect2:
    """"""
    pass

  def set_oversample(self, oversample:float)->None:
    """"""
    pass

  def get_oversample(self)->float:
    """"""
    pass

  def set_k1(self, k:float)->None:
    """"""
    pass

  def get_k1(self)->float:
    """"""
    pass

  def set_k2(self, k:float)->None:
    """"""
    pass

  def get_k2(self)->float:
    """"""
    pass

  def get_vrs_min_radius(self)->float:
    """"""
    pass

  def set_vrs_min_radius(self, radius:float)->None:
    """"""
    pass

  def get_vrs_strength(self)->float:
    """"""
    pass

  def set_vrs_strength(self, strength:float)->None:
    """"""
    pass


