from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.ImageTexture3D as __imagetexture3d__
import py4godot.classes.Texture3D as __texture3d__
import py4godot.classes.Texture3DRD as __texture3drd__
import py4godot.classes.NoiseTexture3D as __noisetexture3d__
import py4godot.classes.PlaceholderTexture3D as __placeholdertexture3d__
import py4godot.classes.VisualShaderNodeSample3D as __visualshadernodesample3d__
import py4godot.classes.CompressedTexture3D as __compressedtexture3d__



class VisualShaderNodeTexture3D(__visualshadernodesample3d__.VisualShaderNodeSample3D):
  """
		Performs a lookup operation on the provided texture, with support for multiple texture sources to choose from.
	"""

  @staticmethod
  def constructor()->VisualShaderNodeTexture3D:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeTexture3D:pass


  @property
  def texture(self)->__noisetexture3d__.NoiseTexture3D|__placeholdertexture3d__.PlaceholderTexture3D|__imagetexture3d__.ImageTexture3D|__compressedtexture3d__.CompressedTexture3D|__texture3d__.Texture3D|__texture3drd__.Texture3DRD:
    """"""
    pass
  @texture.setter
  def texture(self,  value:__texture3d__.Texture3D)->None:
    """"""
    pass
  def set_texture(self, value:__texture3d__.Texture3D)->None:
    """"""
    pass

  def get_texture(self)->__noisetexture3d__.NoiseTexture3D|__placeholdertexture3d__.PlaceholderTexture3D|__imagetexture3d__.ImageTexture3D|__compressedtexture3d__.CompressedTexture3D|__texture3d__.Texture3D|__texture3drd__.Texture3DRD:
    """"""
    pass


