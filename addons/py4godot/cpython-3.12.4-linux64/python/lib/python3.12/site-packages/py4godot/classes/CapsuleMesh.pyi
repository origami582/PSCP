from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.PrimitiveMesh as __primitivemesh__



class CapsuleMesh(__primitivemesh__.PrimitiveMesh):
  """
		Class representing a capsule-shaped `PrimitiveMesh`.
	"""

  @staticmethod
  def constructor()->CapsuleMesh:pass



  @staticmethod
  def cast(other:__object__.Object)->CapsuleMesh:pass


  @property
  def radius(self)->float:
    """"""
    pass
  @radius.setter
  def radius(self,  value:float)->None:
    """"""
    pass
  @property
  def height(self)->float:
    """"""
    pass
  @height.setter
  def height(self,  value:float)->None:
    """"""
    pass
  @property
  def radial_segments(self)->int:
    """"""
    pass
  @radial_segments.setter
  def radial_segments(self,  value:int)->None:
    """"""
    pass
  @property
  def rings(self)->int:
    """"""
    pass
  @rings.setter
  def rings(self,  value:int)->None:
    """"""
    pass
  def set_radius(self, radius:float)->None:
    """"""
    pass

  def get_radius(self)->float:
    """"""
    pass

  def set_height(self, height:float)->None:
    """"""
    pass

  def get_height(self)->float:
    """"""
    pass

  def set_radial_segments(self, segments:int)->None:
    """"""
    pass

  def get_radial_segments(self)->int:
    """"""
    pass

  def set_rings(self, rings:int)->None:
    """"""
    pass

  def get_rings(self)->int:
    """"""
    pass


