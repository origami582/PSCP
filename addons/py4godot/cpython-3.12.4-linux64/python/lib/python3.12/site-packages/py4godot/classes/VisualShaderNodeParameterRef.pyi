from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNode as __visualshadernode__



class VisualShaderNodeParameterRef(__visualshadernode__.VisualShaderNode):
  """
		Creating a reference to a `VisualShaderNodeParameter` allows you to reuse this parameter in different shaders or shader stages easily.
	"""

  @staticmethod
  def constructor()->VisualShaderNodeParameterRef:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeParameterRef:pass


  @property
  def parameter_name(self)->__core__.StringName:
    """"""
    pass
  @parameter_name.setter
  def parameter_name(self,  value:__core__.StringName)->None:
    """"""
    pass
  @property
  def param_type(self)->int:
    """"""
    pass
  @param_type.setter
  def param_type(self,  value:int)->None:
    """"""
    pass
  def set_parameter_name(self, name:str)->None:
    """"""
    pass

  def get_parameter_name(self)->str:
    """"""
    pass


