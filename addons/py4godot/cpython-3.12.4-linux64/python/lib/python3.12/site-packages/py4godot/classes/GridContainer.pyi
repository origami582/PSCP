from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Container as __container__



class GridContainer(__container__.Container):
  """
		`GridContainer` arranges its child controls in a grid layout. The number of columns is specified by the `columns` property, whereas the number of rows depends on how many are needed for the child controls. The number of rows and columns is preserved for every size of the container.
		**Note:** `GridContainer` only works with child nodes inheriting from `Control`. It won't rearrange child nodes inheriting from `Node2D`.
	"""

  @staticmethod
  def constructor()->GridContainer:pass



  @staticmethod
  def cast(other:__object__.Object)->GridContainer:pass


  @property
  def columns(self)->int:
    """"""
    pass
  @columns.setter
  def columns(self,  value:int)->None:
    """"""
    pass
  def set_columns(self, columns:int)->None:
    """"""
    pass

  def get_columns(self)->int:
    """"""
    pass


