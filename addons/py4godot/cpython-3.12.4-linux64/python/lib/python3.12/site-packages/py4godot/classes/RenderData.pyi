from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RenderSceneBuffersExtension as __renderscenebuffersextension__
import py4godot.classes.RenderSceneData as __renderscenedata__
import py4godot.classes.RenderSceneDataRD as __renderscenedatard__
import py4godot.classes.RenderSceneDataExtension as __renderscenedataextension__
import py4godot.classes.RenderSceneBuffersRD as __renderscenebuffersrd__
import py4godot.classes.Object as __object__
import py4godot.classes.RenderSceneBuffers as __renderscenebuffers__



class RenderData(__object__.Object):
  """
		Abstract render data object, exists for the duration of rendering a single viewport.
		**Note:** This is an internal rendering server object, do not instantiate this from script.
	"""

  @staticmethod
  def constructor()->RenderData:pass



  @staticmethod
  def cast(other:__object__.Object)->RenderData:pass


  def get_render_scene_buffers(self)->__renderscenebuffers__.RenderSceneBuffers|__renderscenebuffersextension__.RenderSceneBuffersExtension|__renderscenebuffersrd__.RenderSceneBuffersRD:
    """
				Returns the `RenderSceneBuffers` object managing the scene buffers for rendering this viewport.
			"""
    pass

  def get_render_scene_data(self)->__renderscenedata__.RenderSceneData|__renderscenedataextension__.RenderSceneDataExtension|__renderscenedatard__.RenderSceneDataRD:
    """
				Returns the `RenderSceneData` object managing this frames scene data.
			"""
    pass

  def get_environment(self)->__core__.RID:
    """
				Returns the `RID` of the environment object in the `RenderingServer` being used to render this viewport.
			"""
    pass

  def get_camera_attributes(self)->__core__.RID:
    """
				Returns the `RID` of the camera attributes object in the `RenderingServer` being used to render this viewport.
			"""
    pass


