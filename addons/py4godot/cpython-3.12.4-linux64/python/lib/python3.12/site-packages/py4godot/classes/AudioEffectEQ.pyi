from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AudioEffect as __audioeffect__



class AudioEffectEQ(__audioeffect__.AudioEffect):
  """
		AudioEffectEQ gives you control over frequencies. Use it to compensate for existing deficiencies in audio. AudioEffectEQs are useful on the Master bus to completely master a mix and give it more character. They are also useful when a game is run on a mobile device, to adjust the mix to that kind of speakers (it can be added but disabled when headphones are plugged).
	"""

  @staticmethod
  def constructor()->AudioEffectEQ:pass



  @staticmethod
  def cast(other:__object__.Object)->AudioEffectEQ:pass


  def set_band_gain_db(self, band_idx:int, volume_db:float)->None:
    """
				Sets band's gain at the specified index, in dB.
			"""
    pass

  def get_band_gain_db(self, band_idx:int)->float:
    """
				Returns the band's gain at the specified index, in dB.
			"""
    pass

  def get_band_count(self)->int:
    """
				Returns the number of bands of the equalizer.
			"""
    pass


