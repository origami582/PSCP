from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.FastNoiseLite as __fastnoiselite__
import py4godot.classes.Gradient as __gradient__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.Noise as __noise__



class NoiseTexture2D(__texture2d__.Texture2D):
  """"""

  @staticmethod
  def constructor()->NoiseTexture2D:pass



  @staticmethod
  def cast(other:__object__.Object)->NoiseTexture2D:pass


  @property
  def width(self)->int:
    """"""
    pass
  @width.setter
  def width(self,  value:int)->None:
    """"""
    pass
  @property
  def height(self)->int:
    """"""
    pass
  @height.setter
  def height(self,  value:int)->None:
    """"""
    pass
  @property
  def invert(self)->bool:
    """"""
    pass
  @invert.setter
  def invert(self,  value:bool)->None:
    """"""
    pass
  @property
  def in_3d_space(self)->bool:
    """"""
    pass
  @in_3d_space.setter
  def in_3d_space(self,  value:bool)->None:
    """"""
    pass
  @property
  def generate_mipmaps(self)->bool:
    """"""
    pass
  @generate_mipmaps.setter
  def generate_mipmaps(self,  value:bool)->None:
    """"""
    pass
  @property
  def seamless(self)->bool:
    """"""
    pass
  @seamless.setter
  def seamless(self,  value:bool)->None:
    """"""
    pass
  @property
  def seamless_blend_skirt(self)->float:
    """"""
    pass
  @seamless_blend_skirt.setter
  def seamless_blend_skirt(self,  value:float)->None:
    """"""
    pass
  @property
  def as_normal_map(self)->bool:
    """"""
    pass
  @as_normal_map.setter
  def as_normal_map(self,  value:bool)->None:
    """"""
    pass
  @property
  def bump_strength(self)->float:
    """"""
    pass
  @bump_strength.setter
  def bump_strength(self,  value:float)->None:
    """"""
    pass
  @property
  def normalize(self)->bool:
    """"""
    pass
  @normalize.setter
  def normalize(self,  value:bool)->None:
    """"""
    pass
  @property
  def color_ramp(self)->__gradient__.Gradient:
    """"""
    pass
  @color_ramp.setter
  def color_ramp(self,  value:__gradient__.Gradient)->None:
    """"""
    pass
  @property
  def noise(self)->__fastnoiselite__.FastNoiseLite|__noise__.Noise:
    """"""
    pass
  @noise.setter
  def noise(self,  value:__noise__.Noise)->None:
    """"""
    pass
  def set_width(self, width:int)->None:
    """"""
    pass

  def set_height(self, height:int)->None:
    """"""
    pass

  def set_invert(self, invert:bool)->None:
    """"""
    pass

  def get_invert(self)->bool:
    """"""
    pass

  def set_in_3d_space(self, enable:bool)->None:
    """"""
    pass

  def is_in_3d_space(self)->bool:
    """"""
    pass

  def set_generate_mipmaps(self, invert:bool)->None:
    """"""
    pass

  def is_generating_mipmaps(self)->bool:
    """"""
    pass

  def set_seamless(self, seamless:bool)->None:
    """"""
    pass

  def get_seamless(self)->bool:
    """"""
    pass

  def set_seamless_blend_skirt(self, seamless_blend_skirt:float)->None:
    """"""
    pass

  def get_seamless_blend_skirt(self)->float:
    """"""
    pass

  def set_as_normal_map(self, as_normal_map:bool)->None:
    """"""
    pass

  def is_normal_map(self)->bool:
    """"""
    pass

  def set_bump_strength(self, bump_strength:float)->None:
    """"""
    pass

  def get_bump_strength(self)->float:
    """"""
    pass

  def set_normalize(self, normalize:bool)->None:
    """"""
    pass

  def is_normalized(self)->bool:
    """"""
    pass

  def set_color_ramp(self, gradient:__gradient__.Gradient)->None:
    """"""
    pass

  def get_color_ramp(self)->__gradient__.Gradient:
    """"""
    pass

  def set_noise(self, noise:__noise__.Noise)->None:
    """"""
    pass

  def get_noise(self)->__fastnoiselite__.FastNoiseLite|__noise__.Noise:
    """"""
    pass


