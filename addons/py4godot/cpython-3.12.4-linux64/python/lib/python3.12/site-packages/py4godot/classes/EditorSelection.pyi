from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.r as __r__
import py4godot.classes.e as __e__
import py4godot.classes.a as __a__
import py4godot.classes.Node as __node__
import py4godot.classes.N as __n__
import py4godot.classes.p as __p__
import py4godot.classes.o as __o__
import py4godot.classes.y as __y__
import py4godot.classes.A as __a__
import py4godot.classes.d as __d__
import py4godot.classes.Object as __object__
import py4godot.classes.T as __t__



class EditorSelection(__object__.Object):
  """
		This object manages the SceneTree selection in the editor.
		**Note:** This class shouldn't be instantiated directly. Instead, access the singleton using `EditorInterface.get_selection`.
	"""
  selection_changed: BuiltinSignal

  @staticmethod
  def constructor()->EditorSelection:pass



  @staticmethod
  def cast(other:__object__.Object)->EditorSelection:pass


  def clear(self)->None:
    """
				Clear the selection.
			"""
    pass

  def add_node(self, node:__node__.Node)->None:
    """
				Adds a node to the selection.
				**Note:** The newly selected node will not be automatically edited in the inspector. If you want to edit a node, use `EditorInterface.edit_node`.
			"""
    pass

  def remove_node(self, node:__node__.Node)->None:
    """
				Removes a node from the selection.
			"""
    pass

  def get_selected_nodes(self)->typedarray::Node:
    """
				Returns the list of selected nodes.
			"""
    pass

  def get_transformable_selected_nodes(self)->typedarray::Node:
    """
				Returns the list of top selected nodes only, excluding any children. This is useful for performing transform operations (moving them, rotating, etc.). See `get_top_selected_nodes`.
			"""
    pass


