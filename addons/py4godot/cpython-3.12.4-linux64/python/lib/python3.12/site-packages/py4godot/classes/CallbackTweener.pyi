from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.CallbackTweener as __callbacktweener__
import py4godot.classes.Tweener as __tweener__



class CallbackTweener(__tweener__.Tweener):
  """
		`CallbackTweener` is used to call a method in a tweening sequence. See `Tween.tween_callback` for more usage information.
		The tweener will finish automatically if the callback's target object is freed.
		**Note:** `Tween.tween_callback` is the only correct way to create `CallbackTweener`. Any `CallbackTweener` created manually will not function correctly.
	"""

  @staticmethod
  def constructor()->CallbackTweener:pass



  @staticmethod
  def cast(other:__object__.Object)->CallbackTweener:pass


  def set_delay(self, delay:float)->__callbacktweener__.CallbackTweener:
    """
				Makes the callback call delayed by given time in seconds.
				**Example:** Call `Node.queue_free` after 2 seconds:
				```gdscript
				var tween = get_tree().create_tween()
				tween.tween_callback(queue_free).set_delay(2)
				```
			"""
    pass


