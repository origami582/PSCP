from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.StaticBody2D as __staticbody2d__



class AnimatableBody2D(__staticbody2d__.StaticBody2D):
  """
		An animatable 2D physics body. It can't be moved by external forces or contacts, but can be moved manually by other means such as code, `AnimationMixer`s (with `AnimationMixer.callback_mode_process` set to `constant AnimationMixer.ANIMATION_CALLBACK_MODE_PROCESS_PHYSICS`), and `RemoteTransform2D`.
		When `AnimatableBody2D` is moved, its linear and angular velocity are estimated and used to affect other physics bodies in its path. This makes it useful for moving platforms, doors, and other moving objects.
	"""

  @staticmethod
  def constructor()->AnimatableBody2D:pass



  @staticmethod
  def cast(other:__object__.Object)->AnimatableBody2D:pass


  @property
  def sync_to_physics(self)->bool:
    """"""
    pass
  @sync_to_physics.setter
  def sync_to_physics(self,  value:bool)->None:
    """"""
    pass
  def set_sync_to_physics(self, enable:bool)->None:
    """"""
    pass

  def is_sync_to_physics_enabled(self)->bool:
    """"""
    pass


