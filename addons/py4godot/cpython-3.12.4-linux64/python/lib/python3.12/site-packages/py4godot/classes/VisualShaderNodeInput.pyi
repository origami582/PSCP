from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNode as __visualshadernode__



class VisualShaderNodeInput(__visualshadernode__.VisualShaderNode):
  """
		Gives access to input variables (built-ins) available for the shader. See the shading reference for the list of available built-ins for each shader type (check `Tutorials` section for link).
	"""
  input_type_changed: BuiltinSignal

  @staticmethod
  def constructor()->VisualShaderNodeInput:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeInput:pass


  @property
  def input_name(self)->__core__.StringName:
    """"""
    pass
  @input_name.setter
  def input_name(self,  value:__core__.StringName)->None:
    """"""
    pass
  def set_input_name(self, name:str)->None:
    """"""
    pass

  def get_input_name(self)->str:
    """"""
    pass

  def get_input_real_name(self)->str:
    """
				Returns a translated name of the current constant in the Godot Shader Language. E.g. `"ALBEDO"` if the `input_name` equal to `"albedo"`.
			"""
    pass


