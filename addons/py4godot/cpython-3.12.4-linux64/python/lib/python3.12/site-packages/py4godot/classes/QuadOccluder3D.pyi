from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Occluder3D as __occluder3d__



class QuadOccluder3D(__occluder3d__.Occluder3D):
  """
		`QuadOccluder3D` stores a flat plane shape that can be used by the engine's occlusion culling system. See also `PolygonOccluder3D` if you need to customize the quad's shape.
		See `OccluderInstance3D`'s documentation for instructions on setting up occlusion culling.
	"""

  @staticmethod
  def constructor()->QuadOccluder3D:pass



  @staticmethod
  def cast(other:__object__.Object)->QuadOccluder3D:pass


  @property
  def size(self)->__core__.Vector2:
    """"""
    pass
  @size.setter
  def size(self,  value:__core__.Vector2)->None:
    """"""
    pass
  def set_size(self, size:__core__.Vector2)->None:
    """"""
    pass

  def get_size(self)->__core__.Vector2:
    """"""
    pass


