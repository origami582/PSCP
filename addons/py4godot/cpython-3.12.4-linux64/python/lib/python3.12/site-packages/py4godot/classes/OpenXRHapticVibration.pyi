from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.OpenXRHapticBase as __openxrhapticbase__



class OpenXRHapticVibration(__openxrhapticbase__.OpenXRHapticBase):
  """"""

  @staticmethod
  def constructor()->OpenXRHapticVibration:pass



  @staticmethod
  def cast(other:__object__.Object)->OpenXRHapticVibration:pass


  @property
  def duration(self)->int:
    """"""
    pass
  @duration.setter
  def duration(self,  value:int)->None:
    """"""
    pass
  @property
  def frequency(self)->float:
    """"""
    pass
  @frequency.setter
  def frequency(self,  value:float)->None:
    """"""
    pass
  @property
  def amplitude(self)->float:
    """"""
    pass
  @amplitude.setter
  def amplitude(self,  value:float)->None:
    """"""
    pass
  def set_duration(self, duration:int)->None:
    """"""
    pass

  def get_duration(self)->int:
    """"""
    pass

  def set_frequency(self, frequency:float)->None:
    """"""
    pass

  def get_frequency(self)->float:
    """"""
    pass

  def set_amplitude(self, amplitude:float)->None:
    """"""
    pass

  def get_amplitude(self)->float:
    """"""
    pass


