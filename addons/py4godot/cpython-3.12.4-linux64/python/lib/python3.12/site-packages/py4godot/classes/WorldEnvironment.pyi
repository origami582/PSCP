from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.CameraAttributesPhysical as __cameraattributesphysical__
import py4godot.classes.Compositor as __compositor__
import py4godot.classes.Environment as __environment__
import py4godot.classes.Node as __node__
import py4godot.classes.CameraAttributes as __cameraattributes__
import py4godot.classes.CameraAttributesPractical as __cameraattributespractical__



class WorldEnvironment(__node__.Node):
  """
		The `WorldEnvironment` node is used to configure the default `Environment` for the scene.
		The parameters defined in the `WorldEnvironment` can be overridden by an `Environment` node set on the current `Camera3D`. Additionally, only one `WorldEnvironment` may be instantiated in a given scene at a time.
		The `WorldEnvironment` allows the user to specify default lighting parameters (e.g. ambient lighting), various post-processing effects (e.g. SSAO, DOF, Tonemapping), and how to draw the background (e.g. solid color, skybox). Usually, these are added in order to improve the realism/color balance of the scene.
	"""

  @staticmethod
  def constructor()->WorldEnvironment:pass



  @staticmethod
  def cast(other:__object__.Object)->WorldEnvironment:pass


  @property
  def environment(self)->__environment__.Environment:
    """"""
    pass
  @environment.setter
  def environment(self,  value:__environment__.Environment)->None:
    """"""
    pass
  @property
  def camera_attributes(self)->CameraAttributesPractical,CameraAttributesPhysical:
    """"""
    pass
  @camera_attributes.setter
  def camera_attributes(self,  value:__cameraattributespractical__.CameraAttributesPractical)->None:
    """"""
    pass
  @property
  def compositor(self)->__compositor__.Compositor:
    """"""
    pass
  @compositor.setter
  def compositor(self,  value:__compositor__.Compositor)->None:
    """"""
    pass
  def set_environment(self, env:__environment__.Environment)->None:
    """"""
    pass

  def get_environment(self)->__environment__.Environment:
    """"""
    pass

  def set_camera_attributes(self, camera_attributes:__cameraattributes__.CameraAttributes)->None:
    """"""
    pass

  def get_camera_attributes(self)->__cameraattributesphysical__.CameraAttributesPhysical|__cameraattributes__.CameraAttributes|__cameraattributespractical__.CameraAttributesPractical:
    """"""
    pass

  def set_compositor(self, compositor:__compositor__.Compositor)->None:
    """"""
    pass

  def get_compositor(self)->__compositor__.Compositor:
    """"""
    pass


