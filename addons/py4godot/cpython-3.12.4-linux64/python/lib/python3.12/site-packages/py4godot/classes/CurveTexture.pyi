from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.Curve as __curve__


class TextureMode:
  TEXTURE_MODE_RGB:int = 0
  TEXTURE_MODE_RED:int = 1


class CurveTexture(__texture2d__.Texture2D):
  """
		A 1D texture where pixel brightness corresponds to points on a unit `Curve` resource, either in grayscale or in red. This visual representation simplifies the task of saving curves as image files.
		If you need to store up to 3 curves within a single texture, use `CurveXYZTexture` instead. See also `GradientTexture1D` and `GradientTexture2D`.
	"""

  @staticmethod
  def constructor()->CurveTexture:pass



  @staticmethod
  def cast(other:__object__.Object)->CurveTexture:pass


  @property
  def width(self)->int:
    """"""
    pass
  @width.setter
  def width(self,  value:int)->None:
    """"""
    pass
  @property
  def texture_mode(self)->int:
    """"""
    pass
  @texture_mode.setter
  def texture_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def curve(self)->__curve__.Curve:
    """"""
    pass
  @curve.setter
  def curve(self,  value:__curve__.Curve)->None:
    """"""
    pass
  def set_width(self, width:int)->None:
    """"""
    pass

  def set_curve(self, curve:__curve__.Curve)->None:
    """"""
    pass

  def get_curve(self)->__curve__.Curve:
    """"""
    pass

  def set_texture_mode(self, texture_mode:int )->None:
    """"""
    pass

  def get_texture_mode(self)->int:
    """"""
    pass


