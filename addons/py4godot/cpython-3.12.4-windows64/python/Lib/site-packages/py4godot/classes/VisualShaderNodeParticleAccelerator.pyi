from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNodeParticleAccelerator as __visualshadernodeparticleaccelerator__
import py4godot.classes.VisualShaderNode as __visualshadernode__


class Mode:
  MODE_LINEAR:int = 0
  MODE_RADIAL:int = 1
  MODE_TANGENTIAL:int = 2
  MODE_MAX:int = 3


class VisualShaderNodeParticleAccelerator(__visualshadernode__.VisualShaderNode):
  """
		Particle accelerator can be used in "process" step of particle shader. It will accelerate the particles. Connect it to the Velocity output port.
	"""

  @staticmethod
  def constructor()->VisualShaderNodeParticleAccelerator:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeParticleAccelerator:pass


  @property
  def mode(self)->int:
    """"""
    pass
  @mode.setter
  def mode(self,  value:int)->None:
    """"""
    pass
  def set_mode(self, mode:int )->None:
    """"""
    pass

  def get_mode(self)->int:
    """"""
    pass


