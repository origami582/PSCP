from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Resource as __resource__



class X509Certificate(__resource__.Resource):
  """
		The X509Certificate class represents an X509 certificate. Certificates can be loaded and saved like any other `Resource`.
		They can be used as the server certificate in `StreamPeerTLS.accept_stream` (along with the proper `CryptoKey`), and to specify the only certificate that should be accepted when connecting to a TLS server via `StreamPeerTLS.connect_to_stream`.
	"""

  @staticmethod
  def constructor()->X509Certificate:pass



  @staticmethod
  def cast(other:__object__.Object)->X509Certificate:pass


  def save(self, path:str)->int:
    """
				Saves a certificate to the given `path` (should be a "*.crt" file).
			"""
    pass

  def load(self, path:str)->int:
    """
				Loads a certificate from `path` ("*.crt" file).
			"""
    pass

  def save_to_string(self)->str:
    """
				Returns a string representation of the certificate, or an empty string if the certificate is invalid.
			"""
    pass

  def load_from_string(self, string:str)->int:
    """
				Loads a certificate from the given `string`.
			"""
    pass


