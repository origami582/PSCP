from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.StreamPeerTCP as __streampeertcp__
import py4godot.classes.RefCounted as __refcounted__



class TCPServer(__refcounted__.RefCounted):
  """
		A TCP server. Listens to connections on a port and returns a `StreamPeerTCP` when it gets an incoming connection.
		**Note:** When exporting to Android, make sure to enable the `INTERNET` permission in the Android export preset before exporting the project or using one-click deploy. Otherwise, network communication of any kind will be blocked by Android.
	"""

  @staticmethod
  def constructor()->TCPServer:pass



  @staticmethod
  def cast(other:__object__.Object)->TCPServer:pass


  def listen(self, port:int, bind_address:str= __core__.String.new0())->int:
    """
				Listen on the `port` binding to `bind_address`.
				If `bind_address` is set as `"*"` (default), the server will listen on all available addresses (both IPv4 and IPv6).
				If `bind_address` is set as `"0.0.0.0"` (for IPv4) or `"::"` (for IPv6), the server will listen on all available addresses matching that IP type.
				If `bind_address` is set to any valid address (e.g. `"192.168.1.101"`, `"::1"`, etc.), the server will only listen on the interface with that address (or fail if no interface with the given address exists).
			"""
    pass

  def is_connection_available(self)->bool:
    """
				Returns `true` if a connection is available for taking.
			"""
    pass

  def is_listening(self)->bool:
    """
				Returns `true` if the server is currently listening for connections.
			"""
    pass

  def get_local_port(self)->int:
    """
				Returns the local port this server is listening to.
			"""
    pass

  def take_connection(self)->__streampeertcp__.StreamPeerTCP:
    """
				If a connection is available, returns a StreamPeerTCP with the connection.
			"""
    pass

  def stop(self)->None:
    """
				Stops listening.
			"""
    pass


