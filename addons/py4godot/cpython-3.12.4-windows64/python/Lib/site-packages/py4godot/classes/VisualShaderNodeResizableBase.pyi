from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNode as __visualshadernode__



class VisualShaderNodeResizableBase(__visualshadernode__.VisualShaderNode):
  """
		Resizable nodes have a handle that allows the user to adjust their size as needed.
	"""

  @staticmethod
  def constructor()->VisualShaderNodeResizableBase:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeResizableBase:pass


  @property
  def size(self)->__core__.Vector2:
    """"""
    pass
  @size.setter
  def size(self,  value:__core__.Vector2)->None:
    """"""
    pass
  def set_size(self, size:__core__.Vector2)->None:
    """"""
    pass

  def get_size(self)->__core__.Vector2:
    """"""
    pass


