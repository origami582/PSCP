from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.n as __n__
import py4godot.classes.i as __i__
import py4godot.classes.Resource as __resource__
import py4godot.classes.e as __e__
import py4godot.classes.d as __d__
import py4godot.classes.BoneAttachment3D as __boneattachment3d__
import py4godot.classes.T as __t__
import py4godot.classes.t as __t__
import py4godot.classes.r as __r__
import py4godot.classes.p as __p__
import py4godot.classes.g as __g__
import py4godot.classes.a as __a__
import py4godot.classes.A as __a__
import py4godot.classes.S as __s__
import py4godot.classes.y as __y__
import py4godot.classes.Skeleton3D as __skeleton3d__



class GLTFSkeleton(__resource__.Resource):
  """"""

  @staticmethod
  def constructor()->GLTFSkeleton:pass



  @staticmethod
  def cast(other:__object__.Object)->GLTFSkeleton:pass


  @property
  def joints(self)->__core__.PackedInt32Array:
    """"""
    pass
  @joints.setter
  def joints(self,  value:__core__.PackedInt32Array)->None:
    """"""
    pass
  @property
  def roots(self)->__core__.PackedInt32Array:
    """"""
    pass
  @roots.setter
  def roots(self,  value:__core__.PackedInt32Array)->None:
    """"""
    pass
  @property
  def unique_names(self)->__core__.Array:
    """"""
    pass
  @unique_names.setter
  def unique_names(self,  value:__core__.Array)->None:
    """"""
    pass
  @property
  def godot_bone_node(self)->__core__.Dictionary:
    """"""
    pass
  @godot_bone_node.setter
  def godot_bone_node(self,  value:__core__.Dictionary)->None:
    """"""
    pass
  def get_joints(self)->__core__.PackedInt32Array:
    """"""
    pass

  def set_joints(self, joints:__core__.PackedInt32Array)->None:
    """"""
    pass

  def get_roots(self)->__core__.PackedInt32Array:
    """"""
    pass

  def set_roots(self, roots:__core__.PackedInt32Array)->None:
    """"""
    pass

  def get_godot_skeleton(self)->__skeleton3d__.Skeleton3D:
    """"""
    pass

  def get_unique_names(self)->typedarray::String:
    """"""
    pass

  def set_unique_names(self, unique_names:__core__.Array)->None:
    """"""
    pass

  def get_godot_bone_node(self)->__core__.Dictionary:
    """"""
    pass

  def set_godot_bone_node(self, godot_bone_node:__core__.Dictionary)->None:
    """"""
    pass

  def get_bone_attachment_count(self)->int:
    """"""
    pass

  def get_bone_attachment(self, idx:int)->__boneattachment3d__.BoneAttachment3D:
    """"""
    pass


