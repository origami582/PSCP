from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.SyntaxHighlighter as __syntaxhighlighter__



class EditorSyntaxHighlighter(__syntaxhighlighter__.SyntaxHighlighter):
  """
		Base class that all `SyntaxHighlighter`s used by the `ScriptEditor` extend from.
		Add a syntax highlighter to an individual script by calling `ScriptEditorBase.add_syntax_highlighter`. To apply to all scripts on open, call `ScriptEditor.register_syntax_highlighter`.
	"""

  @staticmethod
  def constructor()->EditorSyntaxHighlighter:pass



  @staticmethod
  def cast(other:__object__.Object)->EditorSyntaxHighlighter:pass


  def _get_name(self)->str:
    """
				Virtual method which can be overridden to return the syntax highlighter name.
			"""
    pass

  def _get_supported_languages(self)->__core__.PackedStringArray:
    """
				Virtual method which can be overridden to return the supported language names.
			"""
    pass


