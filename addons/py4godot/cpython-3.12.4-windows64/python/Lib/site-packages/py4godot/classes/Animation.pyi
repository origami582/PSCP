from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AnimationNodeSync as __animationnodesync__
import py4godot.classes.VisualShaderNodeDeterminant as __visualshadernodedeterminant__
import py4godot.classes.VisualShaderNodeVaryingSetter as __visualshadernodevaryingsetter__
import py4godot.classes.ImporterMesh as __importermesh__
import py4godot.classes.VisualShaderNodeOuterProduct as __visualshadernodeouterproduct__
import py4godot.classes.VisualShaderNodeParticleEmitter as __visualshadernodeparticleemitter__
import py4godot.classes.AudioEffect as __audioeffect__
import py4godot.classes.LightmapGIData as __lightmapgidata__
import py4godot.classes.PlaceholderMesh as __placeholdermesh__
import py4godot.classes.AudioEffectAmplify as __audioeffectamplify__
import py4godot.classes.VisualShaderNodeTransformVecMult as __visualshadernodetransformvecmult__
import py4godot.classes.AudioEffectReverb as __audioeffectreverb__
import py4godot.classes.AudioEffectCapture as __audioeffectcapture__
import py4godot.classes.VisualShaderNodeStep as __visualshadernodestep__
import py4godot.classes.FastNoiseLite as __fastnoiselite__
import py4godot.classes.AudioEffectSpectrumAnalyzer as __audioeffectspectrumanalyzer__
import py4godot.classes.InputEventJoypadMotion as __inputeventjoypadmotion__
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.VisualShaderNodeUIntConstant as __visualshadernodeuintconstant__
import py4godot.classes.SkeletonProfile as __skeletonprofile__
import py4godot.classes.AnimationNodeBlendSpace1D as __animationnodeblendspace1d__
import py4godot.classes.OptimizedTranslation as __optimizedtranslation__
import py4godot.classes.PlaceholderCubemap as __placeholdercubemap__
import py4godot.classes.VisualShaderNodeTextureSDF as __visualshadernodetexturesdf__
import py4godot.classes.TileSet as __tileset__
import py4godot.classes.AudioEffectHighShelfFilter as __audioeffecthighshelffilter__
import py4godot.classes.QuadMesh as __quadmesh__
import py4godot.classes.AnimationNodeBlendTree as __animationnodeblendtree__
import py4godot.classes.OccluderPolygon2D as __occluderpolygon2d__
import py4godot.classes.Script as __script__
import py4godot.classes.TextureCubemapArrayRD as __texturecubemaparrayrd__
import py4godot.classes.TileSetAtlasSource as __tilesetatlassource__
import py4godot.classes.PackedDataContainer as __packeddatacontainer__
import py4godot.classes.PhysicsMaterial as __physicsmaterial__
import py4godot.classes.AnimationNodeSub2 as __animationnodesub2__
import py4godot.classes.PlaceholderTexture2D as __placeholdertexture2d__
import py4godot.classes.AudioStreamMP3 as __audiostreammp3__
import py4godot.classes.VisualShaderNodeVec3Parameter as __visualshadernodevec3parameter__
import py4godot.classes.InputEventScreenTouch as __inputeventscreentouch__
import py4godot.classes.ConvexPolygonShape3D as __convexpolygonshape3d__
import py4godot.classes.NoiseTexture3D as __noisetexture3d__
import py4godot.classes.AudioEffectDelay as __audioeffectdelay__
import py4godot.classes.VisualShaderNodeTextureParameterTriplanar as __visualshadernodetextureparametertriplanar__
import py4godot.classes.AnimationNodeBlend2 as __animationnodeblend2__
import py4godot.classes.PrimitiveMesh as __primitivemesh__
import py4godot.classes.RichTextEffect as __richtexteffect__
import py4godot.classes.VisualShaderNodeTransformOp as __visualshadernodetransformop__
import py4godot.classes.VisualShaderNodeInput as __visualshadernodeinput__
import py4godot.classes.PlaneMesh as __planemesh__
import py4godot.classes.SkeletonModification2DPhysicalBones as __skeletonmodification2dphysicalbones__
import py4godot.classes.WorldBoundaryShape2D as __worldboundaryshape2d__
import py4godot.classes.SkeletonModification2DJiggle as __skeletonmodification2djiggle__
import py4godot.classes.VisualShaderNodeLinearSceneDepth as __visualshadernodelinearscenedepth__
import py4godot.classes.ORMMaterial3D as __ormmaterial3d__
import py4godot.classes.MissingResource as __missingresource__
import py4godot.classes.SkeletonProfileHumanoid as __skeletonprofilehumanoid__
import py4godot.classes.PointMesh as __pointmesh__
import py4godot.classes.ShaderMaterial as __shadermaterial__
import py4godot.classes.CodeHighlighter as __codehighlighter__
import py4godot.classes.VisualShaderNodeVec3Constant as __visualshadernodevec3constant__
import py4godot.classes.SkeletonModification2DFABRIK as __skeletonmodification2dfabrik__
import py4godot.classes.PolygonPathFinder as __polygonpathfinder__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.VisualShaderNodeFrame as __visualshadernodeframe__
import py4godot.classes.VisualShaderNodeSwitch as __visualshadernodeswitch__
import py4godot.classes.VisualShaderNodeFresnel as __visualshadernodefresnel__
import py4godot.classes.VisualShaderNodeParticleAccelerator as __visualshadernodeparticleaccelerator__
import py4godot.classes.NavigationMeshSourceGeometryData2D as __navigationmeshsourcegeometrydata2d__
import py4godot.classes.BoxMesh as __boxmesh__
import py4godot.classes.Gradient as __gradient__
import py4godot.classes.VisualShaderNodeVec4Constant as __visualshadernodevec4constant__
import py4godot.classes.InputEventGesture as __inputeventgesture__
import py4godot.classes.InputEventKey as __inputeventkey__
import py4godot.classes.VisualShaderNodeIs as __visualshadernodeis__
import py4godot.classes.VisualShaderNodeIntFunc as __visualshadernodeintfunc__
import py4godot.classes.VisualShaderNodeCurveXYZTexture as __visualshadernodecurvexyztexture__
import py4godot.classes.Texture as __texture__
import py4godot.classes.StyleBoxFlat as __styleboxflat__
import py4godot.classes.TextMesh as __textmesh__
import py4godot.classes.VisualShaderNodeVec2Constant as __visualshadernodevec2constant__
import py4godot.classes.OggPacketSequence as __oggpacketsequence__
import py4godot.classes.EditorNode3DGizmoPlugin as __editornode3dgizmoplugin__
import py4godot.classes.InputEventMouseMotion as __inputeventmousemotion__
import py4godot.classes.LabelSettings as __labelsettings__
import py4godot.classes.GLTFSpecGloss as __gltfspecgloss__
import py4godot.classes.VisualShaderNodeCubemapParameter as __visualshadernodecubemapparameter__
import py4godot.classes.OpenXRIPBinding as __openxripbinding__
import py4godot.classes.VisualShaderNodeDotProduct as __visualshadernodedotproduct__
import py4godot.classes.StyleBoxLine as __styleboxline__
import py4godot.classes.VisualShaderNodeTransformDecompose as __visualshadernodetransformdecompose__
import py4godot.classes.GLTFSkeleton as __gltfskeleton__
import py4godot.classes.GLTFNode as __gltfnode__
import py4godot.classes.AtlasTexture as __atlastexture__
import py4godot.classes.QuadOccluder3D as __quadoccluder3d__
import py4godot.classes.VisualShaderNodeCustom as __visualshadernodecustom__
import py4godot.classes.CryptoKey as __cryptokey__
import py4godot.classes.ButtonGroup as __buttongroup__
import py4godot.classes.VisualShaderNodeDistanceFade as __visualshadernodedistancefade__
import py4godot.classes.VisualShaderNodeBillboard as __visualshadernodebillboard__
import py4godot.classes.VisualShaderNodeVec2Parameter as __visualshadernodevec2parameter__
import py4godot.classes.AnimationNodeTimeScale as __animationnodetimescale__
import py4godot.classes.InputEventShortcut as __inputeventshortcut__
import py4godot.classes.VisualShaderNodeColorConstant as __visualshadernodecolorconstant__
import py4godot.classes.CameraTexture as __cameratexture__
import py4godot.classes.TileSetSource as __tilesetsource__
import py4godot.classes.VisualShaderNodeDerivativeFunc as __visualshadernodederivativefunc__
import py4godot.classes.Shape2D as __shape2d__
import py4godot.classes.VisualShaderNodeGroupBase as __visualshadernodegroupbase__
import py4godot.classes.AnimationNodeOneShot as __animationnodeoneshot__
import py4godot.classes.OpenXRBindingModifier as __openxrbindingmodifier__
import py4godot.classes.SpriteFrames as __spriteframes__
import py4godot.classes.VisualShaderNodeTextureSDFNormal as __visualshadernodetexturesdfnormal__
import py4godot.classes.VisualShaderNodeTextureParameter as __visualshadernodetextureparameter__
import py4godot.classes.GLTFAccessor as __gltfaccessor__
import py4godot.classes.AudioEffectFilter as __audioeffectfilter__
import py4godot.classes.AnimatedTexture as __animatedtexture__
import py4godot.classes.ImageTexture as __imagetexture__
import py4godot.classes.GLTFPhysicsShape as __gltfphysicsshape__
import py4godot.classes.CompressedTexture2D as __compressedtexture2d__
import py4godot.classes.VisualShaderNodeCurveTexture as __visualshadernodecurvetexture__
import py4godot.classes.Mesh as __mesh__
import py4godot.classes.BoxOccluder3D as __boxoccluder3d__
import py4godot.classes.CylinderShape3D as __cylindershape3d__
import py4godot.classes.PlaceholderCubemapArray as __placeholdercubemaparray__
import py4godot.classes.FontVariation as __fontvariation__
import py4godot.classes.GLTFTextureSampler as __gltftexturesampler__
import py4godot.classes.ArrayMesh as __arraymesh__
import py4godot.classes.AudioStreamMicrophone as __audiostreammicrophone__
import py4godot.classes.GLTFSkin as __gltfskin__
import py4godot.classes.InputEventScreenDrag as __inputeventscreendrag__
import py4godot.classes.SkeletonModification2DStackHolder as __skeletonmodification2dstackholder__
import py4godot.classes.VisualShaderNodeParticleMultiplyByAxisAngle as __visualshadernodeparticlemultiplybyaxisangle__
import py4godot.classes.VisualShaderNodeParameter as __visualshadernodeparameter__
import py4godot.classes.AudioEffectPhaser as __audioeffectphaser__
import py4godot.classes.InputEventJoypadButton as __inputeventjoypadbutton__
import py4godot.classes.PanoramaSkyMaterial as __panoramaskymaterial__
import py4godot.classes.SegmentShape2D as __segmentshape2d__
import py4godot.classes.TextureCubemapRD as __texturecubemaprd__
import py4godot.classes.VisualShaderNodeRotationByAxis as __visualshadernoderotationbyaxis__
import py4godot.classes.VisualShaderNodeColorOp as __visualshadernodecolorop__
import py4godot.classes.AudioEffectHighPassFilter as __audioeffecthighpassfilter__
import py4godot.classes.OpenXRActionMap as __openxractionmap__
import py4godot.classes.VisualShaderNodeIntOp as __visualshadernodeintop__
import py4godot.classes.VisualShaderNodeParticleRandomness as __visualshadernodeparticlerandomness__
import py4godot.classes.AudioEffectLimiter as __audioeffectlimiter__
import py4godot.classes.SeparationRayShape2D as __separationrayshape2d__
import py4godot.classes.AudioStreamInteractive as __audiostreaminteractive__
import py4godot.classes.SkeletonModification2DLookAt as __skeletonmodification2dlookat__
import py4godot.classes.CubemapArray as __cubemaparray__
import py4godot.classes.VisualShaderNodeVectorLen as __visualshadernodevectorlen__
import py4godot.classes.VisualShaderNode as __visualshadernode__
import py4godot.classes.AnimationNodeTransition as __animationnodetransition__
import py4godot.classes.AudioStream as __audiostream__
import py4godot.classes.SceneReplicationConfig as __scenereplicationconfig__
import py4godot.classes.VisualShaderNodeColorParameter as __visualshadernodecolorparameter__
import py4godot.classes.OpenXRHapticVibration as __openxrhapticvibration__
import py4godot.classes.VisualShaderNodeRandomRange as __visualshadernoderandomrange__
import py4godot.classes.Shape3D as __shape3d__
import py4godot.classes.InputEventAction as __inputeventaction__
import py4godot.classes.PlaceholderTextureLayered as __placeholdertexturelayered__
import py4godot.classes.AnimationNodeAdd2 as __animationnodeadd2__
import py4godot.classes.TorusMesh as __torusmesh__
import py4godot.classes.FBXState as __fbxstate__
import py4godot.classes.SeparationRayShape3D as __separationrayshape3d__
import py4godot.classes.AudioEffectEQ6 as __audioeffecteq6__
import py4godot.classes.GDScript as __gdscript__
import py4godot.classes.VisualShaderNodeMix as __visualshadernodemix__
import py4godot.classes.NoiseTexture2D as __noisetexture2d__
import py4godot.classes.VisualShaderNodeBooleanParameter as __visualshadernodebooleanparameter__
import py4godot.classes.VisualShaderNodeSmoothStep as __visualshadernodesmoothstep__
import py4godot.classes.FBXDocument as __fbxdocument__
import py4godot.classes.InputEventMagnifyGesture as __inputeventmagnifygesture__
import py4godot.classes.AnimationNodeAdd3 as __animationnodeadd3__
import py4godot.classes.BitMap as __bitmap__
import py4godot.classes.Shortcut as __shortcut__
import py4godot.classes.AnimationNode as __animationnode__
import py4godot.classes.VisualShaderNodeParticleEmit as __visualshadernodeparticleemit__
import py4godot.classes.ProceduralSkyMaterial as __proceduralskymaterial__
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.VisualShaderNodeTexture2DArrayParameter as __visualshadernodetexture2darrayparameter__
import py4godot.classes.VideoStreamPlayback as __videostreamplayback__
import py4godot.classes.VisualShaderNodeParticleConeVelocity as __visualshadernodeparticleconevelocity__
import py4godot.classes.StyleBoxEmpty as __styleboxempty__
import py4godot.classes.VisualShaderNodeScreenUVToSDF as __visualshadernodescreenuvtosdf__
import py4godot.classes.AudioEffectPitchShift as __audioeffectpitchshift__
import py4godot.classes.OpenXRAnalogThresholdModifier as __openxranalogthresholdmodifier__
import py4godot.classes.CapsuleShape2D as __capsuleshape2d__
import py4godot.classes.NavigationMesh as __navigationmesh__
import py4godot.classes.BoxShape3D as __boxshape3d__
import py4godot.classes.GLTFMesh as __gltfmesh__
import py4godot.classes.VisualShaderNodeTexture as __visualshadernodetexture__
import py4godot.classes.VisualShaderNodeVectorFunc as __visualshadernodevectorfunc__
import py4godot.classes.AudioStreamSynchronized as __audiostreamsynchronized__
import py4godot.classes.Resource as __resource__
import py4godot.classes.Compositor as __compositor__
import py4godot.classes.World3D as __world3d__
import py4godot.classes.VisualShaderNodeVec4Parameter as __visualshadernodevec4parameter__
import py4godot.classes.ColorPalette as __colorpalette__
import py4godot.classes.VisualShaderNodeUIntOp as __visualshadernodeuintop__
import py4godot.classes.InputEventMouseButton as __inputeventmousebutton__
import py4godot.classes.ConvexPolygonShape2D as __convexpolygonshape2d__
import py4godot.classes.VisualShaderNodeFloatConstant as __visualshadernodefloatconstant__
import py4godot.classes.VisualShaderNodeVaryingGetter as __visualshadernodevaryinggetter__
import py4godot.classes.CylinderMesh as __cylindermesh__
import py4godot.classes.VisualShaderNodeSample3D as __visualshadernodesample3d__
import py4godot.classes.CanvasItemMaterial as __canvasitemmaterial__
import py4godot.classes.AudioEffectEQ as __audioeffecteq__
import py4godot.classes.Curve2D as __curve2d__
import py4godot.classes.Cubemap as __cubemap__
import py4godot.classes.GDScriptSyntaxHighlighter as __gdscriptsyntaxhighlighter__
import py4godot.classes.TileMapPattern as __tilemappattern__
import py4godot.classes.VisualShaderNodeTexture3DParameter as __visualshadernodetexture3dparameter__
import py4godot.classes.VisualShaderNodeCubemap as __visualshadernodecubemap__
import py4godot.classes.CurveXYZTexture as __curvexyztexture__
import py4godot.classes.BoneMap as __bonemap__
import py4godot.classes.AudioEffectHardLimiter as __audioeffecthardlimiter__
import py4godot.classes.InputEventMIDI as __inputeventmidi__
import py4godot.classes.GLTFCamera as __gltfcamera__
import py4godot.classes.Texture2DArrayRD as __texture2darrayrd__
import py4godot.classes.OpenXRInteractionProfile as __openxrinteractionprofile__
import py4godot.classes.NavigationMeshSourceGeometryData3D as __navigationmeshsourcegeometrydata3d__
import py4godot.classes.VoxelGIData as __voxelgidata__
import py4godot.classes.SkeletonModificationStack2D as __skeletonmodificationstack2d__
import py4godot.classes.VisualShaderNodeTransformParameter as __visualshadernodetransformparameter__
import py4godot.classes.ViewportTexture as __viewporttexture__
import py4godot.classes.VisualShaderNodeTransformConstant as __visualshadernodetransformconstant__
import py4godot.classes.AnimationNodeStateMachineTransition as __animationnodestatemachinetransition__
import py4godot.classes.PortableCompressedTexture2D as __portablecompressedtexture2d__
import py4godot.classes.OpenXRIPBindingModifier as __openxripbindingmodifier__
import py4godot.classes.VideoStreamTheora as __videostreamtheora__
import py4godot.classes.Image as __image__
import py4godot.classes.SphereMesh as __spheremesh__
import py4godot.classes.Font as __font__
import py4godot.classes.GLTFDocumentExtension as __gltfdocumentextension__
import py4godot.classes.VisualShaderNodeComment as __visualshadernodecomment__
import py4godot.classes.GLTFAnimation as __gltfanimation__
import py4godot.classes.MeshTexture as __meshtexture__
import py4godot.classes.VisualShaderNodeTransformFunc as __visualshadernodetransformfunc__
import py4godot.classes.OpenXRActionSet as __openxractionset__
import py4godot.classes.CompressedTextureLayered as __compressedtexturelayered__
import py4godot.classes.VisualShaderNodeTexture3D as __visualshadernodetexture3d__
import py4godot.classes.ImageTexture3D as __imagetexture3d__
import py4godot.classes.VisualShaderNodeResizableBase as __visualshadernoderesizablebase__
import py4godot.classes.FontFile as __fontfile__
import py4godot.classes.InputEventPanGesture as __inputeventpangesture__
import py4godot.classes.AudioEffectStereoEnhance as __audioeffectstereoenhance__
import py4godot.classes.AnimationNodeStateMachinePlayback as __animationnodestatemachineplayback__
import py4godot.classes.TextureLayered as __texturelayered__
import py4godot.classes.AnimationNodeBlendSpace2D as __animationnodeblendspace2d__
import py4godot.classes.PlaceholderMaterial as __placeholdermaterial__
import py4godot.classes.WorldBoundaryShape3D as __worldboundaryshape3d__
import py4godot.classes.VisualShaderNodeVectorDistance as __visualshadernodevectordistance__
import py4godot.classes.GradientTexture1D as __gradienttexture1d__
import py4godot.classes.EditorSyntaxHighlighter as __editorsyntaxhighlighter__
import py4godot.classes.VisualShaderNodeSDFRaymarch as __visualshadernodesdfraymarch__
import py4godot.classes.AudioEffectBandPassFilter as __audioeffectbandpassfilter__
import py4godot.classes.PhysicalSkyMaterial as __physicalskymaterial__
import py4godot.classes.Texture2DArray as __texture2darray__
import py4godot.classes.AudioEffectNotchFilter as __audioeffectnotchfilter__
import py4godot.classes.VisualShaderNodeTexture2DParameter as __visualshadernodetexture2dparameter__
import py4godot.classes.SkeletonModification2D as __skeletonmodification2d__
import py4godot.classes.CameraAttributesPhysical as __cameraattributesphysical__
import py4godot.classes.AudioEffectChorus as __audioeffectchorus__
import py4godot.classes.Texture3DRD as __texture3drd__
import py4godot.classes.GDExtension as __gdextension__
import py4godot.classes.BaseMaterial3D as __basematerial3d__
import py4godot.classes.VideoStream as __videostream__
import py4godot.classes.AnimationNodeBlend3 as __animationnodeblend3__
import py4godot.classes.VisualShaderNodeVectorOp as __visualshadernodevectorop__
import py4godot.classes.PlaceholderTexture3D as __placeholdertexture3d__
import py4godot.classes.SyntaxHighlighter as __syntaxhighlighter__
import py4godot.classes.VisualShaderNodeIntConstant as __visualshadernodeintconstant__
import py4godot.classes.PackedScene as __packedscene__
import py4godot.classes.AudioStreamPlaylist as __audiostreamplaylist__
import py4godot.classes.Shader as __shader__
import py4godot.classes.CompressedTexture2DArray as __compressedtexture2darray__
import py4godot.classes.AudioStreamOggVorbis as __audiostreamoggvorbis__
import py4godot.classes.SphereOccluder3D as __sphereoccluder3d__
import py4godot.classes.World2D as __world2d__
import py4godot.classes.JSON as __json__
import py4godot.classes.AudioStreamGenerator as __audiostreamgenerator__
import py4godot.classes.Theme as __theme__
import py4godot.classes.VisualShaderNodeParticleOutput as __visualshadernodeparticleoutput__
import py4godot.classes.AudioStreamRandomizer as __audiostreamrandomizer__
import py4godot.classes.StyleBoxTexture as __styleboxtexture__
import py4godot.classes.AudioEffectRecord as __audioeffectrecord__
import py4godot.classes.VisualShaderNodeBooleanConstant as __visualshadernodebooleanconstant__
import py4godot.classes.VisualShaderNodeRemap as __visualshadernoderemap__
import py4godot.classes.VisualShaderNodeReroute as __visualshadernodereroute__
import py4godot.classes.Sky as __sky__
import py4godot.classes.GLTFLight as __gltflight__
import py4godot.classes.ParticleProcessMaterial as __particleprocessmaterial__
import py4godot.classes.Curve as __curve__
import py4godot.classes.ArrayOccluder3D as __arrayoccluder3d__
import py4godot.classes.AudioEffectBandLimitFilter as __audioeffectbandlimitfilter__
import py4godot.classes.AudioEffectPanner as __audioeffectpanner__
import py4godot.classes.VisualShaderNodeWorldPositionFromDepth as __visualshadernodeworldpositionfromdepth__
import py4godot.classes.MultiMesh as __multimesh__
import py4godot.classes.VisualShaderNodeIntParameter as __visualshadernodeintparameter__
import py4godot.classes.Environment as __environment__
import py4godot.classes.VisualShaderNodeFaceForward as __visualshadernodefaceforward__
import py4godot.classes.VisualShader as __visualshader__
import py4godot.classes.Texture3D as __texture3d__
import py4godot.classes.VisualShaderNodeUIntParameter as __visualshadernodeuintparameter__
import py4godot.classes.VisualShaderNodeFloatOp as __visualshadernodefloatop__
import py4godot.classes.HeightMapShape3D as __heightmapshape3d__
import py4godot.classes.VisualShaderNodeConstant as __visualshadernodeconstant__
import py4godot.classes.RectangleShape2D as __rectangleshape2d__
import py4godot.classes.InputEvent as __inputevent__
import py4godot.classes.OpenXRDpadBindingModifier as __openxrdpadbindingmodifier__
import py4godot.classes.CompressedCubemap as __compressedcubemap__
import py4godot.classes.ImageTextureLayered as __imagetexturelayered__
import py4godot.classes.Texture2DRD as __texture2drd__
import py4godot.classes.VisualShaderNodeUIntFunc as __visualshadernodeuintfunc__
import py4godot.classes.VisualShaderNodeProximityFade as __visualshadernodeproximityfade__
import py4godot.classes.VisualShaderNodeExpression as __visualshadernodeexpression__
import py4godot.classes.Animation as __animation__
import py4godot.classes.OpenXRHapticBase as __openxrhapticbase__
import py4godot.classes.VisualShaderNodeParticleRingEmitter as __visualshadernodeparticleringemitter__
import py4godot.classes.EditorSettings as __editorsettings__
import py4godot.classes.GLTFBufferView as __gltfbufferview__
import py4godot.classes.TileSetScenesCollectionSource as __tilesetscenescollectionsource__
import py4godot.classes.VisualShaderNodeScreenNormalWorldSpace as __visualshadernodescreennormalworldspace__
import py4godot.classes.AudioEffectDistortion as __audioeffectdistortion__
import py4godot.classes.VisualShaderNodeVectorRefract as __visualshadernodevectorrefract__
import py4godot.classes.StyleBox as __stylebox__
import py4godot.classes.ConcavePolygonShape3D as __concavepolygonshape3d__
import py4godot.classes.TextureLayeredRD as __texturelayeredrd__
import py4godot.classes.Translation as __translation__
import py4godot.classes.AnimationNodeTimeSeek as __animationnodetimeseek__
import py4godot.classes.VisualShaderNodeCompare as __visualshadernodecompare__
import py4godot.classes.PolygonOccluder3D as __polygonoccluder3d__
import py4godot.classes.MeshLibrary as __meshlibrary__
import py4godot.classes.CameraAttributesPractical as __cameraattributespractical__
import py4godot.classes.GLTFState as __gltfstate__
import py4godot.classes.Skin as __skin__
import py4godot.classes.VisualShaderNodeSDFToScreenUV as __visualshadernodesdftoscreenuv__
import py4godot.classes.AudioStreamWAV as __audiostreamwav__
import py4godot.classes.VisualShaderNodeMultiplyAdd as __visualshadernodemultiplyadd__
import py4godot.classes.VisualShaderNodeFloatFunc as __visualshadernodefloatfunc__
import py4godot.classes.InputEventFromWindow as __inputeventfromwindow__
import py4godot.classes.SystemFont as __systemfont__
import py4godot.classes.AudioEffectLowPassFilter as __audioeffectlowpassfilter__
import py4godot.classes.VisualShaderNodeParticleBoxEmitter as __visualshadernodeparticleboxemitter__
import py4godot.classes.Curve3D as __curve3d__
import py4godot.classes.AnimationRootNode as __animationrootnode__
import py4godot.classes.Occluder3D as __occluder3d__
import py4godot.classes.AnimationNodeExtension as __animationnodeextension__
import py4godot.classes.PrismMesh as __prismmesh__
import py4godot.classes.Noise as __noise__
import py4godot.classes.VisualShaderNodeColorFunc as __visualshadernodecolorfunc__
import py4godot.classes.AnimationNodeOutput as __animationnodeoutput__
import py4godot.classes.CapsuleShape3D as __capsuleshape3d__
import py4godot.classes.AudioEffectEQ10 as __audioeffecteq10__
import py4godot.classes.CanvasTexture as __canvastexture__
import py4godot.classes.ScriptExtension as __scriptextension__
import py4godot.classes.FogMaterial as __fogmaterial__
import py4godot.classes.AudioEffectCompressor as __audioeffectcompressor__
import py4godot.classes.AudioEffectEQ21 as __audioeffecteq21__
import py4godot.classes.GLTFDocument as __gltfdocument__
import py4godot.classes.VisualShaderNodeOutput as __visualshadernodeoutput__
import py4godot.classes.VisualShaderNodeVectorCompose as __visualshadernodevectorcompose__
import py4godot.classes.RibbonTrailMesh as __ribbontrailmesh__
import py4godot.classes.ConcavePolygonShape2D as __concavepolygonshape2d__
import py4godot.classes.CompositorEffect as __compositoreffect__
import py4godot.classes.CapsuleMesh as __capsulemesh__
import py4godot.classes.AnimationNodeStateMachine as __animationnodestatemachine__
import py4godot.classes.VisualShaderNodeTransformCompose as __visualshadernodetransformcompose__
import py4godot.classes.SkeletonModification2DTwoBoneIK as __skeletonmodification2dtwoboneik__
import py4godot.classes.VisualShaderNodeTexture2DArray as __visualshadernodetexture2darray__
import py4godot.classes.AudioEffectLowShelfFilter as __audioeffectlowshelffilter__
import py4godot.classes.GLTFPhysicsBody as __gltfphysicsbody__
import py4godot.classes.AnimationLibrary as __animationlibrary__
import py4godot.classes.VisualShaderNodeFloatParameter as __visualshadernodefloatparameter__
import py4godot.classes.VisualShaderNodeVectorBase as __visualshadernodevectorbase__
import py4godot.classes.RDShaderFile as __rdshaderfile__
import py4godot.classes.VisualShaderNodeParticleMeshEmitter as __visualshadernodeparticlemeshemitter__
import py4godot.classes.OpenXRActionBindingModifier as __openxractionbindingmodifier__
import py4godot.classes.PlaceholderTexture2DArray as __placeholdertexture2darray__
import py4godot.classes.ImmediateMesh as __immediatemesh__
import py4godot.classes.VisualShaderNodeParticleSphereEmitter as __visualshadernodeparticlesphereemitter__
import py4godot.classes.VisualShaderNodeGlobalExpression as __visualshadernodeglobalexpression__
import py4godot.classes.X509Certificate as __x509certificate__
import py4godot.classes.VisualShaderNodeVarying as __visualshadernodevarying__
import py4godot.classes.StandardMaterial3D as __standardmaterial3d__
import py4godot.classes.VisualShaderNodeVectorDecompose as __visualshadernodevectordecompose__
import py4godot.classes.NavigationPolygon as __navigationpolygon__
import py4godot.classes.CompressedTexture3D as __compressedtexture3d__
import py4godot.classes.Material as __material__
import py4godot.classes.InputEventWithModifiers as __inputeventwithmodifiers__
import py4godot.classes.GLTFDocumentExtensionConvertImporterMesh as __gltfdocumentextensionconvertimportermesh__
import py4godot.classes.VisualShaderNodeParameterRef as __visualshadernodeparameterref__
import py4godot.classes.RDShaderSPIRV as __rdshaderspirv__
import py4godot.classes.SkeletonModification2DCCDIK as __skeletonmodification2dccdik__
import py4godot.classes.CircleShape2D as __circleshape2d__
import py4godot.classes.GLTFTexture as __gltftexture__
import py4godot.classes.VisualShaderNodeClamp as __visualshadernodeclamp__
import py4godot.classes.AudioBusLayout as __audiobuslayout__
import py4godot.classes.AnimationNodeAnimation as __animationnodeanimation__
import py4godot.classes.CameraAttributes as __cameraattributes__
import py4godot.classes.ShaderInclude as __shaderinclude__
import py4godot.classes.TubeTrailMesh as __tubetrailmesh__
import py4godot.classes.OpenXRAction as __openxraction__
import py4godot.classes.SphereShape3D as __sphereshape3d__
import py4godot.classes.ExternalTexture as __externaltexture__
import py4godot.classes.VisualShaderNodeIf as __visualshadernodeif__
import py4godot.classes.VisualShaderNodeUVPolarCoord as __visualshadernodeuvpolarcoord__
import py4godot.classes.CompressedCubemapArray as __compressedcubemaparray__
import py4godot.classes.VisualShaderNodeUVFunc as __visualshadernodeuvfunc__
import py4godot.classes.InputEventMouse as __inputeventmouse__
import py4godot.classes.AudioStreamPolyphonic as __audiostreampolyphonic__


class TrackType:
  KIND_VALUE:int = 0
  KIND_POSITION_3D:int = 1
  KIND_ROTATION_3D:int = 2
  KIND_SCALE_3D:int = 3
  KIND_BLEND_SHAPE:int = 4
  KIND_METHOD:int = 5
  KIND_BEZIER:int = 6
  KIND_AUDIO:int = 7
  KIND_ANIMATION:int = 8
class InterpolationType:
  INTERPOLATION_NEAREST:int = 0
  INTERPOLATION_LINEAR:int = 1
  INTERPOLATION_CUBIC:int = 2
  INTERPOLATION_LINEAR_ANGLE:int = 3
  INTERPOLATION_CUBIC_ANGLE:int = 4
class UpdateMode:
  UPDATE_CONTINUOUS:int = 0
  UPDATE_DISCRETE:int = 1
  UPDATE_CAPTURE:int = 2
class LoopMode:
  LOOPERATOR_NONE:int = 0
  LOOPERATOR_LINEAR:int = 1
  LOOPERATOR_PINGPONG:int = 2
class LoopedFlag:
  LOOPED_FLAG_NONE:int = 0
  LOOPED_FLAG_END:int = 1
  LOOPED_FLAG_START:int = 2
class FindMode:
  FIND_MODE_NEAREST:int = 0
  FIND_MODE_APPROX:int = 1
  FIND_MODE_EXACT:int = 2


class Animation(__resource__.Resource):
  """
		This resource holds data that can be used to animate anything in the engine. Animations are divided into tracks and each track must be linked to a node. The state of that node can be changed through time, by adding timed keys (events) to the track.
		
		```gdscript
		# This creates an animation that makes the node "Enemy" move to the right by
		# 100 pixels in 2.0 seconds.
		var animation = Animation.new()
		var track_index = animation.add_track(Animation.TYPE_VALUE)
		animation.track_set_path(track_index, "Enemy:position:x")
		animation.track_insert_key(track_index, 0.0, 0)
		animation.track_insert_key(track_index, 2.0, 100)
		animation.length = 2.0
		```
		
		
		Animations are just data containers, and must be added to nodes such as an `AnimationPlayer` to be played back. Animation tracks have different types, each with its own set of dedicated methods. Check `enum TrackType` to see available types.
		**Note:** For 3D position/rotation/scale, using the dedicated `constant TYPE_POSITION_3D`, `constant TYPE_ROTATION_3D` and `constant TYPE_SCALE_3D` track types instead of `constant TYPE_VALUE` is recommended for performance reasons.
	"""

  @staticmethod
  def constructor()->Animation:pass



  @staticmethod
  def cast(other:__object__.Object)->Animation:pass


  @property
  def length(self)->float:
    """"""
    pass
  @length.setter
  def length(self,  value:float)->None:
    """"""
    pass
  @property
  def loop_mode(self)->int:
    """"""
    pass
  @loop_mode.setter
  def loop_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def step(self)->float:
    """"""
    pass
  @step.setter
  def step(self,  value:float)->None:
    """"""
    pass
  @property
  def capture_included(self)->bool:
    """"""
    pass
  def add_track(self, type:int , at_position:int=-1)->int:
    """
				Adds a track to the Animation.
			"""
    pass

  def remove_track(self, track_idx:int)->None:
    """
				Removes a track by specifying the track index.
			"""
    pass

  def get_track_count(self)->int:
    """
				Returns the amount of tracks in the animation.
			"""
    pass

  def track_get_type(self, track_idx:int)->int:
    """
				Gets the type of a track.
			"""
    pass

  def track_get_path(self, track_idx:int)->__core__.NodePath:
    """
				Gets the path of a track. For more information on the path format, see `track_set_path`.
			"""
    pass

  def track_set_path(self, track_idx:int, path:__core__.NodePath|str)->None:
    """
				Sets the path of a track. Paths must be valid scene-tree paths to a node and must be specified starting from the `AnimationMixer.root_node` that will reproduce the animation. Tracks that control properties or bones must append their name after the path, separated by `":"`.
				For example, `"character/skeleton:ankle"` or `"character/mesh:transform/local"`.
			"""
    pass

  def find_track(self, path:__core__.NodePath|str, type:int )->int:
    """
				Returns the index of the specified track. If the track is not found, return -1.
			"""
    pass

  def track_move_up(self, track_idx:int)->None:
    """
				Moves a track up.
			"""
    pass

  def track_move_down(self, track_idx:int)->None:
    """
				Moves a track down.
			"""
    pass

  def track_move_to(self, track_idx:int, to_idx:int)->None:
    """
				Changes the index position of track `track_idx` to the one defined in `to_idx`.
			"""
    pass

  def track_swap(self, track_idx:int, with_idx:int)->None:
    """
				Swaps the track `track_idx`'s index position with the track `with_idx`.
			"""
    pass

  def track_set_imported(self, track_idx:int, imported:bool)->None:
    """
				Sets the given track as imported or not.
			"""
    pass

  def track_is_imported(self, track_idx:int)->bool:
    """
				Returns `true` if the given track is imported. Else, return `false`.
			"""
    pass

  def track_set_enabled(self, track_idx:int, enabled:bool)->None:
    """
				Enables/disables the given track. Tracks are enabled by default.
			"""
    pass

  def track_is_enabled(self, track_idx:int)->bool:
    """
				Returns `true` if the track at index `track_idx` is enabled.
			"""
    pass

  def position_track_insert_key(self, track_idx:int, time:float, position:__core__.Vector3)->int:
    """
				Inserts a key in a given 3D position track. Returns the key index.
			"""
    pass

  def rotation_track_insert_key(self, track_idx:int, time:float, rotation:__core__.Quaternion)->int:
    """
				Inserts a key in a given 3D rotation track. Returns the key index.
			"""
    pass

  def scale_track_insert_key(self, track_idx:int, time:float, scale:__core__.Vector3)->int:
    """
				Inserts a key in a given 3D scale track. Returns the key index.
			"""
    pass

  def blend_shape_track_insert_key(self, track_idx:int, time:float, amount:float)->int:
    """
				Inserts a key in a given blend shape track. Returns the key index.
			"""
    pass

  def position_track_interpolate(self, track_idx:int, time_sec:float, backward:bool=False)->__core__.Vector3:
    """
				Returns the interpolated position value at the given time (in seconds). The `track_idx` must be the index of a 3D position track.
			"""
    pass

  def rotation_track_interpolate(self, track_idx:int, time_sec:float, backward:bool=False)->__core__.Quaternion:
    """
				Returns the interpolated rotation value at the given time (in seconds). The `track_idx` must be the index of a 3D rotation track.
			"""
    pass

  def scale_track_interpolate(self, track_idx:int, time_sec:float, backward:bool=False)->__core__.Vector3:
    """
				Returns the interpolated scale value at the given time (in seconds). The `track_idx` must be the index of a 3D scale track.
			"""
    pass

  def blend_shape_track_interpolate(self, track_idx:int, time_sec:float, backward:bool=False)->float:
    """
				Returns the interpolated blend shape value at the given time (in seconds). The `track_idx` must be the index of a blend shape track.
			"""
    pass

  def track_insert_key(self, track_idx:int, time:float, key:Any, transition:float=1)->int:
    """
				Inserts a generic key in a given track. Returns the key index.
			"""
    pass

  def track_remove_key(self, track_idx:int, key_idx:int)->None:
    """
				Removes a key by index in a given track.
			"""
    pass

  def track_remove_key_at_time(self, track_idx:int, time:float)->None:
    """
				Removes a key at `time` in a given track.
			"""
    pass

  def track_set_key_value(self, track_idx:int, key:int, value:Any)->None:
    """
				Sets the value of an existing key.
			"""
    pass

  def track_set_key_transition(self, track_idx:int, key_idx:int, transition:float)->None:
    """
				Sets the transition curve (easing) for a specific key (see the built-in math function `@GlobalScope.ease`).
			"""
    pass

  def track_set_key_time(self, track_idx:int, key_idx:int, time:float)->None:
    """
				Sets the time of an existing key.
			"""
    pass

  def track_get_key_transition(self, track_idx:int, key_idx:int)->float:
    """
				Returns the transition curve (easing) for a specific key (see the built-in math function `@GlobalScope.ease`).
			"""
    pass

  def track_get_key_count(self, track_idx:int)->int:
    """
				Returns the number of keys in a given track.
			"""
    pass

  def track_get_key_value(self, track_idx:int, key_idx:int)->Any:
    """
				Returns the value of a given key in a given track.
			"""
    pass

  def track_get_key_time(self, track_idx:int, key_idx:int)->float:
    """
				Returns the time at which the key is located.
			"""
    pass

  def track_find_key(self, track_idx:int, time:float, find_mode:int =0, limit:bool=False, backward:bool=False)->int:
    """
				Finds the key index by time in a given track. Optionally, only find it if the approx/exact time is given.
				If `limit` is `true`, it does not return keys outside the animation range.
				If `backward` is `true`, the direction is reversed in methods that rely on one directional processing.
				For example, in case `find_mode` is `constant FIND_MODE_NEAREST`, if there is no key in the current position just after seeked, the first key found is retrieved by searching before the position, but if `backward` is `true`, the first key found is retrieved after the position.
			"""
    pass

  def track_set_interpolation_type(self, track_idx:int, interpolation:int )->None:
    """
				Sets the interpolation type of a given track.
			"""
    pass

  def track_get_interpolation_type(self, track_idx:int)->int:
    """
				Returns the interpolation type of a given track.
			"""
    pass

  def track_set_interpolation_loop_wrap(self, track_idx:int, interpolation:bool)->None:
    """
				If `true`, the track at `track_idx` wraps the interpolation loop.
			"""
    pass

  def track_get_interpolation_loop_wrap(self, track_idx:int)->bool:
    """
				Returns `true` if the track at `track_idx` wraps the interpolation loop. New tracks wrap the interpolation loop by default.
			"""
    pass

  def track_is_compressed(self, track_idx:int)->bool:
    """
				Returns `true` if the track is compressed, `false` otherwise. See also `compress`.
			"""
    pass

  def value_track_set_update_mode(self, track_idx:int, mode:int )->None:
    """
				Sets the update mode of a value track.
			"""
    pass

  def value_track_get_update_mode(self, track_idx:int)->int:
    """
				Returns the update mode of a value track.
			"""
    pass

  def value_track_interpolate(self, track_idx:int, time_sec:float, backward:bool=False)->Any:
    """
				Returns the interpolated value at the given time (in seconds). The `track_idx` must be the index of a value track.
				A `backward` mainly affects the direction of key retrieval of the track with `constant UPDATE_DISCRETE` converted by `constant AnimationMixer.ANIMATION_CALLBACK_MODE_DISCRETE_FORCE_CONTINUOUS` to match the result with `track_find_key`.
			"""
    pass

  def method_track_get_name(self, track_idx:int, key_idx:int)->__core__.StringName:
    """
				Returns the method name of a method track.
			"""
    pass

  def method_track_get_params(self, track_idx:int, key_idx:int)->__core__.Array:
    """
				Returns the arguments values to be called on a method track for a given key in a given track.
			"""
    pass

  def bezier_track_insert_key(self, track_idx:int, time:float, value:float, in_handle:__core__.Vector2= __core__.Vector2.new0(), out_handle:__core__.Vector2= __core__.Vector2.new0())->int:
    """
				Inserts a Bezier Track key at the given `time` in seconds. The `track_idx` must be the index of a Bezier Track.
				`in_handle` is the left-side weight of the added Bezier curve point, `out_handle` is the right-side one, while `value` is the actual value at this point.
			"""
    pass

  def bezier_track_set_key_value(self, track_idx:int, key_idx:int, value:float)->None:
    """
				Sets the value of the key identified by `key_idx` to the given value. The `track_idx` must be the index of a Bezier Track.
			"""
    pass

  def bezier_track_set_key_in_handle(self, track_idx:int, key_idx:int, in_handle:__core__.Vector2, balanced_value_time_ratio:float=1.0)->None:
    """
				Sets the in handle of the key identified by `key_idx` to value `in_handle`. The `track_idx` must be the index of a Bezier Track.
			"""
    pass

  def bezier_track_set_key_out_handle(self, track_idx:int, key_idx:int, out_handle:__core__.Vector2, balanced_value_time_ratio:float=1.0)->None:
    """
				Sets the out handle of the key identified by `key_idx` to value `out_handle`. The `track_idx` must be the index of a Bezier Track.
			"""
    pass

  def bezier_track_get_key_value(self, track_idx:int, key_idx:int)->float:
    """
				Returns the value of the key identified by `key_idx`. The `track_idx` must be the index of a Bezier Track.
			"""
    pass

  def bezier_track_get_key_in_handle(self, track_idx:int, key_idx:int)->__core__.Vector2:
    """
				Returns the in handle of the key identified by `key_idx`. The `track_idx` must be the index of a Bezier Track.
			"""
    pass

  def bezier_track_get_key_out_handle(self, track_idx:int, key_idx:int)->__core__.Vector2:
    """
				Returns the out handle of the key identified by `key_idx`. The `track_idx` must be the index of a Bezier Track.
			"""
    pass

  def bezier_track_interpolate(self, track_idx:int, time:float)->float:
    """
				Returns the interpolated value at the given `time` (in seconds). The `track_idx` must be the index of a Bezier Track.
			"""
    pass

  def audio_track_insert_key(self, track_idx:int, time:float, stream:__resource__.Resource, start_offset:float=0, end_offset:float=0)->int:
    """
				Inserts an Audio Track key at the given `time` in seconds. The `track_idx` must be the index of an Audio Track.
				`stream` is the `AudioStream` resource to play. `start_offset` is the number of seconds cut off at the beginning of the audio stream, while `end_offset` is at the ending.
			"""
    pass

  def audio_track_set_key_stream(self, track_idx:int, key_idx:int, stream:__resource__.Resource)->None:
    """
				Sets the stream of the key identified by `key_idx` to value `stream`. The `track_idx` must be the index of an Audio Track.
			"""
    pass

  def audio_track_set_key_start_offset(self, track_idx:int, key_idx:int, offset:float)->None:
    """
				Sets the start offset of the key identified by `key_idx` to value `offset`. The `track_idx` must be the index of an Audio Track.
			"""
    pass

  def audio_track_set_key_end_offset(self, track_idx:int, key_idx:int, offset:float)->None:
    """
				Sets the end offset of the key identified by `key_idx` to value `offset`. The `track_idx` must be the index of an Audio Track.
			"""
    pass

  def audio_track_get_key_stream(self, track_idx:int, key_idx:int)->__animationnodesync__.AnimationNodeSync|__visualshadernodedeterminant__.VisualShaderNodeDeterminant|__visualshadernodevaryingsetter__.VisualShaderNodeVaryingSetter|__importermesh__.ImporterMesh|__visualshadernodeouterproduct__.VisualShaderNodeOuterProduct|__visualshadernodeparticleemitter__.VisualShaderNodeParticleEmitter|__audioeffect__.AudioEffect|__lightmapgidata__.LightmapGIData|__placeholdermesh__.PlaceholderMesh|__audioeffectamplify__.AudioEffectAmplify|__visualshadernodetransformvecmult__.VisualShaderNodeTransformVecMult|__audioeffectreverb__.AudioEffectReverb|__audioeffectcapture__.AudioEffectCapture|__visualshadernodestep__.VisualShaderNodeStep|__fastnoiselite__.FastNoiseLite|__audioeffectspectrumanalyzer__.AudioEffectSpectrumAnalyzer|__inputeventjoypadmotion__.InputEventJoypadMotion|__gradienttexture2d__.GradientTexture2D|__visualshadernodeuintconstant__.VisualShaderNodeUIntConstant|__skeletonprofile__.SkeletonProfile|__animationnodeblendspace1d__.AnimationNodeBlendSpace1D|__optimizedtranslation__.OptimizedTranslation|__placeholdercubemap__.PlaceholderCubemap|__visualshadernodetexturesdf__.VisualShaderNodeTextureSDF|__tileset__.TileSet|__audioeffecthighshelffilter__.AudioEffectHighShelfFilter|__quadmesh__.QuadMesh|__animationnodeblendtree__.AnimationNodeBlendTree|__occluderpolygon2d__.OccluderPolygon2D|__script__.Script|__texturecubemaparrayrd__.TextureCubemapArrayRD|__tilesetatlassource__.TileSetAtlasSource|__packeddatacontainer__.PackedDataContainer|__physicsmaterial__.PhysicsMaterial|__animationnodesub2__.AnimationNodeSub2|__placeholdertexture2d__.PlaceholderTexture2D|__audiostreammp3__.AudioStreamMP3|__visualshadernodevec3parameter__.VisualShaderNodeVec3Parameter|__inputeventscreentouch__.InputEventScreenTouch|__convexpolygonshape3d__.ConvexPolygonShape3D|__noisetexture3d__.NoiseTexture3D|__audioeffectdelay__.AudioEffectDelay|__visualshadernodetextureparametertriplanar__.VisualShaderNodeTextureParameterTriplanar|__animationnodeblend2__.AnimationNodeBlend2|__primitivemesh__.PrimitiveMesh|__richtexteffect__.RichTextEffect|__visualshadernodetransformop__.VisualShaderNodeTransformOp|__visualshadernodeinput__.VisualShaderNodeInput|__planemesh__.PlaneMesh|__skeletonmodification2dphysicalbones__.SkeletonModification2DPhysicalBones|__worldboundaryshape2d__.WorldBoundaryShape2D|__skeletonmodification2djiggle__.SkeletonModification2DJiggle|__visualshadernodelinearscenedepth__.VisualShaderNodeLinearSceneDepth|__ormmaterial3d__.ORMMaterial3D|__missingresource__.MissingResource|__skeletonprofilehumanoid__.SkeletonProfileHumanoid|__pointmesh__.PointMesh|__shadermaterial__.ShaderMaterial|__codehighlighter__.CodeHighlighter|__visualshadernodevec3constant__.VisualShaderNodeVec3Constant|__skeletonmodification2dfabrik__.SkeletonModification2DFABRIK|__polygonpathfinder__.PolygonPathFinder|__texture2d__.Texture2D|__visualshadernodeframe__.VisualShaderNodeFrame|__visualshadernodeswitch__.VisualShaderNodeSwitch|__visualshadernodefresnel__.VisualShaderNodeFresnel|__visualshadernodeparticleaccelerator__.VisualShaderNodeParticleAccelerator|__navigationmeshsourcegeometrydata2d__.NavigationMeshSourceGeometryData2D|__boxmesh__.BoxMesh|__gradient__.Gradient|__visualshadernodevec4constant__.VisualShaderNodeVec4Constant|__inputeventgesture__.InputEventGesture|__inputeventkey__.InputEventKey|__visualshadernodeis__.VisualShaderNodeIs|__visualshadernodeintfunc__.VisualShaderNodeIntFunc|__visualshadernodecurvexyztexture__.VisualShaderNodeCurveXYZTexture|__texture__.Texture|__styleboxflat__.StyleBoxFlat|__textmesh__.TextMesh|__visualshadernodevec2constant__.VisualShaderNodeVec2Constant|__oggpacketsequence__.OggPacketSequence|__editornode3dgizmoplugin__.EditorNode3DGizmoPlugin|__inputeventmousemotion__.InputEventMouseMotion|__labelsettings__.LabelSettings|__gltfspecgloss__.GLTFSpecGloss|__visualshadernodecubemapparameter__.VisualShaderNodeCubemapParameter|__openxripbinding__.OpenXRIPBinding|__visualshadernodedotproduct__.VisualShaderNodeDotProduct|__styleboxline__.StyleBoxLine|__visualshadernodetransformdecompose__.VisualShaderNodeTransformDecompose|__gltfskeleton__.GLTFSkeleton|__gltfnode__.GLTFNode|__atlastexture__.AtlasTexture|__quadoccluder3d__.QuadOccluder3D|__visualshadernodecustom__.VisualShaderNodeCustom|__cryptokey__.CryptoKey|__buttongroup__.ButtonGroup|__visualshadernodedistancefade__.VisualShaderNodeDistanceFade|__visualshadernodebillboard__.VisualShaderNodeBillboard|__visualshadernodevec2parameter__.VisualShaderNodeVec2Parameter|__animationnodetimescale__.AnimationNodeTimeScale|__inputeventshortcut__.InputEventShortcut|__visualshadernodecolorconstant__.VisualShaderNodeColorConstant|__cameratexture__.CameraTexture|__tilesetsource__.TileSetSource|__visualshadernodederivativefunc__.VisualShaderNodeDerivativeFunc|__shape2d__.Shape2D|__visualshadernodegroupbase__.VisualShaderNodeGroupBase|__animationnodeoneshot__.AnimationNodeOneShot|__openxrbindingmodifier__.OpenXRBindingModifier|__spriteframes__.SpriteFrames|__visualshadernodetexturesdfnormal__.VisualShaderNodeTextureSDFNormal|__visualshadernodetextureparameter__.VisualShaderNodeTextureParameter|__gltfaccessor__.GLTFAccessor|__audioeffectfilter__.AudioEffectFilter|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gltfphysicsshape__.GLTFPhysicsShape|__compressedtexture2d__.CompressedTexture2D|__visualshadernodecurvetexture__.VisualShaderNodeCurveTexture|__mesh__.Mesh|__boxoccluder3d__.BoxOccluder3D|__cylindershape3d__.CylinderShape3D|__placeholdercubemaparray__.PlaceholderCubemapArray|__fontvariation__.FontVariation|__gltftexturesampler__.GLTFTextureSampler|__arraymesh__.ArrayMesh|__audiostreammicrophone__.AudioStreamMicrophone|__gltfskin__.GLTFSkin|__inputeventscreendrag__.InputEventScreenDrag|__skeletonmodification2dstackholder__.SkeletonModification2DStackHolder|__visualshadernodeparticlemultiplybyaxisangle__.VisualShaderNodeParticleMultiplyByAxisAngle|__visualshadernodeparameter__.VisualShaderNodeParameter|__audioeffectphaser__.AudioEffectPhaser|__inputeventjoypadbutton__.InputEventJoypadButton|__panoramaskymaterial__.PanoramaSkyMaterial|__segmentshape2d__.SegmentShape2D|__texturecubemaprd__.TextureCubemapRD|__visualshadernoderotationbyaxis__.VisualShaderNodeRotationByAxis|__visualshadernodecolorop__.VisualShaderNodeColorOp|__audioeffecthighpassfilter__.AudioEffectHighPassFilter|__openxractionmap__.OpenXRActionMap|__visualshadernodeintop__.VisualShaderNodeIntOp|__visualshadernodeparticlerandomness__.VisualShaderNodeParticleRandomness|__audioeffectlimiter__.AudioEffectLimiter|__separationrayshape2d__.SeparationRayShape2D|__audiostreaminteractive__.AudioStreamInteractive|__skeletonmodification2dlookat__.SkeletonModification2DLookAt|__cubemaparray__.CubemapArray|__visualshadernodevectorlen__.VisualShaderNodeVectorLen|__visualshadernode__.VisualShaderNode|__animationnodetransition__.AnimationNodeTransition|__audiostream__.AudioStream|__scenereplicationconfig__.SceneReplicationConfig|__visualshadernodecolorparameter__.VisualShaderNodeColorParameter|__openxrhapticvibration__.OpenXRHapticVibration|__visualshadernoderandomrange__.VisualShaderNodeRandomRange|__shape3d__.Shape3D|__inputeventaction__.InputEventAction|__placeholdertexturelayered__.PlaceholderTextureLayered|__animationnodeadd2__.AnimationNodeAdd2|__torusmesh__.TorusMesh|__fbxstate__.FBXState|__separationrayshape3d__.SeparationRayShape3D|__audioeffecteq6__.AudioEffectEQ6|__gdscript__.GDScript|__visualshadernodemix__.VisualShaderNodeMix|__noisetexture2d__.NoiseTexture2D|__visualshadernodebooleanparameter__.VisualShaderNodeBooleanParameter|__visualshadernodesmoothstep__.VisualShaderNodeSmoothStep|__fbxdocument__.FBXDocument|__inputeventmagnifygesture__.InputEventMagnifyGesture|__animationnodeadd3__.AnimationNodeAdd3|__bitmap__.BitMap|__shortcut__.Shortcut|__animationnode__.AnimationNode|__visualshadernodeparticleemit__.VisualShaderNodeParticleEmit|__proceduralskymaterial__.ProceduralSkyMaterial|__curvetexture__.CurveTexture|__visualshadernodetexture2darrayparameter__.VisualShaderNodeTexture2DArrayParameter|__videostreamplayback__.VideoStreamPlayback|__visualshadernodeparticleconevelocity__.VisualShaderNodeParticleConeVelocity|__styleboxempty__.StyleBoxEmpty|__visualshadernodescreenuvtosdf__.VisualShaderNodeScreenUVToSDF|__audioeffectpitchshift__.AudioEffectPitchShift|__openxranalogthresholdmodifier__.OpenXRAnalogThresholdModifier|__capsuleshape2d__.CapsuleShape2D|__navigationmesh__.NavigationMesh|__boxshape3d__.BoxShape3D|__gltfmesh__.GLTFMesh|__visualshadernodetexture__.VisualShaderNodeTexture|__visualshadernodevectorfunc__.VisualShaderNodeVectorFunc|__audiostreamsynchronized__.AudioStreamSynchronized|__resource__.Resource|__compositor__.Compositor|__world3d__.World3D|__visualshadernodevec4parameter__.VisualShaderNodeVec4Parameter|__colorpalette__.ColorPalette|__visualshadernodeuintop__.VisualShaderNodeUIntOp|__inputeventmousebutton__.InputEventMouseButton|__convexpolygonshape2d__.ConvexPolygonShape2D|__visualshadernodefloatconstant__.VisualShaderNodeFloatConstant|__visualshadernodevaryinggetter__.VisualShaderNodeVaryingGetter|__cylindermesh__.CylinderMesh|__visualshadernodesample3d__.VisualShaderNodeSample3D|__canvasitemmaterial__.CanvasItemMaterial|__audioeffecteq__.AudioEffectEQ|__curve2d__.Curve2D|__cubemap__.Cubemap|__gdscriptsyntaxhighlighter__.GDScriptSyntaxHighlighter|__tilemappattern__.TileMapPattern|__visualshadernodetexture3dparameter__.VisualShaderNodeTexture3DParameter|__visualshadernodecubemap__.VisualShaderNodeCubemap|__curvexyztexture__.CurveXYZTexture|__bonemap__.BoneMap|__audioeffecthardlimiter__.AudioEffectHardLimiter|__inputeventmidi__.InputEventMIDI|__gltfcamera__.GLTFCamera|__texture2darrayrd__.Texture2DArrayRD|__openxrinteractionprofile__.OpenXRInteractionProfile|__navigationmeshsourcegeometrydata3d__.NavigationMeshSourceGeometryData3D|__voxelgidata__.VoxelGIData|__skeletonmodificationstack2d__.SkeletonModificationStack2D|__visualshadernodetransformparameter__.VisualShaderNodeTransformParameter|__viewporttexture__.ViewportTexture|__visualshadernodetransformconstant__.VisualShaderNodeTransformConstant|__animationnodestatemachinetransition__.AnimationNodeStateMachineTransition|__portablecompressedtexture2d__.PortableCompressedTexture2D|__openxripbindingmodifier__.OpenXRIPBindingModifier|__videostreamtheora__.VideoStreamTheora|__image__.Image|__spheremesh__.SphereMesh|__font__.Font|__gltfdocumentextension__.GLTFDocumentExtension|__visualshadernodecomment__.VisualShaderNodeComment|__gltfanimation__.GLTFAnimation|__meshtexture__.MeshTexture|__visualshadernodetransformfunc__.VisualShaderNodeTransformFunc|__openxractionset__.OpenXRActionSet|__compressedtexturelayered__.CompressedTextureLayered|__visualshadernodetexture3d__.VisualShaderNodeTexture3D|__imagetexture3d__.ImageTexture3D|__visualshadernoderesizablebase__.VisualShaderNodeResizableBase|__fontfile__.FontFile|__inputeventpangesture__.InputEventPanGesture|__audioeffectstereoenhance__.AudioEffectStereoEnhance|__animationnodestatemachineplayback__.AnimationNodeStateMachinePlayback|__texturelayered__.TextureLayered|__animationnodeblendspace2d__.AnimationNodeBlendSpace2D|__placeholdermaterial__.PlaceholderMaterial|__worldboundaryshape3d__.WorldBoundaryShape3D|__visualshadernodevectordistance__.VisualShaderNodeVectorDistance|__gradienttexture1d__.GradientTexture1D|__editorsyntaxhighlighter__.EditorSyntaxHighlighter|__visualshadernodesdfraymarch__.VisualShaderNodeSDFRaymarch|__audioeffectbandpassfilter__.AudioEffectBandPassFilter|__physicalskymaterial__.PhysicalSkyMaterial|__texture2darray__.Texture2DArray|__audioeffectnotchfilter__.AudioEffectNotchFilter|__visualshadernodetexture2dparameter__.VisualShaderNodeTexture2DParameter|__skeletonmodification2d__.SkeletonModification2D|__cameraattributesphysical__.CameraAttributesPhysical|__audioeffectchorus__.AudioEffectChorus|__texture3drd__.Texture3DRD|__gdextension__.GDExtension|__basematerial3d__.BaseMaterial3D|__videostream__.VideoStream|__animationnodeblend3__.AnimationNodeBlend3|__visualshadernodevectorop__.VisualShaderNodeVectorOp|__placeholdertexture3d__.PlaceholderTexture3D|__syntaxhighlighter__.SyntaxHighlighter|__visualshadernodeintconstant__.VisualShaderNodeIntConstant|__packedscene__.PackedScene|__audiostreamplaylist__.AudioStreamPlaylist|__shader__.Shader|__compressedtexture2darray__.CompressedTexture2DArray|__audiostreamoggvorbis__.AudioStreamOggVorbis|__sphereoccluder3d__.SphereOccluder3D|__world2d__.World2D|__json__.JSON|__audiostreamgenerator__.AudioStreamGenerator|__theme__.Theme|__visualshadernodeparticleoutput__.VisualShaderNodeParticleOutput|__audiostreamrandomizer__.AudioStreamRandomizer|__styleboxtexture__.StyleBoxTexture|__audioeffectrecord__.AudioEffectRecord|__visualshadernodebooleanconstant__.VisualShaderNodeBooleanConstant|__visualshadernoderemap__.VisualShaderNodeRemap|__visualshadernodereroute__.VisualShaderNodeReroute|__sky__.Sky|__gltflight__.GLTFLight|__particleprocessmaterial__.ParticleProcessMaterial|__curve__.Curve|__arrayoccluder3d__.ArrayOccluder3D|__audioeffectbandlimitfilter__.AudioEffectBandLimitFilter|__audioeffectpanner__.AudioEffectPanner|__visualshadernodeworldpositionfromdepth__.VisualShaderNodeWorldPositionFromDepth|__multimesh__.MultiMesh|__visualshadernodeintparameter__.VisualShaderNodeIntParameter|__environment__.Environment|__visualshadernodefaceforward__.VisualShaderNodeFaceForward|__visualshader__.VisualShader|__texture3d__.Texture3D|__visualshadernodeuintparameter__.VisualShaderNodeUIntParameter|__visualshadernodefloatop__.VisualShaderNodeFloatOp|__heightmapshape3d__.HeightMapShape3D|__visualshadernodeconstant__.VisualShaderNodeConstant|__rectangleshape2d__.RectangleShape2D|__inputevent__.InputEvent|__openxrdpadbindingmodifier__.OpenXRDpadBindingModifier|__compressedcubemap__.CompressedCubemap|__imagetexturelayered__.ImageTextureLayered|__texture2drd__.Texture2DRD|__visualshadernodeuintfunc__.VisualShaderNodeUIntFunc|__visualshadernodeproximityfade__.VisualShaderNodeProximityFade|__visualshadernodeexpression__.VisualShaderNodeExpression|__animation__.Animation|__openxrhapticbase__.OpenXRHapticBase|__visualshadernodeparticleringemitter__.VisualShaderNodeParticleRingEmitter|__editorsettings__.EditorSettings|__gltfbufferview__.GLTFBufferView|__tilesetscenescollectionsource__.TileSetScenesCollectionSource|__visualshadernodescreennormalworldspace__.VisualShaderNodeScreenNormalWorldSpace|__audioeffectdistortion__.AudioEffectDistortion|__visualshadernodevectorrefract__.VisualShaderNodeVectorRefract|__stylebox__.StyleBox|__concavepolygonshape3d__.ConcavePolygonShape3D|__texturelayeredrd__.TextureLayeredRD|__translation__.Translation|__animationnodetimeseek__.AnimationNodeTimeSeek|__visualshadernodecompare__.VisualShaderNodeCompare|__polygonoccluder3d__.PolygonOccluder3D|__meshlibrary__.MeshLibrary|__cameraattributespractical__.CameraAttributesPractical|__gltfstate__.GLTFState|__skin__.Skin|__visualshadernodesdftoscreenuv__.VisualShaderNodeSDFToScreenUV|__audiostreamwav__.AudioStreamWAV|__visualshadernodemultiplyadd__.VisualShaderNodeMultiplyAdd|__visualshadernodefloatfunc__.VisualShaderNodeFloatFunc|__inputeventfromwindow__.InputEventFromWindow|__systemfont__.SystemFont|__audioeffectlowpassfilter__.AudioEffectLowPassFilter|__visualshadernodeparticleboxemitter__.VisualShaderNodeParticleBoxEmitter|__curve3d__.Curve3D|__animationrootnode__.AnimationRootNode|__occluder3d__.Occluder3D|__animationnodeextension__.AnimationNodeExtension|__prismmesh__.PrismMesh|__noise__.Noise|__visualshadernodecolorfunc__.VisualShaderNodeColorFunc|__animationnodeoutput__.AnimationNodeOutput|__capsuleshape3d__.CapsuleShape3D|__audioeffecteq10__.AudioEffectEQ10|__canvastexture__.CanvasTexture|__scriptextension__.ScriptExtension|__fogmaterial__.FogMaterial|__audioeffectcompressor__.AudioEffectCompressor|__audioeffecteq21__.AudioEffectEQ21|__gltfdocument__.GLTFDocument|__visualshadernodeoutput__.VisualShaderNodeOutput|__visualshadernodevectorcompose__.VisualShaderNodeVectorCompose|__ribbontrailmesh__.RibbonTrailMesh|__concavepolygonshape2d__.ConcavePolygonShape2D|__compositoreffect__.CompositorEffect|__capsulemesh__.CapsuleMesh|__animationnodestatemachine__.AnimationNodeStateMachine|__visualshadernodetransformcompose__.VisualShaderNodeTransformCompose|__skeletonmodification2dtwoboneik__.SkeletonModification2DTwoBoneIK|__visualshadernodetexture2darray__.VisualShaderNodeTexture2DArray|__audioeffectlowshelffilter__.AudioEffectLowShelfFilter|__gltfphysicsbody__.GLTFPhysicsBody|__animationlibrary__.AnimationLibrary|__visualshadernodefloatparameter__.VisualShaderNodeFloatParameter|__visualshadernodevectorbase__.VisualShaderNodeVectorBase|__rdshaderfile__.RDShaderFile|__visualshadernodeparticlemeshemitter__.VisualShaderNodeParticleMeshEmitter|__openxractionbindingmodifier__.OpenXRActionBindingModifier|__placeholdertexture2darray__.PlaceholderTexture2DArray|__immediatemesh__.ImmediateMesh|__visualshadernodeparticlesphereemitter__.VisualShaderNodeParticleSphereEmitter|__visualshadernodeglobalexpression__.VisualShaderNodeGlobalExpression|__x509certificate__.X509Certificate|__visualshadernodevarying__.VisualShaderNodeVarying|__standardmaterial3d__.StandardMaterial3D|__visualshadernodevectordecompose__.VisualShaderNodeVectorDecompose|__navigationpolygon__.NavigationPolygon|__compressedtexture3d__.CompressedTexture3D|__material__.Material|__inputeventwithmodifiers__.InputEventWithModifiers|__gltfdocumentextensionconvertimportermesh__.GLTFDocumentExtensionConvertImporterMesh|__visualshadernodeparameterref__.VisualShaderNodeParameterRef|__rdshaderspirv__.RDShaderSPIRV|__skeletonmodification2dccdik__.SkeletonModification2DCCDIK|__circleshape2d__.CircleShape2D|__gltftexture__.GLTFTexture|__visualshadernodeclamp__.VisualShaderNodeClamp|__audiobuslayout__.AudioBusLayout|__animationnodeanimation__.AnimationNodeAnimation|__cameraattributes__.CameraAttributes|__shaderinclude__.ShaderInclude|__tubetrailmesh__.TubeTrailMesh|__openxraction__.OpenXRAction|__sphereshape3d__.SphereShape3D|__externaltexture__.ExternalTexture|__visualshadernodeif__.VisualShaderNodeIf|__visualshadernodeuvpolarcoord__.VisualShaderNodeUVPolarCoord|__compressedcubemaparray__.CompressedCubemapArray|__visualshadernodeuvfunc__.VisualShaderNodeUVFunc|__inputeventmouse__.InputEventMouse|__audiostreampolyphonic__.AudioStreamPolyphonic:
    """
				Returns the audio stream of the key identified by `key_idx`. The `track_idx` must be the index of an Audio Track.
			"""
    pass

  def audio_track_get_key_start_offset(self, track_idx:int, key_idx:int)->float:
    """
				Returns the start offset of the key identified by `key_idx`. The `track_idx` must be the index of an Audio Track.
				Start offset is the number of seconds cut off at the beginning of the audio stream.
			"""
    pass

  def audio_track_get_key_end_offset(self, track_idx:int, key_idx:int)->float:
    """
				Returns the end offset of the key identified by `key_idx`. The `track_idx` must be the index of an Audio Track.
				End offset is the number of seconds cut off at the ending of the audio stream.
			"""
    pass

  def audio_track_set_use_blend(self, track_idx:int, enable:bool)->None:
    """
				Sets whether the track will be blended with other animations. If `true`, the audio playback volume changes depending on the blend value.
			"""
    pass

  def audio_track_is_use_blend(self, track_idx:int)->bool:
    """
				Returns `true` if the track at `track_idx` will be blended with other animations.
			"""
    pass

  def animation_track_insert_key(self, track_idx:int, time:float, animation:__core__.StringName|str)->int:
    """
				Inserts a key with value `animation` at the given `time` (in seconds). The `track_idx` must be the index of an Animation Track.
			"""
    pass

  def animation_track_set_key_animation(self, track_idx:int, key_idx:int, animation:__core__.StringName|str)->None:
    """
				Sets the key identified by `key_idx` to value `animation`. The `track_idx` must be the index of an Animation Track.
			"""
    pass

  def animation_track_get_key_animation(self, track_idx:int, key_idx:int)->__core__.StringName:
    """
				Returns the animation name at the key identified by `key_idx`. The `track_idx` must be the index of an Animation Track.
			"""
    pass

  def add_marker(self, name:__core__.StringName|str, time:float)->None:
    """
				Adds a marker to this Animation.
			"""
    pass

  def remove_marker(self, name:__core__.StringName|str)->None:
    """
				Removes the marker with the given name from this Animation.
			"""
    pass

  def has_marker(self, name:__core__.StringName|str)->bool:
    """
				Returns `true` if this Animation contains a marker with the given name.
			"""
    pass

  def get_marker_at_time(self, time:float)->__core__.StringName:
    """
				Returns the name of the marker located at the given time.
			"""
    pass

  def get_next_marker(self, time:float)->__core__.StringName:
    """
				Returns the closest marker that comes after the given time. If no such marker exists, an empty string is returned.
			"""
    pass

  def get_prev_marker(self, time:float)->__core__.StringName:
    """
				Returns the closest marker that comes before the given time. If no such marker exists, an empty string is returned.
			"""
    pass

  def get_marker_time(self, name:__core__.StringName|str)->float:
    """
				Returns the given marker's time.
			"""
    pass

  def get_marker_names(self)->__core__.PackedStringArray:
    """
				Returns every marker in this Animation, sorted ascending by time.
			"""
    pass

  def get_marker_color(self, name:__core__.StringName|str)->__core__.Color:
    """
				Returns the given marker's color.
			"""
    pass

  def set_marker_color(self, name:__core__.StringName|str, color:__core__.Color)->None:
    """
				Sets the given marker's color.
			"""
    pass

  def set_length(self, time_sec:float)->None:
    """"""
    pass

  def get_length(self)->float:
    """"""
    pass

  def set_loop_mode(self, loop_mode:int )->None:
    """"""
    pass

  def get_loop_mode(self)->int:
    """"""
    pass

  def set_step(self, size_sec:float)->None:
    """"""
    pass

  def get_step(self)->float:
    """"""
    pass

  def clear(self)->None:
    """
				Clear the animation (clear all tracks and reset all).
			"""
    pass

  def copy_track(self, track_idx:int, to_animation:__animation__.Animation)->None:
    """
				Adds a new track to `to_animation` that is a copy of the given track from this animation.
			"""
    pass

  def optimize(self, allowed_velocity_err:float=0.01, allowed_angular_err:float=0.01, precision:int=3)->None:
    """
				Optimize the animation and all its tracks in-place. This will preserve only as many keys as are necessary to keep the animation within the specified bounds.
			"""
    pass

  def compress(self, page_size:int=8192, fps:int=120, split_tolerance:float=4.0)->None:
    """
				Compress the animation and all its tracks in-place. This will make `track_is_compressed` return `true` once called on this `Animation`. Compressed tracks require less memory to be played, and are designed to be used for complex 3D animations (such as cutscenes) imported from external 3D software. Compression is lossy, but the difference is usually not noticeable in real world conditions.
				**Note:** Compressed tracks have various limitations (such as not being editable from the editor), so only use compressed animations if you actually need them.
			"""
    pass

  def is_capture_included(self)->bool:
    """"""
    pass


