from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.Gradient as __gradient__


class Fill:
  FILL_LINEAR:int = 0
  FILL_RADIAL:int = 1
  FILL_SQUARE:int = 2
class Repeat:
  REPEAT_NONE:int = 0
  REPEAT:int = 1
  REPEAT_MIRROR:int = 2


class GradientTexture2D(__texture2d__.Texture2D):
  """
		A 2D texture that obtains colors from a `Gradient` to fill the texture data. This texture is able to transform a color transition into different patterns such as a linear or a radial gradient. The texture is filled by interpolating colors starting from `fill_from` to `fill_to` offsets by default, but the gradient fill can be repeated to cover the entire texture.
		The gradient is sampled individually for each pixel so it does not necessarily represent an exact copy of the gradient (see `width` and `height`). See also `GradientTexture1D`, `CurveTexture` and `CurveXYZTexture`.
	"""

  @staticmethod
  def constructor()->GradientTexture2D:pass



  @staticmethod
  def cast(other:__object__.Object)->GradientTexture2D:pass


  @property
  def gradient(self)->__gradient__.Gradient:
    """"""
    pass
  @gradient.setter
  def gradient(self,  value:__gradient__.Gradient)->None:
    """"""
    pass
  @property
  def width(self)->int:
    """"""
    pass
  @width.setter
  def width(self,  value:int)->None:
    """"""
    pass
  @property
  def height(self)->int:
    """"""
    pass
  @height.setter
  def height(self,  value:int)->None:
    """"""
    pass
  @property
  def use_hdr(self)->bool:
    """"""
    pass
  @use_hdr.setter
  def use_hdr(self,  value:bool)->None:
    """"""
    pass
  @property
  def fill(self)->int:
    """"""
    pass
  @fill.setter
  def fill(self,  value:int)->None:
    """"""
    pass
  @property
  def fill_from(self)->__core__.Vector2:
    """"""
    pass
  @fill_from.setter
  def fill_from(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def fill_to(self)->__core__.Vector2:
    """"""
    pass
  @fill_to.setter
  def fill_to(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def repeat(self)->int:
    """"""
    pass
  @repeat.setter
  def repeat(self,  value:int)->None:
    """"""
    pass
  def set_gradient(self, gradient:__gradient__.Gradient)->None:
    """"""
    pass

  def get_gradient(self)->__gradient__.Gradient:
    """"""
    pass

  def set_width(self, width:int)->None:
    """"""
    pass

  def set_height(self, height:int)->None:
    """"""
    pass

  def set_use_hdr(self, enabled:bool)->None:
    """"""
    pass

  def is_using_hdr(self)->bool:
    """"""
    pass

  def set_fill(self, fill:int )->None:
    """"""
    pass

  def get_fill(self)->int:
    """"""
    pass

  def set_fill_from(self, fill_from:__core__.Vector2)->None:
    """"""
    pass

  def get_fill_from(self)->__core__.Vector2:
    """"""
    pass

  def set_fill_to(self, fill_to:__core__.Vector2)->None:
    """"""
    pass

  def get_fill_to(self)->__core__.Vector2:
    """"""
    pass

  def set_repeat(self, repeat:int )->None:
    """"""
    pass

  def get_repeat(self)->int:
    """"""
    pass


