from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.FontFile as __fontfile__
import py4godot.classes.SystemFont as __systemfont__
import py4godot.classes.Resource as __resource__
import py4godot.classes.FontVariation as __fontvariation__
import py4godot.classes.Font as __font__



class LabelSettings(__resource__.Resource):
  """
		`LabelSettings` is a resource that provides common settings to customize the text in a `Label`. It will take priority over the properties defined in `Control.theme`. The resource can be shared between multiple labels and changed on the fly, so it's convenient and flexible way to setup text style.
	"""

  @staticmethod
  def constructor()->LabelSettings:pass



  @staticmethod
  def cast(other:__object__.Object)->LabelSettings:pass


  @property
  def line_spacing(self)->float:
    """"""
    pass
  @line_spacing.setter
  def line_spacing(self,  value:float)->None:
    """"""
    pass
  @property
  def paragraph_spacing(self)->float:
    """"""
    pass
  @paragraph_spacing.setter
  def paragraph_spacing(self,  value:float)->None:
    """"""
    pass
  @property
  def font(self)->__fontfile__.FontFile|__fontvariation__.FontVariation|__systemfont__.SystemFont|__font__.Font:
    """"""
    pass
  @font.setter
  def font(self,  value:__font__.Font)->None:
    """"""
    pass
  @property
  def font_size(self)->int:
    """"""
    pass
  @font_size.setter
  def font_size(self,  value:int)->None:
    """"""
    pass
  @property
  def font_color(self)->__core__.Color:
    """"""
    pass
  @font_color.setter
  def font_color(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def outline_size(self)->int:
    """"""
    pass
  @outline_size.setter
  def outline_size(self,  value:int)->None:
    """"""
    pass
  @property
  def outline_color(self)->__core__.Color:
    """"""
    pass
  @outline_color.setter
  def outline_color(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def shadow_size(self)->int:
    """"""
    pass
  @shadow_size.setter
  def shadow_size(self,  value:int)->None:
    """"""
    pass
  @property
  def shadow_color(self)->__core__.Color:
    """"""
    pass
  @shadow_color.setter
  def shadow_color(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def shadow_offset(self)->__core__.Vector2:
    """"""
    pass
  @shadow_offset.setter
  def shadow_offset(self,  value:__core__.Vector2)->None:
    """"""
    pass
  def set_line_spacing(self, spacing:float)->None:
    """"""
    pass

  def get_line_spacing(self)->float:
    """"""
    pass

  def set_paragraph_spacing(self, spacing:float)->None:
    """"""
    pass

  def get_paragraph_spacing(self)->float:
    """"""
    pass

  def set_font(self, font:__font__.Font)->None:
    """"""
    pass

  def get_font(self)->__fontfile__.FontFile|__fontvariation__.FontVariation|__systemfont__.SystemFont|__font__.Font:
    """"""
    pass

  def set_font_size(self, size:int)->None:
    """"""
    pass

  def get_font_size(self)->int:
    """"""
    pass

  def set_font_color(self, color:__core__.Color)->None:
    """"""
    pass

  def get_font_color(self)->__core__.Color:
    """"""
    pass

  def set_outline_size(self, size:int)->None:
    """"""
    pass

  def get_outline_size(self)->int:
    """"""
    pass

  def set_outline_color(self, color:__core__.Color)->None:
    """"""
    pass

  def get_outline_color(self)->__core__.Color:
    """"""
    pass

  def set_shadow_size(self, size:int)->None:
    """"""
    pass

  def get_shadow_size(self)->int:
    """"""
    pass

  def set_shadow_color(self, color:__core__.Color)->None:
    """"""
    pass

  def get_shadow_color(self)->__core__.Color:
    """"""
    pass

  def set_shadow_offset(self, offset:__core__.Vector2)->None:
    """"""
    pass

  def get_shadow_offset(self)->__core__.Vector2:
    """"""
    pass


