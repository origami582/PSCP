from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Object as __object__



class ShaderIncludeDB(__object__.Object):
  """
		This object contains shader fragments from Godot's internal shaders. These can be used when access to internal uniform buffers and/or internal functions is required for instance when composing compositor effects or compute shaders. Only fragments for the current rendering device are loaded.
	"""

  @staticmethod
  def constructor()->ShaderIncludeDB:pass



  @staticmethod
  def cast(other:__object__.Object)->ShaderIncludeDB:pass


  @staticmethod
  def list_built_in_include_files()->__core__.PackedStringArray:
    """
				Returns a list of built-in include files that are currently registered.
			"""
    pass

  @staticmethod
  def has_built_in_include_file(filename:str)->bool:
    """
				Returns `true` if an include file with this name exists.
			"""
    pass

  @staticmethod
  def get_built_in_include_file(filename:str)->str:
    """
				Returns the code for the built-in shader fragment. You can also access this in your shader code through `#include "filename"`.
			"""
    pass


