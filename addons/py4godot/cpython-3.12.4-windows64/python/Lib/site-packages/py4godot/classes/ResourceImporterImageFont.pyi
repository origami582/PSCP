from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.ResourceImporter as __resourceimporter__



class ResourceImporterImageFont(__resourceimporter__.ResourceImporter):
  """
		This image-based workflow can be easier to use than `ResourceImporterBMFont`, but it requires all glyphs to have the same width and height, glyph advances and drawing offsets can be customized. This makes `ResourceImporterImageFont` most suited to fixed-width fonts.
		See also `ResourceImporterDynamicFont`.
	"""

  @staticmethod
  def constructor()->ResourceImporterImageFont:pass



  @staticmethod
  def cast(other:__object__.Object)->ResourceImporterImageFont:pass


