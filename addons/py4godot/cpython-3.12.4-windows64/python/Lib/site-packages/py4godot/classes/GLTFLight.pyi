from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.GLTFLight as __gltflight__
import py4godot.classes.Resource as __resource__
import py4godot.classes.SpotLight3D as __spotlight3d__
import py4godot.classes.OmniLight3D as __omnilight3d__
import py4godot.classes.DirectionalLight3D as __directionallight3d__
import py4godot.classes.Light3D as __light3d__



class GLTFLight(__resource__.Resource):
  """"""

  @staticmethod
  def constructor()->GLTFLight:pass



  @staticmethod
  def cast(other:__object__.Object)->GLTFLight:pass


  @property
  def color(self)->__core__.Color:
    """"""
    pass
  @color.setter
  def color(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def intensity(self)->float:
    """"""
    pass
  @intensity.setter
  def intensity(self,  value:float)->None:
    """"""
    pass
  @property
  def light_type(self)->str:
    """"""
    pass
  @light_type.setter
  def light_type(self,  value:str)->None:
    """"""
    pass
  @property
  def range(self)->float:
    """"""
    pass
  @range.setter
  def range(self,  value:float)->None:
    """"""
    pass
  @property
  def inner_cone_angle(self)->float:
    """"""
    pass
  @inner_cone_angle.setter
  def inner_cone_angle(self,  value:float)->None:
    """"""
    pass
  @property
  def outer_cone_angle(self)->float:
    """"""
    pass
  @outer_cone_angle.setter
  def outer_cone_angle(self,  value:float)->None:
    """"""
    pass
  @staticmethod
  def from_node(light_node:__light3d__.Light3D)->__gltflight__.GLTFLight:
    """"""
    pass

  def to_node(self)->__omnilight3d__.OmniLight3D|__directionallight3d__.DirectionalLight3D|__light3d__.Light3D|__spotlight3d__.SpotLight3D:
    """"""
    pass

  @staticmethod
  def from_dictionary(dictionary:__core__.Dictionary)->__gltflight__.GLTFLight:
    """"""
    pass

  def to_dictionary(self)->__core__.Dictionary:
    """"""
    pass

  def get_color(self)->__core__.Color:
    """"""
    pass

  def set_color(self, color:__core__.Color)->None:
    """"""
    pass

  def get_intensity(self)->float:
    """"""
    pass

  def set_intensity(self, intensity:float)->None:
    """"""
    pass

  def get_light_type(self)->str:
    """"""
    pass

  def set_light_type(self, light_type:str)->None:
    """"""
    pass

  def get_range(self)->float:
    """"""
    pass

  def set_range(self, range:float)->None:
    """"""
    pass

  def get_inner_cone_angle(self)->float:
    """"""
    pass

  def set_inner_cone_angle(self, inner_cone_angle:float)->None:
    """"""
    pass

  def get_outer_cone_angle(self)->float:
    """"""
    pass

  def set_outer_cone_angle(self, outer_cone_angle:float)->None:
    """"""
    pass

  def get_additional_data(self, extension_name:__core__.StringName|str)->Any:
    """"""
    pass

  def set_additional_data(self, extension_name:__core__.StringName|str, additional_data:Any)->None:
    """"""
    pass


