from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.n as __n__
import py4godot.classes.A as __a__
import py4godot.classes.i as __i__
import py4godot.classes.e as __e__
import py4godot.classes.m as __m__
import py4godot.classes.d as __d__
import py4godot.classes.T as __t__
import py4godot.classes.SkeletonModifier3D as __skeletonmodifier3d__
import py4godot.classes.t as __t__
import py4godot.classes.r as __r__
import py4godot.classes.p as __p__
import py4godot.classes.g as __g__
import py4godot.classes.N as __n__
import py4godot.classes.a as __a__
import py4godot.classes.S as __s__
import py4godot.classes.y as __y__



class PhysicalBoneSimulator3D(__skeletonmodifier3d__.SkeletonModifier3D):
  """
		Node that can be the parent of `PhysicalBone3D` and can apply the simulation results to `Skeleton3D`.
	"""

  @staticmethod
  def constructor()->PhysicalBoneSimulator3D:pass



  @staticmethod
  def cast(other:__object__.Object)->PhysicalBoneSimulator3D:pass


  def is_simulating_physics(self)->bool:
    """
				Returns a boolean that indicates whether the `PhysicalBoneSimulator3D` is running and simulating.
			"""
    pass

  def physical_bones_stop_simulation(self)->None:
    """
				Tells the `PhysicalBone3D` nodes in the Skeleton to stop simulating.
			"""
    pass

  def physical_bones_start_simulation(self, bones:__core__.Array=[])->None:
    """
				Tells the `PhysicalBone3D` nodes in the Skeleton to start simulating and reacting to the physics world.
				Optionally, a list of bone names can be passed-in, allowing only the passed-in bones to be simulated.
			"""
    pass

  def physical_bones_add_collision_exception(self, exception:__core__.RID)->None:
    """
				Adds a collision exception to the physical bone.
				Works just like the `RigidBody3D` node.
			"""
    pass

  def physical_bones_remove_collision_exception(self, exception:__core__.RID)->None:
    """
				Removes a collision exception to the physical bone.
				Works just like the `RigidBody3D` node.
			"""
    pass


