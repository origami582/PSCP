from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.EditorResourcePreviewGenerator as __editorresourcepreviewgenerator__
import py4godot.classes.Node as __node__
import py4godot.classes.Resource as __resource__
import py4godot.classes.Object as __object__



class EditorResourcePreview(__node__.Node):
  """
		This node is used to generate previews for resources or files.
		**Note:** This class shouldn't be instantiated directly. Instead, access the singleton using `EditorInterface.get_resource_previewer`.
	"""
  preview_invalidated: BuiltinSignal

  @staticmethod
  def constructor()->EditorResourcePreview:pass



  @staticmethod
  def cast(other:__object__.Object)->EditorResourcePreview:pass


  def queue_resource_preview(self, path:str, receiver:__object__.Object, receiver_func:__core__.StringName|str, userdata:Any)->None:
    """
				Queue a resource file located at `path` for preview. Once the preview is ready, the `receiver`'s `receiver_func` will be called. The `receiver_func` must take the following four arguments: `String` path, `Texture2D` preview, `Texture2D` thumbnail_preview, `Variant` userdata. `userdata` can be anything, and will be returned when `receiver_func` is called.
				**Note:** If it was not possible to create the preview the `receiver_func` will still be called, but the preview will be `null`.
			"""
    pass

  def queue_edited_resource_preview(self, resource:__resource__.Resource, receiver:__object__.Object, receiver_func:__core__.StringName|str, userdata:Any)->None:
    """
				Queue the `resource` being edited for preview. Once the preview is ready, the `receiver`'s `receiver_func` will be called. The `receiver_func` must take the following four arguments: `String` path, `Texture2D` preview, `Texture2D` thumbnail_preview, `Variant` userdata. `userdata` can be anything, and will be returned when `receiver_func` is called.
				**Note:** If it was not possible to create the preview the `receiver_func` will still be called, but the preview will be `null`.
			"""
    pass

  def add_preview_generator(self, generator:__editorresourcepreviewgenerator__.EditorResourcePreviewGenerator)->None:
    """
				Create an own, custom preview generator.
			"""
    pass

  def remove_preview_generator(self, generator:__editorresourcepreviewgenerator__.EditorResourcePreviewGenerator)->None:
    """
				Removes a custom preview generator.
			"""
    pass

  def check_for_invalidation(self, path:str)->None:
    """
				Check if the resource changed, if so, it will be invalidated and the corresponding signal emitted.
			"""
    pass


