from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.n as __n__
import py4godot.classes.T as __t__
import py4godot.classes.g as __g__
import py4godot.classes.GLTFAccessor as __gltfaccessor__
import py4godot.classes.k as __k__
import py4godot.classes.Expression as __expression__
import py4godot.classes.i as __i__
import py4godot.classes.e as __e__
import py4godot.classes.o as __o__
import py4godot.classes.RefCounted as __refcounted__
import py4godot.classes.p as __p__
import py4godot.classes.N as __n__
import py4godot.classes.d as __d__
import py4godot.classes.c as __c__
import py4godot.classes.r as __r__
import py4godot.classes.a as __a__
import py4godot.classes.A as __a__
import py4godot.classes.h as __h__
import py4godot.classes.y as __y__
import py4godot.classes.GLTFObjectModelProperty as __gltfobjectmodelproperty__
import py4godot.classes.t as __t__
import py4godot.classes.S as __s__
import py4godot.classes.P as __p__


class GLTFObjectModelType:
  GLTF_OBJECT_MODEL_KIND_UNKNOWN:int = 0
  GLTF_OBJECT_MODEL_KIND_BOOL:int = 1
  GLTF_OBJECT_MODEL_KIND_FLOAT:int = 2
  GLTF_OBJECT_MODEL_KIND_FLOAT_ARRAY:int = 3
  GLTF_OBJECT_MODEL_KIND_FLOAT2:int = 4
  GLTF_OBJECT_MODEL_KIND_FLOAT3:int = 5
  GLTF_OBJECT_MODEL_KIND_FLOAT4:int = 6
  GLTF_OBJECT_MODEL_KIND_FLOAT2X2:int = 7
  GLTF_OBJECT_MODEL_KIND_FLOAT3X3:int = 8
  GLTF_OBJECT_MODEL_KIND_FLOAT4X4:int = 9
  GLTF_OBJECT_MODEL_KIND_INT:int = 10


class GLTFObjectModelProperty(__refcounted__.RefCounted):
  """"""

  @staticmethod
  def constructor()->GLTFObjectModelProperty:pass



  @staticmethod
  def cast(other:__object__.Object)->GLTFObjectModelProperty:pass


  @property
  def gltf_to_godot_expression(self)->__expression__.Expression:
    """"""
    pass
  @gltf_to_godot_expression.setter
  def gltf_to_godot_expression(self,  value:__expression__.Expression)->None:
    """"""
    pass
  @property
  def godot_to_gltf_expression(self)->__expression__.Expression:
    """"""
    pass
  @godot_to_gltf_expression.setter
  def godot_to_gltf_expression(self,  value:__expression__.Expression)->None:
    """"""
    pass
  @property
  def node_paths(self)->__core__.Array:
    """"""
    pass
  @node_paths.setter
  def node_paths(self,  value:__core__.Array)->None:
    """"""
    pass
  @property
  def object_model_type(self)->int:
    """"""
    pass
  @object_model_type.setter
  def object_model_type(self,  value:int)->None:
    """"""
    pass
  @property
  def json_pointers(self)->__core__.PackedStringArray:
    """"""
    pass
  @json_pointers.setter
  def json_pointers(self,  value:__core__.PackedStringArray)->None:
    """"""
    pass
  @property
  def variant_type(self)->int:
    """"""
    pass
  @variant_type.setter
  def variant_type(self,  value:int)->None:
    """"""
    pass
  def append_node_path(self, node_path:__core__.NodePath|str)->None:
    """"""
    pass

  def append_path_to_property(self, node_path:__core__.NodePath|str, prop_name:__core__.StringName|str)->None:
    """"""
    pass

  def get_accessor_type(self)->int:
    """"""
    pass

  def get_gltf_to_godot_expression(self)->__expression__.Expression:
    """"""
    pass

  def set_gltf_to_godot_expression(self, gltf_to_godot_expr:__expression__.Expression)->None:
    """"""
    pass

  def get_godot_to_gltf_expression(self)->__expression__.Expression:
    """"""
    pass

  def set_godot_to_gltf_expression(self, godot_to_gltf_expr:__expression__.Expression)->None:
    """"""
    pass

  def get_node_paths(self)->typedarray::NodePath:
    """"""
    pass

  def has_node_paths(self)->bool:
    """"""
    pass

  def set_node_paths(self, node_paths:__core__.Array)->None:
    """"""
    pass

  def get_object_model_type(self)->int:
    """"""
    pass

  def set_object_model_type(self, type:int )->None:
    """"""
    pass

  def get_json_pointers(self)->typedarray::PackedStringArray:
    """"""
    pass

  def has_json_pointers(self)->bool:
    """"""
    pass

  def set_json_pointers(self, json_pointers:__core__.Array)->None:
    """"""
    pass

  def get_variant_type(self)->int:
    """"""
    pass

  def set_variant_type(self, variant_type:int )->None:
    """"""
    pass

  def set_types(self, variant_type:int , obj_model_type:int )->None:
    """"""
    pass


