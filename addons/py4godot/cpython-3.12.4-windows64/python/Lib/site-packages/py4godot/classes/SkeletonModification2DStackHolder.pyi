from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.SkeletonModification2D as __skeletonmodification2d__
import py4godot.classes.SkeletonModificationStack2D as __skeletonmodificationstack2d__



class SkeletonModification2DStackHolder(__skeletonmodification2d__.SkeletonModification2D):
  """
		This `SkeletonModification2D` holds a reference to a `SkeletonModificationStack2D`, allowing you to use multiple modification stacks on a single `Skeleton2D`.
		**Note:** The modifications in the held `SkeletonModificationStack2D` will only be executed if their execution mode matches the execution mode of the SkeletonModification2DStackHolder.
	"""

  @staticmethod
  def constructor()->SkeletonModification2DStackHolder:pass



  @staticmethod
  def cast(other:__object__.Object)->SkeletonModification2DStackHolder:pass


  def set_held_modification_stack(self, held_modification_stack:__skeletonmodificationstack2d__.SkeletonModificationStack2D)->None:
    """
				Sets the `SkeletonModificationStack2D` that this modification is holding. This modification stack will then be executed when this modification is executed.
			"""
    pass

  def get_held_modification_stack(self)->__skeletonmodificationstack2d__.SkeletonModificationStack2D:
    """
				Returns the `SkeletonModificationStack2D` that this modification is holding.
			"""
    pass


