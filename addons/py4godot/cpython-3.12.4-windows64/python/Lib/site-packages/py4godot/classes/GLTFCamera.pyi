from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.GLTFCamera as __gltfcamera__
import py4godot.classes.Camera3D as __camera3d__
import py4godot.classes.Resource as __resource__
import py4godot.classes.XRCamera3D as __xrcamera3d__



class GLTFCamera(__resource__.Resource):
  """"""

  @staticmethod
  def constructor()->GLTFCamera:pass



  @staticmethod
  def cast(other:__object__.Object)->GLTFCamera:pass


  @property
  def perspective(self)->bool:
    """"""
    pass
  @perspective.setter
  def perspective(self,  value:bool)->None:
    """"""
    pass
  @property
  def fov(self)->float:
    """"""
    pass
  @fov.setter
  def fov(self,  value:float)->None:
    """"""
    pass
  @property
  def size_mag(self)->float:
    """"""
    pass
  @size_mag.setter
  def size_mag(self,  value:float)->None:
    """"""
    pass
  @property
  def depth_far(self)->float:
    """"""
    pass
  @depth_far.setter
  def depth_far(self,  value:float)->None:
    """"""
    pass
  @property
  def depth_near(self)->float:
    """"""
    pass
  @depth_near.setter
  def depth_near(self,  value:float)->None:
    """"""
    pass
  @staticmethod
  def from_node(camera_node:__camera3d__.Camera3D)->__gltfcamera__.GLTFCamera:
    """"""
    pass

  def to_node(self)->__camera3d__.Camera3D|__xrcamera3d__.XRCamera3D:
    """"""
    pass

  @staticmethod
  def from_dictionary(dictionary:__core__.Dictionary)->__gltfcamera__.GLTFCamera:
    """"""
    pass

  def to_dictionary(self)->__core__.Dictionary:
    """"""
    pass

  def get_perspective(self)->bool:
    """"""
    pass

  def set_perspective(self, perspective:bool)->None:
    """"""
    pass

  def get_fov(self)->float:
    """"""
    pass

  def set_fov(self, fov:float)->None:
    """"""
    pass

  def get_size_mag(self)->float:
    """"""
    pass

  def set_size_mag(self, size_mag:float)->None:
    """"""
    pass

  def get_depth_far(self)->float:
    """"""
    pass

  def set_depth_far(self, zdepth_far:float)->None:
    """"""
    pass

  def get_depth_near(self)->float:
    """"""
    pass

  def set_depth_near(self, zdepth_near:float)->None:
    """"""
    pass


