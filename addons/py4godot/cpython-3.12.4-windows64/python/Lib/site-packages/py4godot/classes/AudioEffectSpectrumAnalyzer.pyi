from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AudioEffect as __audioeffect__
import py4godot.classes.AudioEffectSpectrumAnalyzer as __audioeffectspectrumanalyzer__


class FFTSize:
  FFT_SIZE_256:int = 0
  FFT_SIZE_512:int = 1
  FFT_SIZE_1024:int = 2
  FFT_SIZE_2048:int = 3
  FFT_SIZE_4096:int = 4
  FFT_SIZE_MAX:int = 5


class AudioEffectSpectrumAnalyzer(__audioeffect__.AudioEffect):
  """
		This audio effect does not affect sound output, but can be used for real-time audio visualizations.
		This resource configures an `AudioEffectSpectrumAnalyzerInstance`, which performs the actual analysis at runtime. An instance can be obtained with `AudioServer.get_bus_effect_instance`.
		See also `AudioStreamGenerator` for procedurally generating sounds.
	"""

  @staticmethod
  def constructor()->AudioEffectSpectrumAnalyzer:pass



  @staticmethod
  def cast(other:__object__.Object)->AudioEffectSpectrumAnalyzer:pass


  @property
  def buffer_length(self)->float:
    """"""
    pass
  @buffer_length.setter
  def buffer_length(self,  value:float)->None:
    """"""
    pass
  @property
  def tap_back_pos(self)->float:
    """"""
    pass
  @tap_back_pos.setter
  def tap_back_pos(self,  value:float)->None:
    """"""
    pass
  @property
  def fft_size(self)->int:
    """"""
    pass
  @fft_size.setter
  def fft_size(self,  value:int)->None:
    """"""
    pass
  def set_buffer_length(self, seconds:float)->None:
    """"""
    pass

  def get_buffer_length(self)->float:
    """"""
    pass

  def set_tap_back_pos(self, seconds:float)->None:
    """"""
    pass

  def get_tap_back_pos(self)->float:
    """"""
    pass

  def set_fft_size(self, size:int )->None:
    """"""
    pass

  def get_fft_size(self)->int:
    """"""
    pass


