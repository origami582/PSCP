from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.CollisionPolygon2D as __collisionpolygon2d__
import py4godot.classes.Node2D as __node2d__


class BuildMode:
  BUILD_SOLIDS:int = 0
  BUILD_SEGMENTS:int = 1


class CollisionPolygon2D(__node2d__.Node2D):
  """
		A node that provides a polygon shape to a `CollisionObject2D` parent and allows to edit it. The polygon can be concave or convex. This can give a detection shape to an `Area2D`, turn `PhysicsBody2D` into a solid object, or give a hollow shape to a `StaticBody2D`.
		**Warning:** A non-uniformly scaled `CollisionPolygon2D` will likely not behave as expected. Make sure to keep its scale the same on all axes and adjust its polygon instead.
	"""

  @staticmethod
  def constructor()->CollisionPolygon2D:pass



  @staticmethod
  def cast(other:__object__.Object)->CollisionPolygon2D:pass


  @property
  def build_mode(self)->int:
    """"""
    pass
  @build_mode.setter
  def build_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def polygon(self)->__core__.PackedVector2Array:
    """"""
    pass
  @polygon.setter
  def polygon(self,  value:__core__.PackedVector2Array)->None:
    """"""
    pass
  @property
  def disabled(self)->bool:
    """"""
    pass
  @disabled.setter
  def disabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def one_way_collision(self)->bool:
    """"""
    pass
  @one_way_collision.setter
  def one_way_collision(self,  value:bool)->None:
    """"""
    pass
  @property
  def one_way_collision_margin(self)->float:
    """"""
    pass
  @one_way_collision_margin.setter
  def one_way_collision_margin(self,  value:float)->None:
    """"""
    pass
  def set_polygon(self, polygon:__core__.PackedVector2Array)->None:
    """"""
    pass

  def get_polygon(self)->__core__.PackedVector2Array:
    """"""
    pass

  def set_build_mode(self, build_mode:int )->None:
    """"""
    pass

  def get_build_mode(self)->int:
    """"""
    pass

  def set_disabled(self, disabled:bool)->None:
    """"""
    pass

  def is_disabled(self)->bool:
    """"""
    pass

  def set_one_way_collision(self, enabled:bool)->None:
    """"""
    pass

  def is_one_way_collision_enabled(self)->bool:
    """"""
    pass

  def set_one_way_collision_margin(self, margin:float)->None:
    """"""
    pass

  def get_one_way_collision_margin(self)->float:
    """"""
    pass


