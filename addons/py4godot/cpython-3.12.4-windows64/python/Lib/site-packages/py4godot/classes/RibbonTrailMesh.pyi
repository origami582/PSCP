from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.PrimitiveMesh as __primitivemesh__
import py4godot.classes.Curve as __curve__
import py4godot.classes.RibbonTrailMesh as __ribbontrailmesh__


class Shape:
  SHAPE_FLAT:int = 0
  SHAPE_CROSS:int = 1


class RibbonTrailMesh(__primitivemesh__.PrimitiveMesh):
  """
		`RibbonTrailMesh` represents a straight ribbon-shaped mesh with variable width. The ribbon is composed of a number of flat or cross-shaped sections, each with the same `section_length` and number of `section_segments`. A `curve` is sampled along the total length of the ribbon, meaning that the curve determines the size of the ribbon along its length.
		This primitive mesh is usually used for particle trails.
	"""

  @staticmethod
  def constructor()->RibbonTrailMesh:pass



  @staticmethod
  def cast(other:__object__.Object)->RibbonTrailMesh:pass


  @property
  def shape(self)->int:
    """"""
    pass
  @shape.setter
  def shape(self,  value:int)->None:
    """"""
    pass
  @property
  def size(self)->float:
    """"""
    pass
  @size.setter
  def size(self,  value:float)->None:
    """"""
    pass
  @property
  def sections(self)->int:
    """"""
    pass
  @sections.setter
  def sections(self,  value:int)->None:
    """"""
    pass
  @property
  def section_length(self)->float:
    """"""
    pass
  @section_length.setter
  def section_length(self,  value:float)->None:
    """"""
    pass
  @property
  def section_segments(self)->int:
    """"""
    pass
  @section_segments.setter
  def section_segments(self,  value:int)->None:
    """"""
    pass
  @property
  def curve(self)->__curve__.Curve:
    """"""
    pass
  @curve.setter
  def curve(self,  value:__curve__.Curve)->None:
    """"""
    pass
  def set_size(self, size:float)->None:
    """"""
    pass

  def get_size(self)->float:
    """"""
    pass

  def set_sections(self, sections:int)->None:
    """"""
    pass

  def get_sections(self)->int:
    """"""
    pass

  def set_section_length(self, section_length:float)->None:
    """"""
    pass

  def get_section_length(self)->float:
    """"""
    pass

  def set_section_segments(self, section_segments:int)->None:
    """"""
    pass

  def get_section_segments(self)->int:
    """"""
    pass

  def set_curve(self, curve:__curve__.Curve)->None:
    """"""
    pass

  def get_curve(self)->__curve__.Curve:
    """"""
    pass

  def set_shape(self, shape:int )->None:
    """"""
    pass

  def get_shape(self)->int:
    """"""
    pass


