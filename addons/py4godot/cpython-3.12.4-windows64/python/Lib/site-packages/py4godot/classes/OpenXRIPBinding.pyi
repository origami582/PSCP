from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.OpenXRAnalogThresholdModifier as __openxranalogthresholdmodifier__
import py4godot.classes.OpenXRAction as __openxraction__
import py4godot.classes.OpenXRActionBindingModifier as __openxractionbindingmodifier__
import py4godot.classes.Resource as __resource__



class OpenXRIPBinding(__resource__.Resource):
  """"""

  @staticmethod
  def constructor()->OpenXRIPBinding:pass



  @staticmethod
  def cast(other:__object__.Object)->OpenXRIPBinding:pass


  @property
  def action(self)->__openxraction__.OpenXRAction:
    """"""
    pass
  @action.setter
  def action(self,  value:__openxraction__.OpenXRAction)->None:
    """"""
    pass
  @property
  def binding_path(self)->str:
    """"""
    pass
  @binding_path.setter
  def binding_path(self,  value:str)->None:
    """"""
    pass
  @property
  def binding_modifiers(self)->__openxranalogthresholdmodifier__.OpenXRAnalogThresholdModifier|__openxractionbindingmodifier__.OpenXRActionBindingModifier:
    """"""
    pass
  @binding_modifiers.setter
  def binding_modifiers(self,  value:__openxractionbindingmodifier__.OpenXRActionBindingModifier)->None:
    """"""
    pass
  @property
  def paths(self)->__core__.PackedStringArray:
    """"""
    pass
  @paths.setter
  def paths(self,  value:__core__.PackedStringArray)->None:
    """"""
    pass
  def set_action(self, action:__openxraction__.OpenXRAction)->None:
    """"""
    pass

  def get_action(self)->__openxraction__.OpenXRAction:
    """"""
    pass

  def set_binding_path(self, binding_path:str)->None:
    """"""
    pass

  def get_binding_path(self)->str:
    """"""
    pass

  def get_binding_modifier_count(self)->int:
    """"""
    pass

  def get_binding_modifier(self, index:int)->__openxranalogthresholdmodifier__.OpenXRAnalogThresholdModifier|__openxractionbindingmodifier__.OpenXRActionBindingModifier:
    """"""
    pass

  def set_binding_modifiers(self, binding_modifiers:__core__.Array)->None:
    """"""
    pass

  def get_binding_modifiers(self)->__core__.Array:
    """"""
    pass

  def set_paths(self, paths:__core__.PackedStringArray)->None:
    """"""
    pass

  def get_paths(self)->__core__.PackedStringArray:
    """"""
    pass

  def get_path_count(self)->int:
    """"""
    pass

  def has_path(self, path:str)->bool:
    """"""
    pass

  def add_path(self, path:str)->None:
    """"""
    pass

  def remove_path(self, path:str)->None:
    """"""
    pass


