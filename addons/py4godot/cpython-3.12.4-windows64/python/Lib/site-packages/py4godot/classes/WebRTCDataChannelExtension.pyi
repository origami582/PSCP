from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.WebRTCDataChannel as __webrtcdatachannel__
import py4godot.classes.WebRTCDataChannelExtension as __webrtcdatachannelextension__



class WebRTCDataChannelExtension(__webrtcdatachannel__.WebRTCDataChannel):
  """"""

  @staticmethod
  def constructor()->WebRTCDataChannelExtension:pass



  @staticmethod
  def cast(other:__object__.Object)->WebRTCDataChannelExtension:pass


  def _get_available_packet_count(self)->int:
    """"""
    pass

  def _get_max_packet_size(self)->int:
    """"""
    pass

  def _poll(self)->int:
    """"""
    pass

  def _close(self)->None:
    """"""
    pass

  def _set_write_mode(self, p_write_mode:int )->None:
    """"""
    pass

  def _get_write_mode(self)->int:
    """"""
    pass

  def _was_string_packet(self)->bool:
    """"""
    pass

  def _get_ready_state(self)->int:
    """"""
    pass

  def _get_label(self)->str:
    """"""
    pass

  def _is_ordered(self)->bool:
    """"""
    pass

  def _get_id(self)->int:
    """"""
    pass

  def _get_max_packet_life_time(self)->int:
    """"""
    pass

  def _get_max_retransmits(self)->int:
    """"""
    pass

  def _get_protocol(self)->str:
    """"""
    pass

  def _is_negotiated(self)->bool:
    """"""
    pass

  def _get_buffered_amount(self)->int:
    """"""
    pass


