from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.InputEventWithModifiers as __inputeventwithmodifiers__



class InputEventMouse(__inputeventwithmodifiers__.InputEventWithModifiers):
  """
		Stores general information about mouse events.
	"""

  @staticmethod
  def constructor()->InputEventMouse:pass



  @staticmethod
  def cast(other:__object__.Object)->InputEventMouse:pass


  @property
  def button_mask(self)->int:
    """"""
    pass
  @button_mask.setter
  def button_mask(self,  value:int)->None:
    """"""
    pass
  @property
  def position(self)->__core__.Vector2:
    """"""
    pass
  @position.setter
  def position(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def global_position(self)->__core__.Vector2:
    """"""
    pass
  @global_position.setter
  def global_position(self,  value:__core__.Vector2)->None:
    """"""
    pass
  def set_button_mask(self, button_mask:int)->None:
    """"""
    pass

  def get_button_mask(self)->int:
    """"""
    pass

  def set_position(self, position:__core__.Vector2)->None:
    """"""
    pass

  def get_position(self)->__core__.Vector2:
    """"""
    pass

  def set_global_position(self, global_position:__core__.Vector2)->None:
    """"""
    pass

  def get_global_position(self)->__core__.Vector2:
    """"""
    pass


