from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Range as __range__



class Slider(__range__.Range):
  """
		Abstract base class for sliders, used to adjust a value by moving a grabber along a horizontal or vertical axis. Sliders are `Range`-based controls.
	"""
  drag_started: BuiltinSignal
  drag_ended: BuiltinSignal

  @staticmethod
  def constructor()->Slider:pass



  @staticmethod
  def cast(other:__object__.Object)->Slider:pass


  @property
  def editable(self)->bool:
    """"""
    pass
  @editable.setter
  def editable(self,  value:bool)->None:
    """"""
    pass
  @property
  def scrollable(self)->bool:
    """"""
    pass
  @scrollable.setter
  def scrollable(self,  value:bool)->None:
    """"""
    pass
  @property
  def tick_count(self)->int:
    """"""
    pass
  @tick_count.setter
  def tick_count(self,  value:int)->None:
    """"""
    pass
  @property
  def ticks_on_borders(self)->bool:
    """"""
    pass
  @ticks_on_borders.setter
  def ticks_on_borders(self,  value:bool)->None:
    """"""
    pass
  def set_ticks(self, count:int)->None:
    """"""
    pass

  def get_ticks(self)->int:
    """"""
    pass

  def get_ticks_on_borders(self)->bool:
    """"""
    pass

  def set_ticks_on_borders(self, ticks_on_border:bool)->None:
    """"""
    pass

  def set_editable(self, editable:bool)->None:
    """"""
    pass

  def is_editable(self)->bool:
    """"""
    pass

  def set_scrollable(self, scrollable:bool)->None:
    """"""
    pass

  def is_scrollable(self)->bool:
    """"""
    pass


