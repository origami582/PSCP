from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RenderSceneBuffersConfiguration as __renderscenebuffersconfiguration__
import py4godot.classes.RefCounted as __refcounted__



class RenderSceneBuffers(__refcounted__.RefCounted):
  """
		Abstract scene buffers object, created for each viewport for which 3D rendering is done. It manages any additional buffers used during rendering and will discard buffers when the viewport is resized.
		**Note:** This is an internal rendering server object, do not instantiate this from script.
	"""

  @staticmethod
  def constructor()->RenderSceneBuffers:pass



  @staticmethod
  def cast(other:__object__.Object)->RenderSceneBuffers:pass


  def configure(self, config:__renderscenebuffersconfiguration__.RenderSceneBuffersConfiguration)->None:
    """
				This method is called by the rendering server when the associated viewport's configuration is changed. It will discard the old buffers and recreate the internal buffers used.
			"""
    pass


