from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Texture3D as __texture3d__



class CompressedTexture3D(__texture3d__.Texture3D):
  """
		`CompressedTexture3D` is the VRAM-compressed counterpart of `ImageTexture3D`. The file extension for `CompressedTexture3D` files is `.ctex3d`. This file format is internal to Godot; it is created by importing other image formats with the import system.
		`CompressedTexture3D` uses VRAM compression, which allows to reduce memory usage on the GPU when rendering the texture. This also improves loading times, as VRAM-compressed textures are faster to load compared to textures using lossless compression. VRAM compression can exhibit noticeable artifacts and is intended to be used for 3D rendering, not 2D.
		See `Texture3D` for a general description of 3D textures.
	"""

  @staticmethod
  def constructor()->CompressedTexture3D:pass



  @staticmethod
  def cast(other:__object__.Object)->CompressedTexture3D:pass


  @property
  def load_path(self)->str:
    """"""
    pass
  @load_path.setter
  def load_path(self,  value:str)->None:
    """"""
    pass
  def load(self, path:str)->int:
    """
				Loads the texture from the specified `path`.
			"""
    pass

  def get_load_path(self)->str:
    """"""
    pass


