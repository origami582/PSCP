from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.CanvasItemMaterial as __canvasitemmaterial__
import py4godot.classes.Material as __material__


class BlendMode:
  BLEND_MODE_MIX:int = 0
  BLEND_MODE_ADD:int = 1
  BLEND_MODE_SUB:int = 2
  BLEND_MODE_MUL:int = 3
  BLEND_MODE_PREMULT_ALPHA:int = 4
class LightMode:
  LIGHT_MODE_NORMAL:int = 0
  LIGHT_MODE_UNSHADED:int = 1
  LIGHT_MODE_LIGHT_ONLY:int = 2


class CanvasItemMaterial(__material__.Material):
  """
		`CanvasItemMaterial`s provide a means of modifying the textures associated with a CanvasItem. They specialize in describing blend and lighting behaviors for textures. Use a `ShaderMaterial` to more fully customize a material's interactions with a `CanvasItem`.
	"""

  @staticmethod
  def constructor()->CanvasItemMaterial:pass



  @staticmethod
  def cast(other:__object__.Object)->CanvasItemMaterial:pass


  @property
  def blend_mode(self)->int:
    """"""
    pass
  @blend_mode.setter
  def blend_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def light_mode(self)->int:
    """"""
    pass
  @light_mode.setter
  def light_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def particles_animation(self)->bool:
    """"""
    pass
  @particles_animation.setter
  def particles_animation(self,  value:bool)->None:
    """"""
    pass
  @property
  def particles_anim_h_frames(self)->int:
    """"""
    pass
  @particles_anim_h_frames.setter
  def particles_anim_h_frames(self,  value:int)->None:
    """"""
    pass
  @property
  def particles_anim_v_frames(self)->int:
    """"""
    pass
  @particles_anim_v_frames.setter
  def particles_anim_v_frames(self,  value:int)->None:
    """"""
    pass
  @property
  def particles_anim_loop(self)->bool:
    """"""
    pass
  @particles_anim_loop.setter
  def particles_anim_loop(self,  value:bool)->None:
    """"""
    pass
  def set_blend_mode(self, blend_mode:int )->None:
    """"""
    pass

  def get_blend_mode(self)->int:
    """"""
    pass

  def set_light_mode(self, light_mode:int )->None:
    """"""
    pass

  def get_light_mode(self)->int:
    """"""
    pass

  def set_particles_animation(self, particles_anim:bool)->None:
    """"""
    pass

  def get_particles_animation(self)->bool:
    """"""
    pass

  def set_particles_anim_h_frames(self, frames:int)->None:
    """"""
    pass

  def get_particles_anim_h_frames(self)->int:
    """"""
    pass

  def set_particles_anim_v_frames(self, frames:int)->None:
    """"""
    pass

  def get_particles_anim_v_frames(self)->int:
    """"""
    pass

  def set_particles_anim_loop(self, loop:bool)->None:
    """"""
    pass

  def get_particles_anim_loop(self)->bool:
    """"""
    pass


