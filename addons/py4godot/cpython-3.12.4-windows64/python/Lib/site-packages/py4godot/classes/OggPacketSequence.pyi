from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Resource as __resource__
import py4godot.classes.e as __e__
import py4godot.classes.d as __d__
import py4godot.classes.T as __t__
import py4godot.classes.p as __p__
import py4godot.classes.r as __r__
import py4godot.classes.a as __a__
import py4godot.classes.A as __a__
import py4godot.classes.y as __y__



class OggPacketSequence(__resource__.Resource):
  """"""

  @staticmethod
  def constructor()->OggPacketSequence:pass



  @staticmethod
  def cast(other:__object__.Object)->OggPacketSequence:pass


  @property
  def packet_data(self)->typedarray::PackedByteArray:
    """"""
    pass
  @packet_data.setter
  def packet_data(self,  value:__core__.Array)->None:
    """"""
    pass
  @property
  def granule_positions(self)->__core__.PackedInt64Array:
    """"""
    pass
  @granule_positions.setter
  def granule_positions(self,  value:__core__.PackedInt64Array)->None:
    """"""
    pass
  @property
  def sampling_rate(self)->float:
    """"""
    pass
  @sampling_rate.setter
  def sampling_rate(self,  value:float)->None:
    """"""
    pass
  def set_packet_data(self, packet_data:__core__.Array)->None:
    """"""
    pass

  def get_packet_data(self)->typedarray::Array:
    """"""
    pass

  def set_packet_granule_positions(self, granule_positions:__core__.PackedInt64Array)->None:
    """"""
    pass

  def get_packet_granule_positions(self)->__core__.PackedInt64Array:
    """"""
    pass

  def set_sampling_rate(self, sampling_rate:float)->None:
    """"""
    pass

  def get_sampling_rate(self)->float:
    """"""
    pass

  def get_length(self)->float:
    """"""
    pass


