from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.JavaObject as __javaobject__
import py4godot.classes.JavaClass as __javaclass__
import py4godot.classes.Object as __object__



class JavaClassWrapper(__object__.Object):
  """
		The JavaClassWrapper singleton provides a way for the Godot application to send and receive data through the `url=https://developer.android.com/training/articles/perf-jni`Java Native Interface`/url` (JNI).
		**Note:** This singleton is only available in Android builds.
		```gdscript
		var LocalDateTime = JavaClassWrapper.wrap("java.time.LocalDateTime")
		var DateTimeFormatter = JavaClassWrapper.wrap("java.time.format.DateTimeFormatter")

		var datetime = LocalDateTime.now()
		var formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss")

		print(datetime.format(formatter))
		```
		**Warning:** When calling Java methods, be sure to check `JavaClassWrapper.get_exception` to check if the method threw an exception.
	"""



  @staticmethod
  def cast(other:__object__.Object)->JavaClassWrapper:pass

  @staticmethod
  def instance()->JavaClassWrapper:pass

  def wrap(self, name:str)->__javaclass__.JavaClass:
    """
				Wraps a class defined in Java, and returns it as a `JavaClass` `Object` type that Godot can interact with.
				When wrapping inner (nested) classes, use `$` instead of `.` to separate them. For example, `JavaClassWrapper.wrap("android.view.WindowManager$LayoutParams")` wraps the **WindowManager.LayoutParams** class.
				**Note:** This method only works on Android. On every other platform, this method does nothing and returns an empty `JavaClass`.
			"""
    pass

  def get_exception(self)->__javaobject__.JavaObject:
    """
				Returns the Java exception from the last call into a Java class. If there was no exception, it will return `null`.
				**Note:** This method only works on Android. On every other platform, this method will always return `null`.
			"""
    pass


