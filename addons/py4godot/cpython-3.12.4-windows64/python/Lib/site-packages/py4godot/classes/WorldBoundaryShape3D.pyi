from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Shape3D as __shape3d__



class WorldBoundaryShape3D(__shape3d__.Shape3D):
  """
		A 3D world boundary shape, intended for use in physics. `WorldBoundaryShape3D` works like an infinite plane that forces all physics bodies to stay above it. The `plane`'s normal determines which direction is considered as "above" and in the editor, the line over the plane represents this direction. It can for example be used for endless flat floors.
		**Note:** When the physics engine is set to **Jolt Physics** in the project settings (`ProjectSettings.physics/3d/physics_engine`), `WorldBoundaryShape3D` has a finite size (centered at the shape's origin). It can be adjusted by changing `ProjectSettings.physics/jolt_physics_3d/limits/world_boundary_shape_size`.
	"""

  @staticmethod
  def constructor()->WorldBoundaryShape3D:pass



  @staticmethod
  def cast(other:__object__.Object)->WorldBoundaryShape3D:pass


  @property
  def plane(self)->__core__.Plane:
    """"""
    pass
  @plane.setter
  def plane(self,  value:__core__.Plane)->None:
    """"""
    pass
  def set_plane(self, plane:__core__.Plane)->None:
    """"""
    pass

  def get_plane(self)->__core__.Plane:
    """"""
    pass


