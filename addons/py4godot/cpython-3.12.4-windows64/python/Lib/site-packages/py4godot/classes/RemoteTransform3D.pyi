from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Node3D as __node3d__



class RemoteTransform3D(__node3d__.Node3D):
  """
		RemoteTransform3D pushes its own `Transform3D` to another `Node3D` derived Node (called the remote node) in the scene.
		It can be set to update another Node's position, rotation and/or scale. It can use either global or local coordinates.
	"""

  @staticmethod
  def constructor()->RemoteTransform3D:pass



  @staticmethod
  def cast(other:__object__.Object)->RemoteTransform3D:pass


  @property
  def remote_path(self)->__core__.NodePath:
    """"""
    pass
  @remote_path.setter
  def remote_path(self,  value:__core__.NodePath)->None:
    """"""
    pass
  @property
  def use_global_coordinates(self)->bool:
    """"""
    pass
  @use_global_coordinates.setter
  def use_global_coordinates(self,  value:bool)->None:
    """"""
    pass
  @property
  def update_position(self)->bool:
    """"""
    pass
  @update_position.setter
  def update_position(self,  value:bool)->None:
    """"""
    pass
  @property
  def update_rotation(self)->bool:
    """"""
    pass
  @update_rotation.setter
  def update_rotation(self,  value:bool)->None:
    """"""
    pass
  @property
  def update_scale(self)->bool:
    """"""
    pass
  @update_scale.setter
  def update_scale(self,  value:bool)->None:
    """"""
    pass
  def set_remote_node(self, path:__core__.NodePath|str)->None:
    """"""
    pass

  def get_remote_node(self)->__core__.NodePath:
    """"""
    pass

  def force_update_cache(self)->None:
    """
				`RemoteTransform3D` caches the remote node. It may not notice if the remote node disappears; `force_update_cache` forces it to update the cache again.
			"""
    pass

  def set_use_global_coordinates(self, use_global_coordinates:bool)->None:
    """"""
    pass

  def get_use_global_coordinates(self)->bool:
    """"""
    pass

  def set_update_position(self, update_remote_position:bool)->None:
    """"""
    pass

  def get_update_position(self)->bool:
    """"""
    pass

  def set_update_rotation(self, update_remote_rotation:bool)->None:
    """"""
    pass

  def get_update_rotation(self)->bool:
    """"""
    pass

  def set_update_scale(self, update_remote_scale:bool)->None:
    """"""
    pass

  def get_update_scale(self)->bool:
    """"""
    pass


