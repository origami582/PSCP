from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.n as __n__
import py4godot.classes.A as __a__
import py4godot.classes.i as __i__
import py4godot.classes.e as __e__
import py4godot.classes.o as __o__
import py4godot.classes.m as __m__
import py4godot.classes.d as __d__
import py4godot.classes.U as __u__
import py4godot.classes.T as __t__
import py4godot.classes.p as __p__
import py4godot.classes.D as __d__
import py4godot.classes.R as __r__
import py4godot.classes.r as __r__
import py4godot.classes.a as __a__
import py4godot.classes.f as __f__
import py4godot.classes.y as __y__
import py4godot.classes.Object as __object__



class UniformSetCacheRD(__object__.Object):
  """
		Uniform set cache manager for Rendering Device based renderers. Provides a way to create a uniform set and reuse it in subsequent calls for as long as the uniform set exists. Uniform set will automatically be cleaned up when dependent objects are freed.
	"""

  @staticmethod
  def constructor()->UniformSetCacheRD:pass



  @staticmethod
  def cast(other:__object__.Object)->UniformSetCacheRD:pass


  @staticmethod
  def get_cache(shader:__core__.RID, set:int, uniforms:__core__.Array)->__core__.RID:
    """
				Creates/returns a cached uniform set based on the provided uniforms for a given shader.
			"""
    pass


