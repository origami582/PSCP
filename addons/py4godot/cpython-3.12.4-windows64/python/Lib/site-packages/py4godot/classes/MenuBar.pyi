from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.MenuBar as __menubar__
import py4godot.classes.VScrollBar as __vscrollbar__
import py4godot.classes.VSplitContainer as __vsplitcontainer__
import py4godot.classes.GraphElement as __graphelement__
import py4godot.classes.Button as __button__
import py4godot.classes.GraphNode as __graphnode__
import py4godot.classes.HFlowContainer as __hflowcontainer__
import py4godot.classes.Panel as __panel__
import py4godot.classes.OpenXRBindingModifierEditor as __openxrbindingmodifiereditor__
import py4godot.classes.ProgressBar as __progressbar__
import py4godot.classes.GraphFrame as __graphframe__
import py4godot.classes.TextEdit as __textedit__
import py4godot.classes.BoxContainer as __boxcontainer__
import py4godot.classes.MarginContainer as __margincontainer__
import py4godot.classes.HBoxContainer as __hboxcontainer__
import py4godot.classes.OpenXRInteractionProfileEditor as __openxrinteractionprofileeditor__
import py4godot.classes.TabContainer as __tabcontainer__
import py4godot.classes.HSeparator as __hseparator__
import py4godot.classes.Control as __control__
import py4godot.classes.ColorPickerButton as __colorpickerbutton__
import py4godot.classes.Tree as __tree__
import py4godot.classes.Label as __label__
import py4godot.classes.LineEdit as __lineedit__
import py4godot.classes.TextureButton as __texturebutton__
import py4godot.classes.RichTextLabel as __richtextlabel__
import py4godot.classes.TextureRect as __texturerect__
import py4godot.classes.Slider as __slider__
import py4godot.classes.CodeEdit as __codeedit__
import py4godot.classes.ColorPicker as __colorpicker__
import py4godot.classes.PopupMenu as __popupmenu__
import py4godot.classes.NinePatchRect as __ninepatchrect__
import py4godot.classes.ColorRect as __colorrect__
import py4godot.classes.GraphEdit as __graphedit__
import py4godot.classes.VFlowContainer as __vflowcontainer__
import py4godot.classes.EditorInspector as __editorinspector__
import py4godot.classes.EditorSpinSlider as __editorspinslider__
import py4godot.classes.VSeparator as __vseparator__
import py4godot.classes.PanelContainer as __panelcontainer__
import py4godot.classes.CenterContainer as __centercontainer__
import py4godot.classes.EditorProperty as __editorproperty__
import py4godot.classes.AspectRatioContainer as __aspectratiocontainer__
import py4godot.classes.CheckBox as __checkbox__
import py4godot.classes.Separator as __separator__
import py4godot.classes.TextureProgressBar as __textureprogressbar__
import py4godot.classes.Range as __range__
import py4godot.classes.VBoxContainer as __vboxcontainer__
import py4godot.classes.TabBar as __tabbar__
import py4godot.classes.HSplitContainer as __hsplitcontainer__
import py4godot.classes.ScrollBar as __scrollbar__
import py4godot.classes.CheckButton as __checkbutton__
import py4godot.classes.GridContainer as __gridcontainer__
import py4godot.classes.OpenXRInteractionProfileEditorBase as __openxrinteractionprofileeditorbase__
import py4godot.classes.EditorScriptPicker as __editorscriptpicker__
import py4godot.classes.SplitContainer as __splitcontainer__
import py4godot.classes.EditorResourcePicker as __editorresourcepicker__
import py4godot.classes.SpinBox as __spinbox__
import py4godot.classes.VideoStreamPlayer as __videostreamplayer__
import py4godot.classes.ReferenceRect as __referencerect__
import py4godot.classes.ScriptEditor as __scripteditor__
import py4godot.classes.ScriptEditorBase as __scripteditorbase__
import py4godot.classes.MenuButton as __menubutton__
import py4godot.classes.Container as __container__
import py4godot.classes.FlowContainer as __flowcontainer__
import py4godot.classes.ScrollContainer as __scrollcontainer__
import py4godot.classes.ItemList as __itemlist__
import py4godot.classes.EditorToaster as __editortoaster__
import py4godot.classes.SubViewportContainer as __subviewportcontainer__
import py4godot.classes.FileSystemDock as __filesystemdock__
import py4godot.classes.HSlider as __hslider__
import py4godot.classes.HScrollBar as __hscrollbar__
import py4godot.classes.BaseButton as __basebutton__
import py4godot.classes.VSlider as __vslider__
import py4godot.classes.OptionButton as __optionbutton__
import py4godot.classes.LinkButton as __linkbutton__



class MenuBar(__control__.Control):
  """
		A horizontal menu bar that creates a menu for each `PopupMenu` child. New items are created by adding `PopupMenu`s to this node. Item title is determined by `Window.title`, or node name if `Window.title` is empty. Item title can be overridden using `set_menu_title`.
	"""

  @staticmethod
  def constructor()->MenuBar:pass



  @staticmethod
  def cast(other:__object__.Object)->MenuBar:pass


  @property
  def flat(self)->bool:
    """"""
    pass
  @flat.setter
  def flat(self,  value:bool)->None:
    """"""
    pass
  @property
  def start_index(self)->int:
    """"""
    pass
  @start_index.setter
  def start_index(self,  value:int)->None:
    """"""
    pass
  @property
  def switch_on_hover(self)->bool:
    """"""
    pass
  @switch_on_hover.setter
  def switch_on_hover(self,  value:bool)->None:
    """"""
    pass
  @property
  def prefer_global_menu(self)->bool:
    """"""
    pass
  @prefer_global_menu.setter
  def prefer_global_menu(self,  value:bool)->None:
    """"""
    pass
  @property
  def text_direction(self)->int:
    """"""
    pass
  @text_direction.setter
  def text_direction(self,  value:int)->None:
    """"""
    pass
  @property
  def language(self)->str:
    """"""
    pass
  @language.setter
  def language(self,  value:str)->None:
    """"""
    pass
  def set_switch_on_hover(self, enable:bool)->None:
    """"""
    pass

  def is_switch_on_hover(self)->bool:
    """"""
    pass

  def set_disable_shortcuts(self, disabled:bool)->None:
    """
				If `true`, shortcuts are disabled and cannot be used to trigger the button.
			"""
    pass

  def set_prefer_global_menu(self, enabled:bool)->None:
    """"""
    pass

  def is_prefer_global_menu(self)->bool:
    """"""
    pass

  def is_native_menu(self)->bool:
    """
				Returns `true`, if system global menu is supported and used by this `MenuBar`.
			"""
    pass

  def get_menu_count(self)->int:
    """
				Returns number of menu items.
			"""
    pass

  def set_text_direction(self, direction:int )->None:
    """"""
    pass

  def get_text_direction(self)->int:
    """"""
    pass

  def set_language(self, language:str)->None:
    """"""
    pass

  def get_language(self)->str:
    """"""
    pass

  def set_flat(self, enabled:bool)->None:
    """"""
    pass

  def is_flat(self)->bool:
    """"""
    pass

  def set_start_index(self, enabled:int)->None:
    """"""
    pass

  def get_start_index(self)->int:
    """"""
    pass

  def set_menu_title(self, menu:int, title:str)->None:
    """
				Sets menu item title.
			"""
    pass

  def get_menu_title(self, menu:int)->str:
    """
				Returns menu item title.
			"""
    pass

  def set_menu_tooltip(self, menu:int, tooltip:str)->None:
    """
				Sets menu item tooltip.
			"""
    pass

  def get_menu_tooltip(self, menu:int)->str:
    """
				Returns menu item tooltip.
			"""
    pass

  def set_menu_disabled(self, menu:int, disabled:bool)->None:
    """
				If `true`, menu item is disabled.
			"""
    pass

  def is_menu_disabled(self, menu:int)->bool:
    """
				Returns `true`, if menu item is disabled.
			"""
    pass

  def set_menu_hidden(self, menu:int, hidden:bool)->None:
    """
				If `true`, menu item is hidden.
			"""
    pass

  def is_menu_hidden(self, menu:int)->bool:
    """
				Returns `true`, if menu item is hidden.
			"""
    pass

  def get_menu_popup(self, menu:int)->__popupmenu__.PopupMenu:
    """
				Returns `PopupMenu` associated with menu item.
			"""
    pass


