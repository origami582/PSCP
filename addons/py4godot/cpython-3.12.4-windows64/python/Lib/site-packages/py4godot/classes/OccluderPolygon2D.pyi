from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Resource as __resource__
import py4godot.classes.OccluderPolygon2D as __occluderpolygon2d__


class CullMode:
  CULL_DISABLED:int = 0
  CULL_CLOCKWISE:int = 1
  CULL_COUNTER_CLOCKWISE:int = 2


class OccluderPolygon2D(__resource__.Resource):
  """
		Editor facility that helps you draw a 2D polygon used as resource for `LightOccluder2D`.
	"""

  @staticmethod
  def constructor()->OccluderPolygon2D:pass



  @staticmethod
  def cast(other:__object__.Object)->OccluderPolygon2D:pass


  @property
  def closed(self)->bool:
    """"""
    pass
  @closed.setter
  def closed(self,  value:bool)->None:
    """"""
    pass
  @property
  def cull_mode(self)->int:
    """"""
    pass
  @cull_mode.setter
  def cull_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def polygon(self)->__core__.PackedVector2Array:
    """"""
    pass
  @polygon.setter
  def polygon(self,  value:__core__.PackedVector2Array)->None:
    """"""
    pass
  def set_closed(self, closed:bool)->None:
    """"""
    pass

  def is_closed(self)->bool:
    """"""
    pass

  def set_cull_mode(self, cull_mode:int )->None:
    """"""
    pass

  def get_cull_mode(self)->int:
    """"""
    pass

  def set_polygon(self, polygon:__core__.PackedVector2Array)->None:
    """"""
    pass

  def get_polygon(self)->__core__.PackedVector2Array:
    """"""
    pass


