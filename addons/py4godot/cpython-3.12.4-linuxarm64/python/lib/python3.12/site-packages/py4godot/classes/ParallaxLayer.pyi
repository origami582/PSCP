from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Node2D as __node2d__



class ParallaxLayer(__node2d__.Node2D):
  """
		A ParallaxLayer must be the child of a `ParallaxBackground` node. Each ParallaxLayer can be set to move at different speeds relative to the camera movement or the `ParallaxBackground.scroll_offset` value.
		This node's children will be affected by its scroll offset.
		**Note:** Any changes to this node's position and scale made after it enters the scene will be ignored.
	"""

  @staticmethod
  def constructor()->ParallaxLayer:pass



  @staticmethod
  def cast(other:__object__.Object)->ParallaxLayer:pass


  @property
  def motion_scale(self)->__core__.Vector2:
    """"""
    pass
  @motion_scale.setter
  def motion_scale(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def motion_offset(self)->__core__.Vector2:
    """"""
    pass
  @motion_offset.setter
  def motion_offset(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def motion_mirroring(self)->__core__.Vector2:
    """"""
    pass
  @motion_mirroring.setter
  def motion_mirroring(self,  value:__core__.Vector2)->None:
    """"""
    pass
  def set_motion_scale(self, scale:__core__.Vector2)->None:
    """"""
    pass

  def get_motion_scale(self)->__core__.Vector2:
    """"""
    pass

  def set_motion_offset(self, offset:__core__.Vector2)->None:
    """"""
    pass

  def get_motion_offset(self)->__core__.Vector2:
    """"""
    pass

  def set_mirroring(self, mirror:__core__.Vector2)->None:
    """"""
    pass

  def get_mirroring(self)->__core__.Vector2:
    """"""
    pass


