from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Shape3D as __shape3d__



class CapsuleShape3D(__shape3d__.Shape3D):
  """
		A 3D capsule shape, intended for use in physics. Usually used to provide a shape for a `CollisionShape3D`.
		**Performance:** `CapsuleShape3D` is fast to check collisions against. It is faster than `CylinderShape3D`, but slower than `SphereShape3D` and `BoxShape3D`.
	"""

  @staticmethod
  def constructor()->CapsuleShape3D:pass



  @staticmethod
  def cast(other:__object__.Object)->CapsuleShape3D:pass


  @property
  def radius(self)->float:
    """"""
    pass
  @radius.setter
  def radius(self,  value:float)->None:
    """"""
    pass
  @property
  def height(self)->float:
    """"""
    pass
  @height.setter
  def height(self,  value:float)->None:
    """"""
    pass
  def set_radius(self, radius:float)->None:
    """"""
    pass

  def get_radius(self)->float:
    """"""
    pass

  def set_height(self, height:float)->None:
    """"""
    pass

  def get_height(self)->float:
    """"""
    pass


