from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.PrimitiveMesh as __primitivemesh__



class PrismMesh(__primitivemesh__.PrimitiveMesh):
  """
		Class representing a prism-shaped `PrimitiveMesh`.
	"""

  @staticmethod
  def constructor()->PrismMesh:pass



  @staticmethod
  def cast(other:__object__.Object)->PrismMesh:pass


  @property
  def left_to_right(self)->float:
    """"""
    pass
  @left_to_right.setter
  def left_to_right(self,  value:float)->None:
    """"""
    pass
  @property
  def size(self)->__core__.Vector3:
    """"""
    pass
  @size.setter
  def size(self,  value:__core__.Vector3)->None:
    """"""
    pass
  @property
  def subdivide_width(self)->int:
    """"""
    pass
  @subdivide_width.setter
  def subdivide_width(self,  value:int)->None:
    """"""
    pass
  @property
  def subdivide_height(self)->int:
    """"""
    pass
  @subdivide_height.setter
  def subdivide_height(self,  value:int)->None:
    """"""
    pass
  @property
  def subdivide_depth(self)->int:
    """"""
    pass
  @subdivide_depth.setter
  def subdivide_depth(self,  value:int)->None:
    """"""
    pass
  def set_left_to_right(self, left_to_right:float)->None:
    """"""
    pass

  def get_left_to_right(self)->float:
    """"""
    pass

  def set_size(self, size:__core__.Vector3)->None:
    """"""
    pass

  def get_size(self)->__core__.Vector3:
    """"""
    pass

  def set_subdivide_width(self, segments:int)->None:
    """"""
    pass

  def get_subdivide_width(self)->int:
    """"""
    pass

  def set_subdivide_height(self, segments:int)->None:
    """"""
    pass

  def get_subdivide_height(self)->int:
    """"""
    pass

  def set_subdivide_depth(self, segments:int)->None:
    """"""
    pass

  def get_subdivide_depth(self)->int:
    """"""
    pass


