from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.EditorToaster as __editortoaster__
import py4godot.classes.HBoxContainer as __hboxcontainer__


class Severity:
  SEVERITY_INFO:int = 0
  SEVERITY_WARNING:int = 1
  SEVERITY_ERROR:int = 2


class EditorToaster(__hboxcontainer__.HBoxContainer):
  """
		This object manages the functionality and display of toast notifications within the editor, ensuring timely and informative alerts are presented to users.
		**Note:** This class shouldn't be instantiated directly. Instead, access the singleton using `EditorInterface.get_editor_toaster`.
	"""

  @staticmethod
  def constructor()->EditorToaster:pass



  @staticmethod
  def cast(other:__object__.Object)->EditorToaster:pass


  def push_toast(self, message:str, severity:int =0, tooltip:str= __core__.String.new0())->None:
    """
				Pushes a toast notification to the editor for display.
			"""
    pass


