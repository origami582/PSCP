from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Resource as __resource__
import py4godot.classes.OpenXRAction as __openxraction__


class ActionType:
  OPENXR_ACTION_BOOL:int = 0
  OPENXR_ACTION_FLOAT:int = 1
  OPENXR_ACTION_VECTOR2:int = 2
  OPENXR_ACTION_POSE:int = 3


class OpenXRAction(__resource__.Resource):
  """"""

  @staticmethod
  def constructor()->OpenXRAction:pass



  @staticmethod
  def cast(other:__object__.Object)->OpenXRAction:pass


  @property
  def localized_name(self)->str:
    """"""
    pass
  @localized_name.setter
  def localized_name(self,  value:str)->None:
    """"""
    pass
  @property
  def action_type(self)->int:
    """"""
    pass
  @action_type.setter
  def action_type(self,  value:int)->None:
    """"""
    pass
  @property
  def toplevel_paths(self)->__core__.PackedStringArray:
    """"""
    pass
  @toplevel_paths.setter
  def toplevel_paths(self,  value:__core__.PackedStringArray)->None:
    """"""
    pass
  def set_localized_name(self, localized_name:str)->None:
    """"""
    pass

  def get_localized_name(self)->str:
    """"""
    pass

  def set_action_type(self, action_type:int )->None:
    """"""
    pass

  def get_action_type(self)->int:
    """"""
    pass

  def set_toplevel_paths(self, toplevel_paths:__core__.PackedStringArray)->None:
    """"""
    pass

  def get_toplevel_paths(self)->__core__.PackedStringArray:
    """"""
    pass


