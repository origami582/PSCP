from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AudioEffect as __audioeffect__



class AudioEffectChorus(__audioeffect__.AudioEffect):
  """
		Adds a chorus audio effect. The effect applies a filter with voices to duplicate the audio source and manipulate it through the filter.
	"""

  @staticmethod
  def constructor()->AudioEffectChorus:pass



  @staticmethod
  def cast(other:__object__.Object)->AudioEffectChorus:pass


  @property
  def voice_count(self)->int:
    """"""
    pass
  @voice_count.setter
  def voice_count(self,  value:int)->None:
    """"""
    pass
  @property
  def dry(self)->float:
    """"""
    pass
  @dry.setter
  def dry(self,  value:float)->None:
    """"""
    pass
  @property
  def wet(self)->float:
    """"""
    pass
  @wet.setter
  def wet(self,  value:float)->None:
    """"""
    pass
  def set_voice_count(self, voices:int)->None:
    """"""
    pass

  def get_voice_count(self)->int:
    """"""
    pass

  def set_voice_delay_ms(self, voice_idx:int, delay_ms:float)->None:
    """
"""
    pass

  def get_voice_delay_ms(self, voice_idx:int)->float:
    """
"""
    pass

  def set_voice_rate_hz(self, voice_idx:int, rate_hz:float)->None:
    """
"""
    pass

  def get_voice_rate_hz(self, voice_idx:int)->float:
    """
"""
    pass

  def set_voice_depth_ms(self, voice_idx:int, depth_ms:float)->None:
    """
"""
    pass

  def get_voice_depth_ms(self, voice_idx:int)->float:
    """
"""
    pass

  def set_voice_level_db(self, voice_idx:int, level_db:float)->None:
    """
"""
    pass

  def get_voice_level_db(self, voice_idx:int)->float:
    """
"""
    pass

  def set_voice_cutoff_hz(self, voice_idx:int, cutoff_hz:float)->None:
    """
"""
    pass

  def get_voice_cutoff_hz(self, voice_idx:int)->float:
    """
"""
    pass

  def set_voice_pan(self, voice_idx:int, pan:float)->None:
    """
"""
    pass

  def get_voice_pan(self, voice_idx:int)->float:
    """
"""
    pass

  def set_wet(self, amount:float)->None:
    """"""
    pass

  def get_wet(self)->float:
    """"""
    pass

  def set_dry(self, amount:float)->None:
    """"""
    pass

  def get_dry(self)->float:
    """"""
    pass


