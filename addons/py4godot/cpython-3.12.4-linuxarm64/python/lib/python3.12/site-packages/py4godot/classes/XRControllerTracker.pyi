from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.XRPositionalTracker as __xrpositionaltracker__



class XRControllerTracker(__xrpositionaltracker__.XRPositionalTracker):
  """
		An instance of this object represents a controller that is tracked.
		As controllers are turned on and the `XRInterface` detects them, instances of this object are automatically added to this list of active tracking objects accessible through the `XRServer`.
		The `XRController3D` consumes objects of this type and should be used in your project.
	"""

  @staticmethod
  def constructor()->XRControllerTracker:pass



  @staticmethod
  def cast(other:__object__.Object)->XRControllerTracker:pass


