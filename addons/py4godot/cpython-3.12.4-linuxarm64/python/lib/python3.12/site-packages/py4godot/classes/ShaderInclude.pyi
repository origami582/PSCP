from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Resource as __resource__



class ShaderInclude(__resource__.Resource):
  """
		A shader include file, saved with the `.gdshaderinc` extension. This class allows you to define a custom shader snippet that can be included in a `Shader` by using the preprocessor directive `#include`, followed by the file path (e.g. `#include "res://shader_lib.gdshaderinc"`). The snippet doesn't have to be a valid shader on its own.
	"""

  @staticmethod
  def constructor()->ShaderInclude:pass



  @staticmethod
  def cast(other:__object__.Object)->ShaderInclude:pass


  @property
  def code(self)->str:
    """"""
    pass
  @code.setter
  def code(self,  value:str)->None:
    """"""
    pass
  def set_code(self, code:str)->None:
    """"""
    pass

  def get_code(self)->str:
    """"""
    pass


