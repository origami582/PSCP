from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.CharFXTransform as __charfxtransform__
import py4godot.classes.Resource as __resource__



class RichTextEffect(__resource__.Resource):
  """
		A custom effect for a `RichTextLabel`, which can be loaded in the `RichTextLabel` inspector or using `RichTextLabel.install_effect`.
		**Note:** For a `RichTextEffect` to be usable, a BBCode tag must be defined as a member variable called `bbcode` in the script.
		
		`gdscript skip-lint`
		# The RichTextEffect will be usable like this: ``example`Some text`/example``
		var bbcode = "example"
		```
		`csharp skip-lint`
		// The RichTextEffect will be usable like this: ``example`Some text`/example``
		string bbcode = "example";
		`/csharp`
		
		**Note:** As soon as a `RichTextLabel` contains at least one `RichTextEffect`, it will continuously process the effect unless the project is paused. This may impact battery life negatively.
	"""

  @staticmethod
  def constructor()->RichTextEffect:pass



  @staticmethod
  def cast(other:__object__.Object)->RichTextEffect:pass


  def _process_custom_fx(self, char_fx:__charfxtransform__.CharFXTransform)->bool:
    """
				Override this method to modify properties in `char_fx`. The method must return `true` if the character could be transformed successfully. If the method returns `false`, it will skip transformation to avoid displaying broken text.
			"""
    pass


