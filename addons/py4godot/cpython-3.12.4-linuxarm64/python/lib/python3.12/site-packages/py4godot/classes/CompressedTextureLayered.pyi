from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.TextureLayered as __texturelayered__



class CompressedTextureLayered(__texturelayered__.TextureLayered):
  """
		Base class for `CompressedTexture2DArray` and `CompressedTexture3D`. Cannot be used directly, but contains all the functions necessary for accessing the derived resource types. See also `TextureLayered`.
	"""

  @staticmethod
  def constructor()->CompressedTextureLayered:pass



  @staticmethod
  def cast(other:__object__.Object)->CompressedTextureLayered:pass


  @property
  def load_path(self)->str:
    """"""
    pass
  @load_path.setter
  def load_path(self,  value:str)->None:
    """"""
    pass
  def load(self, path:str)->int:
    """
				Loads the texture at `path`.
			"""
    pass

  def get_load_path(self)->str:
    """"""
    pass


