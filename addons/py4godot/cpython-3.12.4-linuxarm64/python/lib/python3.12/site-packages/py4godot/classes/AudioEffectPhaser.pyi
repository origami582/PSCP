from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.AudioEffect as __audioeffect__



class AudioEffectPhaser(__audioeffect__.AudioEffect):
  """
		Combines phase-shifted signals with the original signal. The movement of the phase-shifted signals is controlled using a low-frequency oscillator.
	"""

  @staticmethod
  def constructor()->AudioEffectPhaser:pass



  @staticmethod
  def cast(other:__object__.Object)->AudioEffectPhaser:pass


  @property
  def range_min_hz(self)->float:
    """"""
    pass
  @range_min_hz.setter
  def range_min_hz(self,  value:float)->None:
    """"""
    pass
  @property
  def range_max_hz(self)->float:
    """"""
    pass
  @range_max_hz.setter
  def range_max_hz(self,  value:float)->None:
    """"""
    pass
  @property
  def rate_hz(self)->float:
    """"""
    pass
  @rate_hz.setter
  def rate_hz(self,  value:float)->None:
    """"""
    pass
  @property
  def feedback(self)->float:
    """"""
    pass
  @feedback.setter
  def feedback(self,  value:float)->None:
    """"""
    pass
  @property
  def depth(self)->float:
    """"""
    pass
  @depth.setter
  def depth(self,  value:float)->None:
    """"""
    pass
  def set_range_min_hz(self, hz:float)->None:
    """"""
    pass

  def get_range_min_hz(self)->float:
    """"""
    pass

  def set_range_max_hz(self, hz:float)->None:
    """"""
    pass

  def get_range_max_hz(self)->float:
    """"""
    pass

  def set_rate_hz(self, hz:float)->None:
    """"""
    pass

  def get_rate_hz(self)->float:
    """"""
    pass

  def set_feedback(self, fbk:float)->None:
    """"""
    pass

  def get_feedback(self)->float:
    """"""
    pass

  def set_depth(self, depth:float)->None:
    """"""
    pass

  def get_depth(self)->float:
    """"""
    pass


