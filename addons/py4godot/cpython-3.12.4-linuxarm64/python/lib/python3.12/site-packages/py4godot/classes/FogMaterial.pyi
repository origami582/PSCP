from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.ImageTexture3D as __imagetexture3d__
import py4godot.classes.Texture3D as __texture3d__
import py4godot.classes.Material as __material__
import py4godot.classes.Texture3DRD as __texture3drd__
import py4godot.classes.NoiseTexture3D as __noisetexture3d__
import py4godot.classes.PlaceholderTexture3D as __placeholdertexture3d__
import py4godot.classes.CompressedTexture3D as __compressedtexture3d__



class FogMaterial(__material__.Material):
  """
		A `Material` resource that can be used by `FogVolume`s to draw volumetric effects.
		If you need more advanced effects, use a custom `url=$DOCS_URL/tutorials/shaders/shader_reference/fog_shader.html`fog shader`/url`.
	"""

  @staticmethod
  def constructor()->FogMaterial:pass



  @staticmethod
  def cast(other:__object__.Object)->FogMaterial:pass


  @property
  def density(self)->float:
    """"""
    pass
  @density.setter
  def density(self,  value:float)->None:
    """"""
    pass
  @property
  def albedo(self)->__core__.Color:
    """"""
    pass
  @albedo.setter
  def albedo(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def emission(self)->__core__.Color:
    """"""
    pass
  @emission.setter
  def emission(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def height_falloff(self)->float:
    """"""
    pass
  @height_falloff.setter
  def height_falloff(self,  value:float)->None:
    """"""
    pass
  @property
  def edge_fade(self)->float:
    """"""
    pass
  @edge_fade.setter
  def edge_fade(self,  value:float)->None:
    """"""
    pass
  @property
  def density_texture(self)->__noisetexture3d__.NoiseTexture3D|__placeholdertexture3d__.PlaceholderTexture3D|__imagetexture3d__.ImageTexture3D|__compressedtexture3d__.CompressedTexture3D|__texture3d__.Texture3D|__texture3drd__.Texture3DRD:
    """"""
    pass
  @density_texture.setter
  def density_texture(self,  value:__texture3d__.Texture3D)->None:
    """"""
    pass
  def set_density(self, density:float)->None:
    """"""
    pass

  def get_density(self)->float:
    """"""
    pass

  def set_albedo(self, albedo:__core__.Color)->None:
    """"""
    pass

  def get_albedo(self)->__core__.Color:
    """"""
    pass

  def set_emission(self, emission:__core__.Color)->None:
    """"""
    pass

  def get_emission(self)->__core__.Color:
    """"""
    pass

  def set_height_falloff(self, height_falloff:float)->None:
    """"""
    pass

  def get_height_falloff(self)->float:
    """"""
    pass

  def set_edge_fade(self, edge_fade:float)->None:
    """"""
    pass

  def get_edge_fade(self)->float:
    """"""
    pass

  def set_density_texture(self, density_texture:__texture3d__.Texture3D)->None:
    """"""
    pass

  def get_density_texture(self)->__noisetexture3d__.NoiseTexture3D|__placeholdertexture3d__.PlaceholderTexture3D|__imagetexture3d__.ImageTexture3D|__compressedtexture3d__.CompressedTexture3D|__texture3d__.Texture3D|__texture3drd__.Texture3DRD:
    """"""
    pass


