from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.ENetConnection as __enetconnection__
import py4godot.classes.MultiplayerPeer as __multiplayerpeer__
import py4godot.classes.ENetPacketPeer as __enetpacketpeer__



class ENetMultiplayerPeer(__multiplayerpeer__.MultiplayerPeer):
  """"""

  @staticmethod
  def constructor()->ENetMultiplayerPeer:pass



  @staticmethod
  def cast(other:__object__.Object)->ENetMultiplayerPeer:pass


  @property
  def host(self)->__enetconnection__.ENetConnection:
    """"""
    pass
  def create_server(self, port:int, max_clients:int=32, max_channels:int=0, in_bandwidth:int=0, out_bandwidth:int=0)->int:
    """"""
    pass

  def create_client(self, address:str, port:int, channel_count:int=0, in_bandwidth:int=0, out_bandwidth:int=0, local_port:int=0)->int:
    """"""
    pass

  def create_mesh(self, unique_id:int)->int:
    """"""
    pass

  def add_mesh_peer(self, peer_id:int, host:__enetconnection__.ENetConnection)->int:
    """"""
    pass

  def set_bind_ip(self, ip:str)->None:
    """"""
    pass

  def get_host(self)->__enetconnection__.ENetConnection:
    """"""
    pass

  def get_peer(self, id:int)->__enetpacketpeer__.ENetPacketPeer:
    """"""
    pass


