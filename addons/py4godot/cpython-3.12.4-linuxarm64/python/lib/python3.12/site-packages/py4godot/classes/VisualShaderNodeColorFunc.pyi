from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNodeColorFunc as __visualshadernodecolorfunc__
import py4godot.classes.VisualShaderNode as __visualshadernode__


class Function:
  FUNC_GRAYSCALE:int = 0
  FUNC_HSV2RGB:int = 1
  FUNC_RGB2HSV:int = 2
  FUNC_SEPIA:int = 3
  FUNC_LINEAR_TO_SRGB:int = 4
  FUNC_SRGB_TO_LINEAR:int = 5
  FUNC_MAX:int = 6


class VisualShaderNodeColorFunc(__visualshadernode__.VisualShaderNode):
  """
		Accept a `Color` to the input port and transform it according to `function`.
	"""

  @staticmethod
  def constructor()->VisualShaderNodeColorFunc:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeColorFunc:pass


  @property
  def function(self)->int:
    """"""
    pass
  @function.setter
  def function(self,  value:int)->None:
    """"""
    pass
  def set_function(self, func:int )->None:
    """"""
    pass

  def get_function(self)->int:
    """"""
    pass


