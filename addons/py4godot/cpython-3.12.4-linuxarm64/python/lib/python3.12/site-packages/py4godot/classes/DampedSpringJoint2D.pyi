from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Joint2D as __joint2d__



class DampedSpringJoint2D(__joint2d__.Joint2D):
  """
		A physics joint that connects two 2D physics bodies with a spring-like force. This behaves like a spring that always wants to stretch to a given length.
	"""

  @staticmethod
  def constructor()->DampedSpringJoint2D:pass



  @staticmethod
  def cast(other:__object__.Object)->DampedSpringJoint2D:pass


  @property
  def length(self)->float:
    """"""
    pass
  @length.setter
  def length(self,  value:float)->None:
    """"""
    pass
  @property
  def rest_length(self)->float:
    """"""
    pass
  @rest_length.setter
  def rest_length(self,  value:float)->None:
    """"""
    pass
  @property
  def stiffness(self)->float:
    """"""
    pass
  @stiffness.setter
  def stiffness(self,  value:float)->None:
    """"""
    pass
  @property
  def damping(self)->float:
    """"""
    pass
  @damping.setter
  def damping(self,  value:float)->None:
    """"""
    pass
  def set_length(self, length:float)->None:
    """"""
    pass

  def get_length(self)->float:
    """"""
    pass

  def set_rest_length(self, rest_length:float)->None:
    """"""
    pass

  def get_rest_length(self)->float:
    """"""
    pass

  def set_stiffness(self, stiffness:float)->None:
    """"""
    pass

  def get_stiffness(self)->float:
    """"""
    pass

  def set_damping(self, damping:float)->None:
    """"""
    pass

  def get_damping(self)->float:
    """"""
    pass


