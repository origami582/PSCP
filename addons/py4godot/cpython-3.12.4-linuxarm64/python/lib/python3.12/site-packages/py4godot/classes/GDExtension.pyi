from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Resource as __resource__
import py4godot.classes.GDExtension as __gdextension__


class InitializationLevel:
  INITIALIZATION_LEVEL_CORE:int = 0
  INITIALIZATION_LEVEL_SERVERS:int = 1
  INITIALIZATION_LEVEL_SCENE:int = 2
  INITIALIZATION_LEVEL_EDITOR:int = 3


class GDExtension(__resource__.Resource):
  """
		The `GDExtension` resource type represents a `url=https://en.wikipedia.org/wiki/Shared_library`shared library`/url` which can expand the functionality of the engine. The `GDExtensionManager` singleton is responsible for loading, reloading, and unloading `GDExtension` resources.
		**Note:** GDExtension itself is not a scripting language and has no relation to `GDScript` resources.
	"""

  @staticmethod
  def constructor()->GDExtension:pass



  @staticmethod
  def cast(other:__object__.Object)->GDExtension:pass


  def is_library_open(self)->bool:
    """
				Returns `true` if this extension's library has been opened.
			"""
    pass

  def get_minimum_library_initialization_level(self)->int:
    """
				Returns the lowest level required for this extension to be properly initialized (see the `enum InitializationLevel` enum).
			"""
    pass


