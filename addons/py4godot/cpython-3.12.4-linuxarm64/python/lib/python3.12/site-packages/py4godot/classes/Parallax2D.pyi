from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Node2D as __node2d__



class Parallax2D(__node2d__.Node2D):
  """
		A `Parallax2D` is used to create a parallax effect. It can move at a different speed relative to the camera movement using `scroll_scale`. This creates an illusion of depth in a 2D game. If manual scrolling is desired, the `Camera2D` position can be ignored with `ignore_camera_scroll`.
		**Note:** Any changes to this node's position made after it enters the scene tree will be overridden if `ignore_camera_scroll` is `false` or `screen_offset` is modified.
	"""

  @staticmethod
  def constructor()->Parallax2D:pass



  @staticmethod
  def cast(other:__object__.Object)->Parallax2D:pass


  @property
  def scroll_scale(self)->__core__.Vector2:
    """"""
    pass
  @scroll_scale.setter
  def scroll_scale(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def scroll_offset(self)->__core__.Vector2:
    """"""
    pass
  @scroll_offset.setter
  def scroll_offset(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def repeat_size(self)->__core__.Vector2:
    """"""
    pass
  @repeat_size.setter
  def repeat_size(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def autoscroll(self)->__core__.Vector2:
    """"""
    pass
  @autoscroll.setter
  def autoscroll(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def repeat_times(self)->int:
    """"""
    pass
  @repeat_times.setter
  def repeat_times(self,  value:int)->None:
    """"""
    pass
  @property
  def limit_begin(self)->__core__.Vector2:
    """"""
    pass
  @limit_begin.setter
  def limit_begin(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def limit_end(self)->__core__.Vector2:
    """"""
    pass
  @limit_end.setter
  def limit_end(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def follow_viewport(self)->bool:
    """"""
    pass
  @follow_viewport.setter
  def follow_viewport(self,  value:bool)->None:
    """"""
    pass
  @property
  def ignore_camera_scroll(self)->bool:
    """"""
    pass
  @ignore_camera_scroll.setter
  def ignore_camera_scroll(self,  value:bool)->None:
    """"""
    pass
  @property
  def screen_offset(self)->__core__.Vector2:
    """"""
    pass
  @screen_offset.setter
  def screen_offset(self,  value:__core__.Vector2)->None:
    """"""
    pass
  def set_scroll_scale(self, scale:__core__.Vector2)->None:
    """"""
    pass

  def get_scroll_scale(self)->__core__.Vector2:
    """"""
    pass

  def set_repeat_size(self, repeat_size:__core__.Vector2)->None:
    """"""
    pass

  def get_repeat_size(self)->__core__.Vector2:
    """"""
    pass

  def set_repeat_times(self, repeat_times:int)->None:
    """"""
    pass

  def get_repeat_times(self)->int:
    """"""
    pass

  def set_autoscroll(self, autoscroll:__core__.Vector2)->None:
    """"""
    pass

  def get_autoscroll(self)->__core__.Vector2:
    """"""
    pass

  def set_scroll_offset(self, offset:__core__.Vector2)->None:
    """"""
    pass

  def get_scroll_offset(self)->__core__.Vector2:
    """"""
    pass

  def set_screen_offset(self, offset:__core__.Vector2)->None:
    """"""
    pass

  def get_screen_offset(self)->__core__.Vector2:
    """"""
    pass

  def set_limit_begin(self, offset:__core__.Vector2)->None:
    """"""
    pass

  def get_limit_begin(self)->__core__.Vector2:
    """"""
    pass

  def set_limit_end(self, offset:__core__.Vector2)->None:
    """"""
    pass

  def get_limit_end(self)->__core__.Vector2:
    """"""
    pass

  def set_follow_viewport(self, follow:bool)->None:
    """"""
    pass

  def get_follow_viewport(self)->bool:
    """"""
    pass

  def set_ignore_camera_scroll(self, ignore:bool)->None:
    """"""
    pass

  def is_ignore_camera_scroll(self)->bool:
    """"""
    pass


