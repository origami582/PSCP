from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.D as __d__
import py4godot.classes.r as __r__
import py4godot.classes.R as __r__
import py4godot.classes.a as __a__
import py4godot.classes.PhysicsDirectSpaceState2D as __physicsdirectspacestate2d__
import py4godot.classes.I as __i__
import py4godot.classes.A as __a__
import py4godot.classes.d as __d__
import py4godot.classes.PhysicsDirectBodyState2D as __physicsdirectbodystate2d__
import py4godot.classes.p as __p__
import py4godot.classes.PhysicsDirectBodyState2DExtension as __physicsdirectbodystate2dextension__
import py4godot.classes.PhysicsDirectSpaceState2DExtension as __physicsdirectspacestate2dextension__
import py4godot.classes.y as __y__
import py4godot.classes.e as __e__
import py4godot.classes.T as __t__
import py4godot.classes.PhysicsServer2DExtension as __physicsserver2dextension__
import py4godot.classes.PhysicsServer2D as __physicsserver2d__



class PhysicsServer2DExtension(__physicsserver2d__.PhysicsServer2D):
  """
		This class extends `PhysicsServer2D` by providing additional virtual methods that can be overridden. When these methods are overridden, they will be called instead of the internal methods of the physics server.
		Intended for use with GDExtension to create custom implementations of `PhysicsServer2D`.
	"""

  @staticmethod
  def constructor()->PhysicsServer2DExtension:pass



  @staticmethod
  def cast(other:__object__.Object)->PhysicsServer2DExtension:pass


  def _world_boundary_shape_create(self)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.world_boundary_shape_create`.
			"""
    pass

  def _separation_ray_shape_create(self)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.separation_ray_shape_create`.
			"""
    pass

  def _segment_shape_create(self)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.segment_shape_create`.
			"""
    pass

  def _circle_shape_create(self)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.circle_shape_create`.
			"""
    pass

  def _rectangle_shape_create(self)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.rectangle_shape_create`.
			"""
    pass

  def _capsule_shape_create(self)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.capsule_shape_create`.
			"""
    pass

  def _convex_polygon_shape_create(self)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.convex_polygon_shape_create`.
			"""
    pass

  def _concave_polygon_shape_create(self)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.concave_polygon_shape_create`.
			"""
    pass

  def _shape_set_data(self, shape:__core__.RID, data:Any)->None:
    """
				Overridable version of `PhysicsServer2D.shape_set_data`.
			"""
    pass

  def _shape_set_custom_solver_bias(self, shape:__core__.RID, bias:float)->None:
    """
				Should set the custom solver bias for the given `shape`. It defines how much bodies are forced to separate on contact.
				Overridable version of `PhysicsServer2D`'s internal `shape_get_custom_solver_bias` method. Corresponds to `Shape2D.custom_solver_bias`.
			"""
    pass

  def _shape_get_type(self, shape:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.shape_get_type`.
			"""
    pass

  def _shape_get_data(self, shape:__core__.RID)->Any:
    """
				Overridable version of `PhysicsServer2D.shape_get_data`.
			"""
    pass

  def _shape_get_custom_solver_bias(self, shape:__core__.RID)->float:
    """
				Should return the custom solver bias of the given `shape`, which defines how much bodies are forced to separate on contact when this shape is involved.
				Overridable version of `PhysicsServer2D`'s internal `shape_get_custom_solver_bias` method. Corresponds to `Shape2D.custom_solver_bias`.
			"""
    pass

  def _space_create(self)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.space_create`.
			"""
    pass

  def _space_set_active(self, space:__core__.RID, active:bool)->None:
    """
				Overridable version of `PhysicsServer2D.space_set_active`.
			"""
    pass

  def _space_is_active(self, space:__core__.RID)->bool:
    """
				Overridable version of `PhysicsServer2D.space_is_active`.
			"""
    pass

  def _space_set_param(self, space:__core__.RID, param:int , value:float)->None:
    """
				Overridable version of `PhysicsServer2D.space_set_param`.
			"""
    pass

  def _space_get_param(self, space:__core__.RID, param:int )->float:
    """
				Overridable version of `PhysicsServer2D.space_get_param`.
			"""
    pass

  def _space_get_direct_state(self, space:__core__.RID)->__physicsdirectspacestate2d__.PhysicsDirectSpaceState2D|__physicsdirectspacestate2dextension__.PhysicsDirectSpaceState2DExtension:
    """
				Overridable version of `PhysicsServer2D.space_get_direct_state`.
			"""
    pass

  def _space_set_debug_contacts(self, space:__core__.RID, max_contacts:int)->None:
    """
				Used internally to allow the given `space` to store contact points, up to `max_contacts`. This is automatically set for the main `World2D`'s space when `SceneTree.debug_collisions_hint` is `true`, or by checking "Visible Collision Shapes" in the editor. Only works in debug builds.
				Overridable version of `PhysicsServer2D`'s internal `space_set_debug_contacts` method.
			"""
    pass

  def _space_get_contacts(self, space:__core__.RID)->__core__.PackedVector2Array:
    """
				Should return the positions of all contacts that have occurred during the last physics step in the given `space`. See also `_space_get_contact_count` and `_space_set_debug_contacts`.
				Overridable version of `PhysicsServer2D`'s internal `space_get_contacts` method.
			"""
    pass

  def _space_get_contact_count(self, space:__core__.RID)->int:
    """
				Should return how many contacts have occurred during the last physics step in the given `space`. See also `_space_get_contacts` and `_space_set_debug_contacts`.
				Overridable version of `PhysicsServer2D`'s internal `space_get_contact_count` method.
			"""
    pass

  def _area_create(self)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.area_create`.
			"""
    pass

  def _area_set_space(self, area:__core__.RID, space:__core__.RID)->None:
    """
				Overridable version of `PhysicsServer2D.area_set_space`.
			"""
    pass

  def _area_get_space(self, area:__core__.RID)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.area_get_space`.
			"""
    pass

  def _area_add_shape(self, area:__core__.RID, shape:__core__.RID, transform:__core__.Transform2D, disabled:bool)->None:
    """
				Overridable version of `PhysicsServer2D.area_add_shape`.
			"""
    pass

  def _area_set_shape(self, area:__core__.RID, shape_idx:int, shape:__core__.RID)->None:
    """
				Overridable version of `PhysicsServer2D.area_set_shape`.
			"""
    pass

  def _area_set_shape_transform(self, area:__core__.RID, shape_idx:int, transform:__core__.Transform2D)->None:
    """
				Overridable version of `PhysicsServer2D.area_set_shape_transform`.
			"""
    pass

  def _area_set_shape_disabled(self, area:__core__.RID, shape_idx:int, disabled:bool)->None:
    """
				Overridable version of `PhysicsServer2D.area_set_shape_disabled`.
			"""
    pass

  def _area_get_shape_count(self, area:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.area_get_shape_count`.
			"""
    pass

  def _area_get_shape(self, area:__core__.RID, shape_idx:int)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.area_get_shape`.
			"""
    pass

  def _area_get_shape_transform(self, area:__core__.RID, shape_idx:int)->__core__.Transform2D:
    """
				Overridable version of `PhysicsServer2D.area_get_shape_transform`.
			"""
    pass

  def _area_remove_shape(self, area:__core__.RID, shape_idx:int)->None:
    """
				Overridable version of `PhysicsServer2D.area_remove_shape`.
			"""
    pass

  def _area_clear_shapes(self, area:__core__.RID)->None:
    """
				Overridable version of `PhysicsServer2D.area_clear_shapes`.
			"""
    pass

  def _area_attach_object_instance_id(self, area:__core__.RID, id:int)->None:
    """
				Overridable version of `PhysicsServer2D.area_attach_object_instance_id`.
			"""
    pass

  def _area_get_object_instance_id(self, area:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.area_get_object_instance_id`.
			"""
    pass

  def _area_attach_canvas_instance_id(self, area:__core__.RID, id:int)->None:
    """
				Overridable version of `PhysicsServer2D.area_attach_canvas_instance_id`.
			"""
    pass

  def _area_get_canvas_instance_id(self, area:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.area_get_canvas_instance_id`.
			"""
    pass

  def _area_set_param(self, area:__core__.RID, param:int , value:Any)->None:
    """
				Overridable version of `PhysicsServer2D.area_set_param`.
			"""
    pass

  def _area_set_transform(self, area:__core__.RID, transform:__core__.Transform2D)->None:
    """
				Overridable version of `PhysicsServer2D.area_set_transform`.
			"""
    pass

  def _area_get_param(self, area:__core__.RID, param:int )->Any:
    """
				Overridable version of `PhysicsServer2D.area_get_param`.
			"""
    pass

  def _area_get_transform(self, area:__core__.RID)->__core__.Transform2D:
    """
				Overridable version of `PhysicsServer2D.area_get_transform`.
			"""
    pass

  def _area_set_collision_layer(self, area:__core__.RID, layer:int)->None:
    """
				Overridable version of `PhysicsServer2D.area_set_collision_layer`.
			"""
    pass

  def _area_get_collision_layer(self, area:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.area_get_collision_layer`.
			"""
    pass

  def _area_set_collision_mask(self, area:__core__.RID, mask:int)->None:
    """
				Overridable version of `PhysicsServer2D.area_set_collision_mask`.
			"""
    pass

  def _area_get_collision_mask(self, area:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.area_get_collision_mask`.
			"""
    pass

  def _area_set_monitorable(self, area:__core__.RID, monitorable:bool)->None:
    """
				Overridable version of `PhysicsServer2D.area_set_monitorable`.
			"""
    pass

  def _area_set_pickable(self, area:__core__.RID, pickable:bool)->None:
    """
				If set to `true`, allows the area with the given `RID` to detect mouse inputs when the mouse cursor is hovering on it.
				Overridable version of `PhysicsServer2D`'s internal `area_set_pickable` method. Corresponds to `CollisionObject2D.input_pickable`.
			"""
    pass

  def _area_set_monitor_callback(self, area:__core__.RID, callback:__core__.Callable)->None:
    """
				Overridable version of `PhysicsServer2D.area_set_monitor_callback`.
			"""
    pass

  def _area_set_area_monitor_callback(self, area:__core__.RID, callback:__core__.Callable)->None:
    """
				Overridable version of `PhysicsServer2D.area_set_area_monitor_callback`.
			"""
    pass

  def _body_create(self)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.body_create`.
			"""
    pass

  def _body_set_space(self, body:__core__.RID, space:__core__.RID)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_space`.
			"""
    pass

  def _body_get_space(self, body:__core__.RID)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.body_get_space`.
			"""
    pass

  def _body_set_mode(self, body:__core__.RID, mode:int )->None:
    """
				Overridable version of `PhysicsServer2D.body_set_mode`.
			"""
    pass

  def _body_get_mode(self, body:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.body_get_mode`.
			"""
    pass

  def _body_add_shape(self, body:__core__.RID, shape:__core__.RID, transform:__core__.Transform2D, disabled:bool)->None:
    """
				Overridable version of `PhysicsServer2D.body_add_shape`.
			"""
    pass

  def _body_set_shape(self, body:__core__.RID, shape_idx:int, shape:__core__.RID)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_shape`.
			"""
    pass

  def _body_set_shape_transform(self, body:__core__.RID, shape_idx:int, transform:__core__.Transform2D)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_shape_transform`.
			"""
    pass

  def _body_get_shape_count(self, body:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.body_get_shape_count`.
			"""
    pass

  def _body_get_shape(self, body:__core__.RID, shape_idx:int)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.body_get_shape`.
			"""
    pass

  def _body_get_shape_transform(self, body:__core__.RID, shape_idx:int)->__core__.Transform2D:
    """
				Overridable version of `PhysicsServer2D.body_get_shape_transform`.
			"""
    pass

  def _body_set_shape_disabled(self, body:__core__.RID, shape_idx:int, disabled:bool)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_shape_disabled`.
			"""
    pass

  def _body_set_shape_as_one_way_collision(self, body:__core__.RID, shape_idx:int, enable:bool, margin:float)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_shape_as_one_way_collision`.
			"""
    pass

  def _body_remove_shape(self, body:__core__.RID, shape_idx:int)->None:
    """
				Overridable version of `PhysicsServer2D.body_remove_shape`.
			"""
    pass

  def _body_clear_shapes(self, body:__core__.RID)->None:
    """
				Overridable version of `PhysicsServer2D.body_clear_shapes`.
			"""
    pass

  def _body_attach_object_instance_id(self, body:__core__.RID, id:int)->None:
    """
				Overridable version of `PhysicsServer2D.body_attach_object_instance_id`.
			"""
    pass

  def _body_get_object_instance_id(self, body:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.body_get_object_instance_id`.
			"""
    pass

  def _body_attach_canvas_instance_id(self, body:__core__.RID, id:int)->None:
    """
				Overridable version of `PhysicsServer2D.body_attach_canvas_instance_id`.
			"""
    pass

  def _body_get_canvas_instance_id(self, body:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.body_get_canvas_instance_id`.
			"""
    pass

  def _body_set_continuous_collision_detection_mode(self, body:__core__.RID, mode:int )->None:
    """
				Overridable version of `PhysicsServer2D.body_set_continuous_collision_detection_mode`.
			"""
    pass

  def _body_get_continuous_collision_detection_mode(self, body:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.body_get_continuous_collision_detection_mode`.
			"""
    pass

  def _body_set_collision_layer(self, body:__core__.RID, layer:int)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_collision_layer`.
			"""
    pass

  def _body_get_collision_layer(self, body:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.body_get_collision_layer`.
			"""
    pass

  def _body_set_collision_mask(self, body:__core__.RID, mask:int)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_collision_mask`.
			"""
    pass

  def _body_get_collision_mask(self, body:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.body_get_collision_mask`.
			"""
    pass

  def _body_set_collision_priority(self, body:__core__.RID, priority:float)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_collision_priority`.
			"""
    pass

  def _body_get_collision_priority(self, body:__core__.RID)->float:
    """
				Overridable version of `PhysicsServer2D.body_get_collision_priority`.
			"""
    pass

  def _body_set_param(self, body:__core__.RID, param:int , value:Any)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_param`.
			"""
    pass

  def _body_get_param(self, body:__core__.RID, param:int )->Any:
    """
				Overridable version of `PhysicsServer2D.body_get_param`.
			"""
    pass

  def _body_reset_mass_properties(self, body:__core__.RID)->None:
    """
				Overridable version of `PhysicsServer2D.body_reset_mass_properties`.
			"""
    pass

  def _body_set_state(self, body:__core__.RID, state:int , value:Any)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_state`.
			"""
    pass

  def _body_get_state(self, body:__core__.RID, state:int )->Any:
    """
				Overridable version of `PhysicsServer2D.body_get_state`.
			"""
    pass

  def _body_apply_central_impulse(self, body:__core__.RID, impulse:__core__.Vector2)->None:
    """
				Overridable version of `PhysicsServer2D.body_apply_central_impulse`.
			"""
    pass

  def _body_apply_torque_impulse(self, body:__core__.RID, impulse:float)->None:
    """
				Overridable version of `PhysicsServer2D.body_apply_torque_impulse`.
			"""
    pass

  def _body_apply_impulse(self, body:__core__.RID, impulse:__core__.Vector2, position:__core__.Vector2)->None:
    """
				Overridable version of `PhysicsServer2D.body_apply_impulse`.
			"""
    pass

  def _body_apply_central_force(self, body:__core__.RID, force:__core__.Vector2)->None:
    """
				Overridable version of `PhysicsServer2D.body_apply_central_force`.
			"""
    pass

  def _body_apply_force(self, body:__core__.RID, force:__core__.Vector2, position:__core__.Vector2)->None:
    """
				Overridable version of `PhysicsServer2D.body_apply_force`.
			"""
    pass

  def _body_apply_torque(self, body:__core__.RID, torque:float)->None:
    """
				Overridable version of `PhysicsServer2D.body_apply_torque`.
			"""
    pass

  def _body_add_constant_central_force(self, body:__core__.RID, force:__core__.Vector2)->None:
    """
				Overridable version of `PhysicsServer2D.body_add_constant_central_force`.
			"""
    pass

  def _body_add_constant_force(self, body:__core__.RID, force:__core__.Vector2, position:__core__.Vector2)->None:
    """
				Overridable version of `PhysicsServer2D.body_add_constant_force`.
			"""
    pass

  def _body_add_constant_torque(self, body:__core__.RID, torque:float)->None:
    """
				Overridable version of `PhysicsServer2D.body_add_constant_torque`.
			"""
    pass

  def _body_set_constant_force(self, body:__core__.RID, force:__core__.Vector2)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_constant_force`.
			"""
    pass

  def _body_get_constant_force(self, body:__core__.RID)->__core__.Vector2:
    """
				Overridable version of `PhysicsServer2D.body_get_constant_force`.
			"""
    pass

  def _body_set_constant_torque(self, body:__core__.RID, torque:float)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_constant_torque`.
			"""
    pass

  def _body_get_constant_torque(self, body:__core__.RID)->float:
    """
				Overridable version of `PhysicsServer2D.body_get_constant_torque`.
			"""
    pass

  def _body_set_axis_velocity(self, body:__core__.RID, axis_velocity:__core__.Vector2)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_axis_velocity`.
			"""
    pass

  def _body_add_collision_exception(self, body:__core__.RID, excepted_body:__core__.RID)->None:
    """
				Overridable version of `PhysicsServer2D.body_add_collision_exception`.
			"""
    pass

  def _body_remove_collision_exception(self, body:__core__.RID, excepted_body:__core__.RID)->None:
    """
				Overridable version of `PhysicsServer2D.body_remove_collision_exception`.
			"""
    pass

  def _body_get_collision_exceptions(self, body:__core__.RID)->typedarray::RID:
    """
				Returns the `RID`s of all bodies added as collision exceptions for the given `body`. See also `_body_add_collision_exception` and `_body_remove_collision_exception`.
				Overridable version of `PhysicsServer2D`'s internal `body_get_collision_exceptions` method. Corresponds to `PhysicsBody2D.get_collision_exceptions`.
			"""
    pass

  def _body_set_max_contacts_reported(self, body:__core__.RID, amount:int)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_max_contacts_reported`.
			"""
    pass

  def _body_get_max_contacts_reported(self, body:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.body_get_max_contacts_reported`.
			"""
    pass

  def _body_set_contacts_reported_depth_threshold(self, body:__core__.RID, threshold:float)->None:
    """
				Overridable version of `PhysicsServer2D`'s internal `body_set_contacts_reported_depth_threshold` method.
				**Note:** This method is currently unused by Godot's default physics implementation.
			"""
    pass

  def _body_get_contacts_reported_depth_threshold(self, body:__core__.RID)->float:
    """
				Overridable version of `PhysicsServer2D`'s internal `body_get_contacts_reported_depth_threshold` method.
				**Note:** This method is currently unused by Godot's default physics implementation.
			"""
    pass

  def _body_set_omit_force_integration(self, body:__core__.RID, enable:bool)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_omit_force_integration`.
			"""
    pass

  def _body_is_omitting_force_integration(self, body:__core__.RID)->bool:
    """
				Overridable version of `PhysicsServer2D.body_is_omitting_force_integration`.
			"""
    pass

  def _body_set_state_sync_callback(self, body:__core__.RID, callable:__core__.Callable)->None:
    """
				Assigns the `body` to call the given `callable` during the synchronization phase of the loop, before `_step` is called. See also `_sync`.
				Overridable version of `PhysicsServer2D.body_set_state_sync_callback`.
			"""
    pass

  def _body_set_force_integration_callback(self, body:__core__.RID, callable:__core__.Callable, userdata:Any)->None:
    """
				Overridable version of `PhysicsServer2D.body_set_force_integration_callback`.
			"""
    pass

  def _body_set_pickable(self, body:__core__.RID, pickable:bool)->None:
    """
				If set to `true`, allows the body with the given `RID` to detect mouse inputs when the mouse cursor is hovering on it.
				Overridable version of `PhysicsServer2D`'s internal `body_set_pickable` method. Corresponds to `CollisionObject2D.input_pickable`.
			"""
    pass

  def _body_get_direct_state(self, body:__core__.RID)->__physicsdirectbodystate2d__.PhysicsDirectBodyState2D|__physicsdirectbodystate2dextension__.PhysicsDirectBodyState2DExtension:
    """
				Overridable version of `PhysicsServer2D.body_get_direct_state`.
			"""
    pass

  def _joint_create(self)->__core__.RID:
    """
				Overridable version of `PhysicsServer2D.joint_create`.
			"""
    pass

  def _joint_clear(self, joint:__core__.RID)->None:
    """
				Overridable version of `PhysicsServer2D.joint_clear`.
			"""
    pass

  def _joint_set_param(self, joint:__core__.RID, param:int , value:float)->None:
    """
				Overridable version of `PhysicsServer2D.joint_set_param`.
			"""
    pass

  def _joint_get_param(self, joint:__core__.RID, param:int )->float:
    """
				Overridable version of `PhysicsServer2D.joint_get_param`.
			"""
    pass

  def _joint_disable_collisions_between_bodies(self, joint:__core__.RID, disable:bool)->None:
    """
				Overridable version of `PhysicsServer2D.joint_disable_collisions_between_bodies`.
			"""
    pass

  def _joint_is_disabled_collisions_between_bodies(self, joint:__core__.RID)->bool:
    """
				Overridable version of `PhysicsServer2D.joint_is_disabled_collisions_between_bodies`.
			"""
    pass

  def _joint_make_pin(self, joint:__core__.RID, anchor:__core__.Vector2, body_a:__core__.RID, body_b:__core__.RID)->None:
    """
				Overridable version of `PhysicsServer2D.joint_make_pin`.
			"""
    pass

  def _joint_make_groove(self, joint:__core__.RID, a_groove1:__core__.Vector2, a_groove2:__core__.Vector2, b_anchor:__core__.Vector2, body_a:__core__.RID, body_b:__core__.RID)->None:
    """
				Overridable version of `PhysicsServer2D.joint_make_groove`.
			"""
    pass

  def _joint_make_damped_spring(self, joint:__core__.RID, anchor_a:__core__.Vector2, anchor_b:__core__.Vector2, body_a:__core__.RID, body_b:__core__.RID)->None:
    """
				Overridable version of `PhysicsServer2D.joint_make_damped_spring`.
			"""
    pass

  def _pin_joint_set_flag(self, joint:__core__.RID, flag:int , enabled:bool)->None:
    """
				Overridable version of `PhysicsServer2D.pin_joint_set_flag`.
			"""
    pass

  def _pin_joint_get_flag(self, joint:__core__.RID, flag:int )->bool:
    """
				Overridable version of `PhysicsServer2D.pin_joint_get_flag`.
			"""
    pass

  def _pin_joint_set_param(self, joint:__core__.RID, param:int , value:float)->None:
    """
				Overridable version of `PhysicsServer2D.pin_joint_set_param`.
			"""
    pass

  def _pin_joint_get_param(self, joint:__core__.RID, param:int )->float:
    """
				Overridable version of `PhysicsServer2D.pin_joint_get_param`.
			"""
    pass

  def _damped_spring_joint_set_param(self, joint:__core__.RID, param:int , value:float)->None:
    """
				Overridable version of `PhysicsServer2D.damped_spring_joint_set_param`.
			"""
    pass

  def _damped_spring_joint_get_param(self, joint:__core__.RID, param:int )->float:
    """
				Overridable version of `PhysicsServer2D.damped_spring_joint_get_param`.
			"""
    pass

  def _joint_get_type(self, joint:__core__.RID)->int:
    """
				Overridable version of `PhysicsServer2D.joint_get_type`.
			"""
    pass

  def _free_rid(self, rid:__core__.RID)->None:
    """
				Overridable version of `PhysicsServer2D.free_rid`.
			"""
    pass

  def _set_active(self, active:bool)->None:
    """
				Overridable version of `PhysicsServer2D.set_active`.
			"""
    pass

  def _init(self)->None:
    """
				Called when the main loop is initialized and creates a new instance of this physics server. See also `MainLoop._initialize` and `_finish`.
				Overridable version of `PhysicsServer2D`'s internal `init` method.
			"""
    pass

  def _step(self, step:float)->None:
    """
				Called every physics step to process the physics simulation. `step` is the time elapsed since the last physics step, in seconds. It is usually the same as the value returned by `Node.get_physics_process_delta_time`.
				Overridable version of `PhysicsServer2D`'s internal `code skip-lint`step` method.
			"""
    pass

  def _sync(self)->None:
    """
				Called to indicate that the physics server is synchronizing and cannot access physics states if running on a separate thread. See also `_end_sync`.
				Overridable version of `PhysicsServer2D`'s internal `sync` method.
			"""
    pass

  def _flush_queries(self)->None:
    """
				Called every physics step before `_step` to process all remaining queries.
				Overridable version of `PhysicsServer2D`'s internal `flush_queries` method.
			"""
    pass

  def _end_sync(self)->None:
    """
				Called to indicate that the physics server has stopped synchronizing. It is in the loop's iteration/physics phase, and can access physics objects even if running on a separate thread. See also `_sync`.
				Overridable version of `PhysicsServer2D`'s internal `end_sync` method.
			"""
    pass

  def _finish(self)->None:
    """
				Called when the main loop finalizes to shut down the physics server. See also `MainLoop._finalize` and `_init`.
				Overridable version of `PhysicsServer2D`'s internal `finish` method.
			"""
    pass

  def _is_flushing_queries(self)->bool:
    """
				Overridable method that should return `true` when the physics server is processing queries. See also `_flush_queries`.
				Overridable version of `PhysicsServer2D`'s internal `is_flushing_queries` method.
			"""
    pass

  def _get_process_info(self, process_info:int )->int:
    """
				Overridable version of `PhysicsServer2D.get_process_info`.
			"""
    pass

  def body_test_motion_is_excluding_body(self, body:__core__.RID)->bool:
    """
				Returns `true` if the body with the given `RID` is being excluded from `_body_test_motion`. See also `Object.get_instance_id`.
			"""
    pass

  def body_test_motion_is_excluding_object(self, object:int)->bool:
    """
				Returns `true` if the object with the given instance ID is being excluded from `_body_test_motion`. See also `Object.get_instance_id`.
			"""
    pass


