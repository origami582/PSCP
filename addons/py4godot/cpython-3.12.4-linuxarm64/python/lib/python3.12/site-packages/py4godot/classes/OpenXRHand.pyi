from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.OpenXRHand as __openxrhand__
import py4godot.classes.Node3D as __node3d__


class Hands:
  HAND_LEFT:int = 0
  HAND_RIGHT:int = 1
  HAND_MAX:int = 2
class MotionRange:
  MOTION_RANGE_UNOBSTRUCTED:int = 0
  MOTION_RANGE_CONFORM_TO_CONTROLLER:int = 1
  MOTION_RANGE_MAX:int = 2
class SkeletonRig:
  SKELETON_RIG_OPENXR:int = 0
  SKELETON_RIG_HUMANOID:int = 1
  SKELETON_RIG_MAX:int = 2
class BoneUpdate:
  BONE_UPDATE_FULL:int = 0
  BONE_UPDATE_ROTATION_ONLY:int = 1
  BONE_UPDATE_MAX:int = 2


class OpenXRHand(__node3d__.Node3D):
  """"""

  @staticmethod
  def constructor()->OpenXRHand:pass



  @staticmethod
  def cast(other:__object__.Object)->OpenXRHand:pass


  @property
  def hand(self)->int:
    """"""
    pass
  @hand.setter
  def hand(self,  value:int)->None:
    """"""
    pass
  @property
  def motion_range(self)->int:
    """"""
    pass
  @motion_range.setter
  def motion_range(self,  value:int)->None:
    """"""
    pass
  @property
  def hand_skeleton(self)->__core__.NodePath:
    """"""
    pass
  @hand_skeleton.setter
  def hand_skeleton(self,  value:__core__.NodePath)->None:
    """"""
    pass
  @property
  def skeleton_rig(self)->int:
    """"""
    pass
  @skeleton_rig.setter
  def skeleton_rig(self,  value:int)->None:
    """"""
    pass
  @property
  def bone_update(self)->int:
    """"""
    pass
  @bone_update.setter
  def bone_update(self,  value:int)->None:
    """"""
    pass
  def set_hand(self, hand:int )->None:
    """"""
    pass

  def get_hand(self)->int:
    """"""
    pass

  def set_hand_skeleton(self, hand_skeleton:__core__.NodePath|str)->None:
    """"""
    pass

  def get_hand_skeleton(self)->__core__.NodePath:
    """"""
    pass

  def set_motion_range(self, motion_range:int )->None:
    """"""
    pass

  def get_motion_range(self)->int:
    """"""
    pass

  def set_skeleton_rig(self, skeleton_rig:int )->None:
    """"""
    pass

  def get_skeleton_rig(self)->int:
    """"""
    pass

  def set_bone_update(self, bone_update:int )->None:
    """"""
    pass

  def get_bone_update(self)->int:
    """"""
    pass


