from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNodeFloatFunc as __visualshadernodefloatfunc__
import py4godot.classes.VisualShaderNode as __visualshadernode__


class Function:
  FUNC_SIN:int = 0
  FUNC_COS:int = 1
  FUNC_TAN:int = 2
  FUNC_ASIN:int = 3
  FUNC_ACOS:int = 4
  FUNC_ATAN:int = 5
  FUNC_SINH:int = 6
  FUNC_COSH:int = 7
  FUNC_TANH:int = 8
  FUNC_LOG:int = 9
  FUNC_EXP:int = 10
  FUNC_SQRT:int = 11
  FUNC_ABS:int = 12
  FUNC_SIGN:int = 13
  FUNC_FLOOR:int = 14
  FUNC_ROUND:int = 15
  FUNC_CEIL:int = 16
  FUNC_FRACT:int = 17
  FUNC_SATURATE:int = 18
  FUNC_NEGATE:int = 19
  FUNC_ACOSH:int = 20
  FUNC_ASINH:int = 21
  FUNC_ATANH:int = 22
  FUNC_DEGREES:int = 23
  FUNC_EXP2:int = 24
  FUNC_INVERSE_SQRT:int = 25
  FUNC_LOG2:int = 26
  FUNC_RADIANS:int = 27
  FUNC_RECIPROCAL:int = 28
  FUNC_ROUNDEVEN:int = 29
  FUNC_TRUNC:int = 30
  FUNC_ONEMINUS:int = 31
  FUNC_MAX:int = 32


class VisualShaderNodeFloatFunc(__visualshadernode__.VisualShaderNode):
  """
		Accept a floating-point scalar (`x`) to the input port and transform it according to `function`.
	"""

  @staticmethod
  def constructor()->VisualShaderNodeFloatFunc:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeFloatFunc:pass


  @property
  def function(self)->int:
    """"""
    pass
  @function.setter
  def function(self,  value:int)->None:
    """"""
    pass
  def set_function(self, func:int )->None:
    """"""
    pass

  def get_function(self)->int:
    """"""
    pass


