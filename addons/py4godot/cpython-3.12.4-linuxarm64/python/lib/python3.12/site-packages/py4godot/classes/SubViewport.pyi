from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.SubViewport as __subviewport__
import py4godot.classes.Viewport as __viewport__


class ClearMode:
  CLEAR_MODE_ALWAYS:int = 0
  CLEAR_MODE_NEVER:int = 1
  CLEAR_MODE_ONCE:int = 2
class UpdateMode:
  UPDATE_DISABLED:int = 0
  UPDATE_ONCE:int = 1
  UPDATE_WHEN_VISIBLE:int = 2
  UPDATE_WHEN_PARENT_VISIBLE:int = 3
  UPDATE_ALWAYS:int = 4


class SubViewport(__viewport__.Viewport):
  """
		`SubViewport` Isolates a rectangular region of a scene to be displayed independently. This can be used, for example, to display UI in 3D space.
		**Note:** `SubViewport` is a `Viewport` that isn't a `Window`, i.e. it doesn't draw anything by itself. To display anything, `SubViewport` must have a non-zero size and be either put inside a `SubViewportContainer` or assigned to a `ViewportTexture`.
		**Note:** `InputEvent`s are not passed to a standalone `SubViewport` by default. To ensure `InputEvent` propagation, a `SubViewport` can be placed inside of a `SubViewportContainer`.
	"""

  @staticmethod
  def constructor()->SubViewport:pass



  @staticmethod
  def cast(other:__object__.Object)->SubViewport:pass


  @property
  def size(self)->__core__.Vector2i:
    """"""
    pass
  @size.setter
  def size(self,  value:__core__.Vector2i)->None:
    """"""
    pass
  @property
  def size_2d_override(self)->__core__.Vector2i:
    """"""
    pass
  @size_2d_override.setter
  def size_2d_override(self,  value:__core__.Vector2i)->None:
    """"""
    pass
  @property
  def size_2d_override_stretch(self)->bool:
    """"""
    pass
  @size_2d_override_stretch.setter
  def size_2d_override_stretch(self,  value:bool)->None:
    """"""
    pass
  @property
  def render_target_clear_mode(self)->int:
    """"""
    pass
  @render_target_clear_mode.setter
  def render_target_clear_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def render_target_update_mode(self)->int:
    """"""
    pass
  @render_target_update_mode.setter
  def render_target_update_mode(self,  value:int)->None:
    """"""
    pass
  def set_size(self, size:__core__.Vector2i)->None:
    """"""
    pass

  def get_size(self)->__core__.Vector2i:
    """"""
    pass

  def set_size_2d_override(self, size:__core__.Vector2i)->None:
    """"""
    pass

  def get_size_2d_override(self)->__core__.Vector2i:
    """"""
    pass

  def set_size_2d_override_stretch(self, enable:bool)->None:
    """"""
    pass

  def is_size_2d_override_stretch_enabled(self)->bool:
    """"""
    pass

  def set_update_mode(self, mode:int )->None:
    """"""
    pass

  def get_update_mode(self)->int:
    """"""
    pass

  def set_clear_mode(self, mode:int )->None:
    """"""
    pass

  def get_clear_mode(self)->int:
    """"""
    pass


