from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.InputEventMouse as __inputeventmouse__



class InputEventMouseButton(__inputeventmouse__.InputEventMouse):
  """
		Stores information about mouse click events. See `Node._input`.
		**Note:** On Wear OS devices, rotary input is mapped to `constant MOUSE_BUTTON_WHEEL_UP` and `constant MOUSE_BUTTON_WHEEL_DOWN`. This can be changed to `constant MOUSE_BUTTON_WHEEL_LEFT` and `constant MOUSE_BUTTON_WHEEL_RIGHT` with the `ProjectSettings.input_devices/pointing/android/rotary_input_scroll_axis` setting.
	"""

  @staticmethod
  def constructor()->InputEventMouseButton:pass



  @staticmethod
  def cast(other:__object__.Object)->InputEventMouseButton:pass


  @property
  def factor(self)->float:
    """"""
    pass
  @factor.setter
  def factor(self,  value:float)->None:
    """"""
    pass
  @property
  def button_index(self)->int:
    """"""
    pass
  @button_index.setter
  def button_index(self,  value:int)->None:
    """"""
    pass
  @property
  def canceled(self)->bool:
    """"""
    pass
  @canceled.setter
  def canceled(self,  value:bool)->None:
    """"""
    pass
  @property
  def pressed(self)->bool:
    """"""
    pass
  @pressed.setter
  def pressed(self,  value:bool)->None:
    """"""
    pass
  @property
  def double_click(self)->bool:
    """"""
    pass
  @double_click.setter
  def double_click(self,  value:bool)->None:
    """"""
    pass
  def set_factor(self, factor:float)->None:
    """"""
    pass

  def get_factor(self)->float:
    """"""
    pass

  def set_button_index(self, button_index:int )->None:
    """"""
    pass

  def get_button_index(self)->int:
    """"""
    pass

  def set_pressed(self, pressed:bool)->None:
    """"""
    pass

  def set_canceled(self, canceled:bool)->None:
    """"""
    pass

  def set_double_click(self, double_click:bool)->None:
    """"""
    pass

  def is_double_click(self)->bool:
    """"""
    pass


