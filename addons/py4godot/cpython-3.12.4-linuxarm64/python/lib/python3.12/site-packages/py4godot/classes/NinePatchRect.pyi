from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.NinePatchRect as __ninepatchrect__
import py4godot.classes.PlaceholderTexture2D as __placeholdertexture2d__
import py4godot.classes.Texture2DRD as __texture2drd__
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.NoiseTexture2D as __noisetexture2d__
import py4godot.classes.AnimatedTexture as __animatedtexture__
import py4godot.classes.ImageTexture as __imagetexture__
import py4godot.classes.GradientTexture1D as __gradienttexture1d__
import py4godot.classes.CanvasTexture as __canvastexture__
import py4godot.classes.PortableCompressedTexture2D as __portablecompressedtexture2d__
import py4godot.classes.ExternalTexture as __externaltexture__
import py4godot.classes.ViewportTexture as __viewporttexture__
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.MeshTexture as __meshtexture__
import py4godot.classes.CameraTexture as __cameratexture__
import py4godot.classes.CurveXYZTexture as __curvexyztexture__
import py4godot.classes.Control as __control__
import py4godot.classes.CompressedTexture2D as __compressedtexture2d__
import py4godot.classes.AtlasTexture as __atlastexture__
import py4godot.classes.Texture2D as __texture2d__


class AxisStretchMode:
  AXIS_STRETCH_MODE_STRETCH:int = 0
  AXIS_STRETCH_MODE_TILE:int = 1
  AXIS_STRETCH_MODE_TILE_FIT:int = 2


class NinePatchRect(__control__.Control):
  """
		Also known as 9-slice panels, `NinePatchRect` produces clean panels of any size based on a small texture. To do so, it splits the texture in a 3Ã—3 grid. When you scale the node, it tiles the texture's edges horizontally or vertically, tiles the center on both axes, and leaves the corners unchanged.
	"""
  texture_changed: BuiltinSignal

  @staticmethod
  def constructor()->NinePatchRect:pass



  @staticmethod
  def cast(other:__object__.Object)->NinePatchRect:pass


  @property
  def texture(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass
  @texture.setter
  def texture(self,  value:__texture2d__.Texture2D)->None:
    """"""
    pass
  @property
  def draw_center(self)->bool:
    """"""
    pass
  @draw_center.setter
  def draw_center(self,  value:bool)->None:
    """"""
    pass
  @property
  def region_rect(self)->__core__.Rect2:
    """"""
    pass
  @region_rect.setter
  def region_rect(self,  value:__core__.Rect2)->None:
    """"""
    pass
  @property
  def patch_margin_left(self)->int:
    """"""
    pass
  @patch_margin_left.setter
  def patch_margin_left(self,  value:int)->None:
    """"""
    pass
  @property
  def patch_margin_top(self)->int:
    """"""
    pass
  @patch_margin_top.setter
  def patch_margin_top(self,  value:int)->None:
    """"""
    pass
  @property
  def patch_margin_right(self)->int:
    """"""
    pass
  @patch_margin_right.setter
  def patch_margin_right(self,  value:int)->None:
    """"""
    pass
  @property
  def patch_margin_bottom(self)->int:
    """"""
    pass
  @patch_margin_bottom.setter
  def patch_margin_bottom(self,  value:int)->None:
    """"""
    pass
  @property
  def axis_stretch_horizontal(self)->int:
    """"""
    pass
  @axis_stretch_horizontal.setter
  def axis_stretch_horizontal(self,  value:int)->None:
    """"""
    pass
  @property
  def axis_stretch_vertical(self)->int:
    """"""
    pass
  @axis_stretch_vertical.setter
  def axis_stretch_vertical(self,  value:int)->None:
    """"""
    pass
  def set_texture(self, texture:__texture2d__.Texture2D)->None:
    """"""
    pass

  def get_texture(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass

  def set_patch_margin(self, margin:int , value:int)->None:
    """
				Sets the size of the margin on the specified `enum Side` to `value` pixels.
			"""
    pass

  def get_patch_margin(self, margin:int )->int:
    """
				Returns the size of the margin on the specified `enum Side`.
			"""
    pass

  def set_region_rect(self, rect:__core__.Rect2)->None:
    """"""
    pass

  def get_region_rect(self)->__core__.Rect2:
    """"""
    pass

  def set_draw_center(self, draw_center:bool)->None:
    """"""
    pass

  def is_draw_center_enabled(self)->bool:
    """"""
    pass

  def set_h_axis_stretch_mode(self, mode:int )->None:
    """"""
    pass

  def get_h_axis_stretch_mode(self)->int:
    """"""
    pass

  def set_v_axis_stretch_mode(self, mode:int )->None:
    """"""
    pass

  def get_v_axis_stretch_mode(self)->int:
    """"""
    pass


