from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RenderingServer as __renderingserver__
import py4godot.classes.RefCounted as __refcounted__



class RenderSceneBuffersConfiguration(__refcounted__.RefCounted):
  """
		This configuration object is created and populated by the render engine on a viewport change and used to (re)configure a `RenderSceneBuffers` object.
	"""

  @staticmethod
  def constructor()->RenderSceneBuffersConfiguration:pass



  @staticmethod
  def cast(other:__object__.Object)->RenderSceneBuffersConfiguration:pass


  @property
  def render_target(self)->__core__.RID:
    """"""
    pass
  @render_target.setter
  def render_target(self,  value:__core__.RID)->None:
    """"""
    pass
  @property
  def internal_size(self)->__core__.Vector2i:
    """"""
    pass
  @internal_size.setter
  def internal_size(self,  value:__core__.Vector2i)->None:
    """"""
    pass
  @property
  def target_size(self)->__core__.Vector2i:
    """"""
    pass
  @target_size.setter
  def target_size(self,  value:__core__.Vector2i)->None:
    """"""
    pass
  @property
  def view_count(self)->int:
    """"""
    pass
  @view_count.setter
  def view_count(self,  value:int)->None:
    """"""
    pass
  @property
  def scaling_3d_mode(self)->int:
    """"""
    pass
  @scaling_3d_mode.setter
  def scaling_3d_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def msaa_3d(self)->int:
    """"""
    pass
  @msaa_3d.setter
  def msaa_3d(self,  value:int)->None:
    """"""
    pass
  @property
  def screen_space_aa(self)->int:
    """"""
    pass
  @screen_space_aa.setter
  def screen_space_aa(self,  value:int)->None:
    """"""
    pass
  @property
  def fsr_sharpness(self)->bool:
    """"""
    pass
  @fsr_sharpness.setter
  def fsr_sharpness(self,  value:bool)->None:
    """"""
    pass
  @property
  def texture_mipmap_bias(self)->bool:
    """"""
    pass
  @texture_mipmap_bias.setter
  def texture_mipmap_bias(self,  value:bool)->None:
    """"""
    pass
  @property
  def anisotropic_filtering_level(self)->int:
    """"""
    pass
  @anisotropic_filtering_level.setter
  def anisotropic_filtering_level(self,  value:int)->None:
    """"""
    pass
  def get_render_target(self)->__core__.RID:
    """"""
    pass

  def set_render_target(self, render_target:__core__.RID)->None:
    """"""
    pass

  def get_internal_size(self)->__core__.Vector2i:
    """"""
    pass

  def set_internal_size(self, internal_size:__core__.Vector2i)->None:
    """"""
    pass

  def get_target_size(self)->__core__.Vector2i:
    """"""
    pass

  def set_target_size(self, target_size:__core__.Vector2i)->None:
    """"""
    pass

  def get_view_count(self)->int:
    """"""
    pass

  def set_view_count(self, view_count:int)->None:
    """"""
    pass

  def get_scaling_3d_mode(self)->int:
    """"""
    pass

  def set_scaling_3d_mode(self, scaling_3d_mode:int )->None:
    """"""
    pass

  def get_msaa_3d(self)->int:
    """"""
    pass

  def set_msaa_3d(self, msaa_3d:int )->None:
    """"""
    pass

  def get_screen_space_aa(self)->int:
    """"""
    pass

  def set_screen_space_aa(self, screen_space_aa:int )->None:
    """"""
    pass

  def get_fsr_sharpness(self)->float:
    """"""
    pass

  def set_fsr_sharpness(self, fsr_sharpness:float)->None:
    """"""
    pass

  def get_texture_mipmap_bias(self)->float:
    """"""
    pass

  def set_texture_mipmap_bias(self, texture_mipmap_bias:float)->None:
    """"""
    pass

  def get_anisotropic_filtering_level(self)->int:
    """"""
    pass

  def set_anisotropic_filtering_level(self, anisotropic_filtering_level:int )->None:
    """"""
    pass


