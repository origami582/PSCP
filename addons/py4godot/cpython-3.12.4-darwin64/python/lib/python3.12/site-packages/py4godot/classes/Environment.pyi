from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Sky as __sky__
import py4godot.classes.Texture2DRD as __texture2drd__
import py4godot.classes.CompressedCubemapArray as __compressedcubemaparray__
import py4godot.classes.ExternalTexture as __externaltexture__
import py4godot.classes.TextureLayeredRD as __texturelayeredrd__
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.NoiseTexture3D as __noisetexture3d__
import py4godot.classes.Cubemap as __cubemap__
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.AtlasTexture as __atlastexture__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.ImageTextureLayered as __imagetexturelayered__
import py4godot.classes.CompressedTexture2DArray as __compressedtexture2darray__
import py4godot.classes.PlaceholderCubemapArray as __placeholdercubemaparray__
import py4godot.classes.TextureLayered as __texturelayered__
import py4godot.classes.AnimatedTexture as __animatedtexture__
import py4godot.classes.ImageTexture as __imagetexture__
import py4godot.classes.GradientTexture1D as __gradienttexture1d__
import py4godot.classes.Texture2DArrayRD as __texture2darrayrd__
import py4godot.classes.Texture as __texture__
import py4godot.classes.CurveXYZTexture as __curvexyztexture__
import py4godot.classes.CubemapArray as __cubemaparray__
import py4godot.classes.CompressedCubemap as __compressedcubemap__
import py4godot.classes.ImageTexture3D as __imagetexture3d__
import py4godot.classes.PlaceholderTexture2D as __placeholdertexture2d__
import py4godot.classes.NoiseTexture2D as __noisetexture2d__
import py4godot.classes.PlaceholderCubemap as __placeholdercubemap__
import py4godot.classes.CompressedTextureLayered as __compressedtexturelayered__
import py4godot.classes.TextureCubemapRD as __texturecubemaprd__
import py4godot.classes.PortableCompressedTexture2D as __portablecompressedtexture2d__
import py4godot.classes.ViewportTexture as __viewporttexture__
import py4godot.classes.Texture3DRD as __texture3drd__
import py4godot.classes.MeshTexture as __meshtexture__
import py4godot.classes.CompressedTexture3D as __compressedtexture3d__
import py4godot.classes.PlaceholderTextureLayered as __placeholdertexturelayered__
import py4godot.classes.Environment as __environment__
import py4godot.classes.Resource as __resource__
import py4godot.classes.CanvasTexture as __canvastexture__
import py4godot.classes.Texture3D as __texture3d__
import py4godot.classes.PlaceholderTexture2DArray as __placeholdertexture2darray__
import py4godot.classes.PlaceholderTexture3D as __placeholdertexture3d__
import py4godot.classes.CameraTexture as __cameratexture__
import py4godot.classes.CompressedTexture2D as __compressedtexture2d__
import py4godot.classes.Texture2DArray as __texture2darray__
import py4godot.classes.TextureCubemapArrayRD as __texturecubemaparrayrd__


class BGMode:
  BG_CLEAR_COLOR:int = 0
  BG_COLOR:int = 1
  BG_SKY:int = 2
  BG_CANVAS:int = 3
  BG_KEEP:int = 4
  BG_CAMERA_FEED:int = 5
  BG_MAX:int = 6
class AmbientSource:
  AMBIENT_SOURCE_BG:int = 0
  AMBIENT_SOURCE_DISABLED:int = 1
  AMBIENT_SOURCE_COLOR:int = 2
  AMBIENT_SOURCE_SKY:int = 3
class ReflectionSource:
  REFLECTION_SOURCE_BG:int = 0
  REFLECTION_SOURCE_DISABLED:int = 1
  REFLECTION_SOURCE_SKY:int = 2
class ToneMapper:
  TONE_MAPPER_LINEAR:int = 0
  TONE_MAPPER_REINHARDT:int = 1
  TONE_MAPPER_FILMIC:int = 2
  TONE_MAPPER_ACES:int = 3
  TONE_MAPPER_AGX:int = 4
class GlowBlendMode:
  GLOW_BLEND_MODE_ADDITIVE:int = 0
  GLOW_BLEND_MODE_SCREEN:int = 1
  GLOW_BLEND_MODE_SOFTLIGHT:int = 2
  GLOW_BLEND_MODE_REPLACE:int = 3
  GLOW_BLEND_MODE_MIX:int = 4
class FogMode:
  FOG_MODE_EXPONENTIAL:int = 0
  FOG_MODE_DEPTH:int = 1
class SDFGIYScale:
  SDFGI_Y_SCALE_50_PERCENT:int = 0
  SDFGI_Y_SCALE_75_PERCENT:int = 1
  SDFGI_Y_SCALE_100_PERCENT:int = 2


class Environment(__resource__.Resource):
  """
		Resource for environment nodes (like `WorldEnvironment`) that define multiple environment operations (such as background `Sky` or `Color`, ambient light, fog, depth-of-field...). These parameters affect the final render of the scene. The order of these operations is:
		- Depth of Field Blur
		- Glow
		- Tonemap (Auto Exposure)
		- Adjustments
	"""

  @staticmethod
  def constructor()->Environment:pass



  @staticmethod
  def cast(other:__object__.Object)->Environment:pass


  @property
  def background_mode(self)->int:
    """"""
    pass
  @background_mode.setter
  def background_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def background_color(self)->__core__.Color:
    """"""
    pass
  @background_color.setter
  def background_color(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def background_energy_multiplier(self)->float:
    """"""
    pass
  @background_energy_multiplier.setter
  def background_energy_multiplier(self,  value:float)->None:
    """"""
    pass
  @property
  def background_intensity(self)->float:
    """"""
    pass
  @background_intensity.setter
  def background_intensity(self,  value:float)->None:
    """"""
    pass
  @property
  def background_canvas_max_layer(self)->int:
    """"""
    pass
  @background_canvas_max_layer.setter
  def background_canvas_max_layer(self,  value:int)->None:
    """"""
    pass
  @property
  def background_camera_feed_id(self)->int:
    """"""
    pass
  @background_camera_feed_id.setter
  def background_camera_feed_id(self,  value:int)->None:
    """"""
    pass
  @property
  def sky(self)->__sky__.Sky:
    """"""
    pass
  @sky.setter
  def sky(self,  value:__sky__.Sky)->None:
    """"""
    pass
  @property
  def sky_custom_fov(self)->float:
    """"""
    pass
  @sky_custom_fov.setter
  def sky_custom_fov(self,  value:float)->None:
    """"""
    pass
  @property
  def sky_rotation(self)->__core__.Vector3:
    """"""
    pass
  @sky_rotation.setter
  def sky_rotation(self,  value:__core__.Vector3)->None:
    """"""
    pass
  @property
  def ambient_light_source(self)->int:
    """"""
    pass
  @ambient_light_source.setter
  def ambient_light_source(self,  value:int)->None:
    """"""
    pass
  @property
  def ambient_light_color(self)->__core__.Color:
    """"""
    pass
  @ambient_light_color.setter
  def ambient_light_color(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def ambient_light_sky_contribution(self)->float:
    """"""
    pass
  @ambient_light_sky_contribution.setter
  def ambient_light_sky_contribution(self,  value:float)->None:
    """"""
    pass
  @property
  def ambient_light_energy(self)->float:
    """"""
    pass
  @ambient_light_energy.setter
  def ambient_light_energy(self,  value:float)->None:
    """"""
    pass
  @property
  def reflected_light_source(self)->int:
    """"""
    pass
  @reflected_light_source.setter
  def reflected_light_source(self,  value:int)->None:
    """"""
    pass
  @property
  def tonemap_mode(self)->int:
    """"""
    pass
  @tonemap_mode.setter
  def tonemap_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def tonemap_exposure(self)->float:
    """"""
    pass
  @tonemap_exposure.setter
  def tonemap_exposure(self,  value:float)->None:
    """"""
    pass
  @property
  def tonemap_white(self)->float:
    """"""
    pass
  @tonemap_white.setter
  def tonemap_white(self,  value:float)->None:
    """"""
    pass
  @property
  def ssr_enabled(self)->bool:
    """"""
    pass
  @ssr_enabled.setter
  def ssr_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def ssr_max_steps(self)->int:
    """"""
    pass
  @ssr_max_steps.setter
  def ssr_max_steps(self,  value:int)->None:
    """"""
    pass
  @property
  def ssr_fade_in(self)->float:
    """"""
    pass
  @ssr_fade_in.setter
  def ssr_fade_in(self,  value:float)->None:
    """"""
    pass
  @property
  def ssr_fade_out(self)->float:
    """"""
    pass
  @ssr_fade_out.setter
  def ssr_fade_out(self,  value:float)->None:
    """"""
    pass
  @property
  def ssr_depth_tolerance(self)->float:
    """"""
    pass
  @ssr_depth_tolerance.setter
  def ssr_depth_tolerance(self,  value:float)->None:
    """"""
    pass
  @property
  def ssao_enabled(self)->bool:
    """"""
    pass
  @ssao_enabled.setter
  def ssao_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def ssao_radius(self)->float:
    """"""
    pass
  @ssao_radius.setter
  def ssao_radius(self,  value:float)->None:
    """"""
    pass
  @property
  def ssao_intensity(self)->float:
    """"""
    pass
  @ssao_intensity.setter
  def ssao_intensity(self,  value:float)->None:
    """"""
    pass
  @property
  def ssao_power(self)->float:
    """"""
    pass
  @ssao_power.setter
  def ssao_power(self,  value:float)->None:
    """"""
    pass
  @property
  def ssao_detail(self)->float:
    """"""
    pass
  @ssao_detail.setter
  def ssao_detail(self,  value:float)->None:
    """"""
    pass
  @property
  def ssao_horizon(self)->float:
    """"""
    pass
  @ssao_horizon.setter
  def ssao_horizon(self,  value:float)->None:
    """"""
    pass
  @property
  def ssao_sharpness(self)->float:
    """"""
    pass
  @ssao_sharpness.setter
  def ssao_sharpness(self,  value:float)->None:
    """"""
    pass
  @property
  def ssao_light_affect(self)->float:
    """"""
    pass
  @ssao_light_affect.setter
  def ssao_light_affect(self,  value:float)->None:
    """"""
    pass
  @property
  def ssao_ao_channel_affect(self)->float:
    """"""
    pass
  @ssao_ao_channel_affect.setter
  def ssao_ao_channel_affect(self,  value:float)->None:
    """"""
    pass
  @property
  def ssil_enabled(self)->bool:
    """"""
    pass
  @ssil_enabled.setter
  def ssil_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def ssil_radius(self)->float:
    """"""
    pass
  @ssil_radius.setter
  def ssil_radius(self,  value:float)->None:
    """"""
    pass
  @property
  def ssil_intensity(self)->float:
    """"""
    pass
  @ssil_intensity.setter
  def ssil_intensity(self,  value:float)->None:
    """"""
    pass
  @property
  def ssil_sharpness(self)->float:
    """"""
    pass
  @ssil_sharpness.setter
  def ssil_sharpness(self,  value:float)->None:
    """"""
    pass
  @property
  def ssil_normal_rejection(self)->float:
    """"""
    pass
  @ssil_normal_rejection.setter
  def ssil_normal_rejection(self,  value:float)->None:
    """"""
    pass
  @property
  def sdfgi_enabled(self)->bool:
    """"""
    pass
  @sdfgi_enabled.setter
  def sdfgi_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def sdfgi_use_occlusion(self)->bool:
    """"""
    pass
  @sdfgi_use_occlusion.setter
  def sdfgi_use_occlusion(self,  value:bool)->None:
    """"""
    pass
  @property
  def sdfgi_read_sky_light(self)->bool:
    """"""
    pass
  @sdfgi_read_sky_light.setter
  def sdfgi_read_sky_light(self,  value:bool)->None:
    """"""
    pass
  @property
  def sdfgi_bounce_feedback(self)->float:
    """"""
    pass
  @sdfgi_bounce_feedback.setter
  def sdfgi_bounce_feedback(self,  value:float)->None:
    """"""
    pass
  @property
  def sdfgi_cascades(self)->int:
    """"""
    pass
  @sdfgi_cascades.setter
  def sdfgi_cascades(self,  value:int)->None:
    """"""
    pass
  @property
  def sdfgi_min_cell_size(self)->float:
    """"""
    pass
  @sdfgi_min_cell_size.setter
  def sdfgi_min_cell_size(self,  value:float)->None:
    """"""
    pass
  @property
  def sdfgi_cascade0_distance(self)->float:
    """"""
    pass
  @sdfgi_cascade0_distance.setter
  def sdfgi_cascade0_distance(self,  value:float)->None:
    """"""
    pass
  @property
  def sdfgi_max_distance(self)->float:
    """"""
    pass
  @sdfgi_max_distance.setter
  def sdfgi_max_distance(self,  value:float)->None:
    """"""
    pass
  @property
  def sdfgi_y_scale(self)->int:
    """"""
    pass
  @sdfgi_y_scale.setter
  def sdfgi_y_scale(self,  value:int)->None:
    """"""
    pass
  @property
  def sdfgi_energy(self)->float:
    """"""
    pass
  @sdfgi_energy.setter
  def sdfgi_energy(self,  value:float)->None:
    """"""
    pass
  @property
  def sdfgi_normal_bias(self)->float:
    """"""
    pass
  @sdfgi_normal_bias.setter
  def sdfgi_normal_bias(self,  value:float)->None:
    """"""
    pass
  @property
  def sdfgi_probe_bias(self)->float:
    """"""
    pass
  @sdfgi_probe_bias.setter
  def sdfgi_probe_bias(self,  value:float)->None:
    """"""
    pass
  @property
  def glow_enabled(self)->bool:
    """"""
    pass
  @glow_enabled.setter
  def glow_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def glow_normalized(self)->bool:
    """"""
    pass
  @glow_normalized.setter
  def glow_normalized(self,  value:bool)->None:
    """"""
    pass
  @property
  def glow_intensity(self)->float:
    """"""
    pass
  @glow_intensity.setter
  def glow_intensity(self,  value:float)->None:
    """"""
    pass
  @property
  def glow_strength(self)->float:
    """"""
    pass
  @glow_strength.setter
  def glow_strength(self,  value:float)->None:
    """"""
    pass
  @property
  def glow_mix(self)->float:
    """"""
    pass
  @glow_mix.setter
  def glow_mix(self,  value:float)->None:
    """"""
    pass
  @property
  def glow_bloom(self)->float:
    """"""
    pass
  @glow_bloom.setter
  def glow_bloom(self,  value:float)->None:
    """"""
    pass
  @property
  def glow_blend_mode(self)->int:
    """"""
    pass
  @glow_blend_mode.setter
  def glow_blend_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def glow_hdr_threshold(self)->float:
    """"""
    pass
  @glow_hdr_threshold.setter
  def glow_hdr_threshold(self,  value:float)->None:
    """"""
    pass
  @property
  def glow_hdr_scale(self)->float:
    """"""
    pass
  @glow_hdr_scale.setter
  def glow_hdr_scale(self,  value:float)->None:
    """"""
    pass
  @property
  def glow_hdr_luminance_cap(self)->float:
    """"""
    pass
  @glow_hdr_luminance_cap.setter
  def glow_hdr_luminance_cap(self,  value:float)->None:
    """"""
    pass
  @property
  def glow_map_strength(self)->float:
    """"""
    pass
  @glow_map_strength.setter
  def glow_map_strength(self,  value:float)->None:
    """"""
    pass
  @property
  def glow_map(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass
  @glow_map.setter
  def glow_map(self,  value:__texture2d__.Texture2D)->None:
    """"""
    pass
  @property
  def fog_enabled(self)->bool:
    """"""
    pass
  @fog_enabled.setter
  def fog_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def fog_mode(self)->int:
    """"""
    pass
  @fog_mode.setter
  def fog_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def fog_light_color(self)->__core__.Color:
    """"""
    pass
  @fog_light_color.setter
  def fog_light_color(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def fog_light_energy(self)->float:
    """"""
    pass
  @fog_light_energy.setter
  def fog_light_energy(self,  value:float)->None:
    """"""
    pass
  @property
  def fog_sun_scatter(self)->float:
    """"""
    pass
  @fog_sun_scatter.setter
  def fog_sun_scatter(self,  value:float)->None:
    """"""
    pass
  @property
  def fog_density(self)->float:
    """"""
    pass
  @fog_density.setter
  def fog_density(self,  value:float)->None:
    """"""
    pass
  @property
  def fog_aerial_perspective(self)->float:
    """"""
    pass
  @fog_aerial_perspective.setter
  def fog_aerial_perspective(self,  value:float)->None:
    """"""
    pass
  @property
  def fog_sky_affect(self)->float:
    """"""
    pass
  @fog_sky_affect.setter
  def fog_sky_affect(self,  value:float)->None:
    """"""
    pass
  @property
  def fog_height(self)->float:
    """"""
    pass
  @fog_height.setter
  def fog_height(self,  value:float)->None:
    """"""
    pass
  @property
  def fog_height_density(self)->float:
    """"""
    pass
  @fog_height_density.setter
  def fog_height_density(self,  value:float)->None:
    """"""
    pass
  @property
  def fog_depth_curve(self)->float:
    """"""
    pass
  @fog_depth_curve.setter
  def fog_depth_curve(self,  value:float)->None:
    """"""
    pass
  @property
  def fog_depth_begin(self)->float:
    """"""
    pass
  @fog_depth_begin.setter
  def fog_depth_begin(self,  value:float)->None:
    """"""
    pass
  @property
  def fog_depth_end(self)->float:
    """"""
    pass
  @fog_depth_end.setter
  def fog_depth_end(self,  value:float)->None:
    """"""
    pass
  @property
  def volumetric_fog_enabled(self)->bool:
    """"""
    pass
  @volumetric_fog_enabled.setter
  def volumetric_fog_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def volumetric_fog_density(self)->float:
    """"""
    pass
  @volumetric_fog_density.setter
  def volumetric_fog_density(self,  value:float)->None:
    """"""
    pass
  @property
  def volumetric_fog_albedo(self)->__core__.Color:
    """"""
    pass
  @volumetric_fog_albedo.setter
  def volumetric_fog_albedo(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def volumetric_fog_emission(self)->__core__.Color:
    """"""
    pass
  @volumetric_fog_emission.setter
  def volumetric_fog_emission(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def volumetric_fog_emission_energy(self)->float:
    """"""
    pass
  @volumetric_fog_emission_energy.setter
  def volumetric_fog_emission_energy(self,  value:float)->None:
    """"""
    pass
  @property
  def volumetric_fog_gi_inject(self)->float:
    """"""
    pass
  @volumetric_fog_gi_inject.setter
  def volumetric_fog_gi_inject(self,  value:float)->None:
    """"""
    pass
  @property
  def volumetric_fog_anisotropy(self)->float:
    """"""
    pass
  @volumetric_fog_anisotropy.setter
  def volumetric_fog_anisotropy(self,  value:float)->None:
    """"""
    pass
  @property
  def volumetric_fog_length(self)->float:
    """"""
    pass
  @volumetric_fog_length.setter
  def volumetric_fog_length(self,  value:float)->None:
    """"""
    pass
  @property
  def volumetric_fog_detail_spread(self)->float:
    """"""
    pass
  @volumetric_fog_detail_spread.setter
  def volumetric_fog_detail_spread(self,  value:float)->None:
    """"""
    pass
  @property
  def volumetric_fog_ambient_inject(self)->float:
    """"""
    pass
  @volumetric_fog_ambient_inject.setter
  def volumetric_fog_ambient_inject(self,  value:float)->None:
    """"""
    pass
  @property
  def volumetric_fog_sky_affect(self)->float:
    """"""
    pass
  @volumetric_fog_sky_affect.setter
  def volumetric_fog_sky_affect(self,  value:float)->None:
    """"""
    pass
  @property
  def volumetric_fog_temporal_reprojection_enabled(self)->bool:
    """"""
    pass
  @volumetric_fog_temporal_reprojection_enabled.setter
  def volumetric_fog_temporal_reprojection_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def volumetric_fog_temporal_reprojection_amount(self)->float:
    """"""
    pass
  @volumetric_fog_temporal_reprojection_amount.setter
  def volumetric_fog_temporal_reprojection_amount(self,  value:float)->None:
    """"""
    pass
  @property
  def adjustment_enabled(self)->bool:
    """"""
    pass
  @adjustment_enabled.setter
  def adjustment_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def adjustment_brightness(self)->float:
    """"""
    pass
  @adjustment_brightness.setter
  def adjustment_brightness(self,  value:float)->None:
    """"""
    pass
  @property
  def adjustment_contrast(self)->float:
    """"""
    pass
  @adjustment_contrast.setter
  def adjustment_contrast(self,  value:float)->None:
    """"""
    pass
  @property
  def adjustment_saturation(self)->float:
    """"""
    pass
  @adjustment_saturation.setter
  def adjustment_saturation(self,  value:float)->None:
    """"""
    pass
  @property
  def adjustment_color_correction(self)->Texture2D,Texture3D:
    """"""
    pass
  @adjustment_color_correction.setter
  def adjustment_color_correction(self,  value:__texture2d__.Texture2D)->None:
    """"""
    pass
  def set_background(self, mode:int )->None:
    """"""
    pass

  def get_background(self)->int:
    """"""
    pass

  def set_sky(self, sky:__sky__.Sky)->None:
    """"""
    pass

  def get_sky(self)->__sky__.Sky:
    """"""
    pass

  def set_sky_custom_fov(self, scale:float)->None:
    """"""
    pass

  def get_sky_custom_fov(self)->float:
    """"""
    pass

  def set_sky_rotation(self, euler_radians:__core__.Vector3)->None:
    """"""
    pass

  def get_sky_rotation(self)->__core__.Vector3:
    """"""
    pass

  def set_bg_color(self, color:__core__.Color)->None:
    """"""
    pass

  def get_bg_color(self)->__core__.Color:
    """"""
    pass

  def set_bg_energy_multiplier(self, energy:float)->None:
    """"""
    pass

  def get_bg_energy_multiplier(self)->float:
    """"""
    pass

  def set_bg_intensity(self, energy:float)->None:
    """"""
    pass

  def get_bg_intensity(self)->float:
    """"""
    pass

  def set_canvas_max_layer(self, layer:int)->None:
    """"""
    pass

  def get_canvas_max_layer(self)->int:
    """"""
    pass

  def set_camera_feed_id(self, id:int)->None:
    """"""
    pass

  def get_camera_feed_id(self)->int:
    """"""
    pass

  def set_ambient_light_color(self, color:__core__.Color)->None:
    """"""
    pass

  def get_ambient_light_color(self)->__core__.Color:
    """"""
    pass

  def set_ambient_source(self, source:int )->None:
    """"""
    pass

  def get_ambient_source(self)->int:
    """"""
    pass

  def set_ambient_light_energy(self, energy:float)->None:
    """"""
    pass

  def get_ambient_light_energy(self)->float:
    """"""
    pass

  def set_ambient_light_sky_contribution(self, ratio:float)->None:
    """"""
    pass

  def get_ambient_light_sky_contribution(self)->float:
    """"""
    pass

  def set_reflection_source(self, source:int )->None:
    """"""
    pass

  def get_reflection_source(self)->int:
    """"""
    pass

  def set_tonemapper(self, mode:int )->None:
    """"""
    pass

  def get_tonemapper(self)->int:
    """"""
    pass

  def set_tonemap_exposure(self, exposure:float)->None:
    """"""
    pass

  def get_tonemap_exposure(self)->float:
    """"""
    pass

  def set_tonemap_white(self, white:float)->None:
    """"""
    pass

  def get_tonemap_white(self)->float:
    """"""
    pass

  def set_ssr_enabled(self, enabled:bool)->None:
    """"""
    pass

  def is_ssr_enabled(self)->bool:
    """"""
    pass

  def set_ssr_max_steps(self, max_steps:int)->None:
    """"""
    pass

  def get_ssr_max_steps(self)->int:
    """"""
    pass

  def set_ssr_fade_in(self, fade_in:float)->None:
    """"""
    pass

  def get_ssr_fade_in(self)->float:
    """"""
    pass

  def set_ssr_fade_out(self, fade_out:float)->None:
    """"""
    pass

  def get_ssr_fade_out(self)->float:
    """"""
    pass

  def set_ssr_depth_tolerance(self, depth_tolerance:float)->None:
    """"""
    pass

  def get_ssr_depth_tolerance(self)->float:
    """"""
    pass

  def set_ssao_enabled(self, enabled:bool)->None:
    """"""
    pass

  def is_ssao_enabled(self)->bool:
    """"""
    pass

  def set_ssao_radius(self, radius:float)->None:
    """"""
    pass

  def get_ssao_radius(self)->float:
    """"""
    pass

  def set_ssao_intensity(self, intensity:float)->None:
    """"""
    pass

  def get_ssao_intensity(self)->float:
    """"""
    pass

  def set_ssao_power(self, power:float)->None:
    """"""
    pass

  def get_ssao_power(self)->float:
    """"""
    pass

  def set_ssao_detail(self, detail:float)->None:
    """"""
    pass

  def get_ssao_detail(self)->float:
    """"""
    pass

  def set_ssao_horizon(self, horizon:float)->None:
    """"""
    pass

  def get_ssao_horizon(self)->float:
    """"""
    pass

  def set_ssao_sharpness(self, sharpness:float)->None:
    """"""
    pass

  def get_ssao_sharpness(self)->float:
    """"""
    pass

  def set_ssao_direct_light_affect(self, amount:float)->None:
    """"""
    pass

  def get_ssao_direct_light_affect(self)->float:
    """"""
    pass

  def set_ssao_ao_channel_affect(self, amount:float)->None:
    """"""
    pass

  def get_ssao_ao_channel_affect(self)->float:
    """"""
    pass

  def set_ssil_enabled(self, enabled:bool)->None:
    """"""
    pass

  def is_ssil_enabled(self)->bool:
    """"""
    pass

  def set_ssil_radius(self, radius:float)->None:
    """"""
    pass

  def get_ssil_radius(self)->float:
    """"""
    pass

  def set_ssil_intensity(self, intensity:float)->None:
    """"""
    pass

  def get_ssil_intensity(self)->float:
    """"""
    pass

  def set_ssil_sharpness(self, sharpness:float)->None:
    """"""
    pass

  def get_ssil_sharpness(self)->float:
    """"""
    pass

  def set_ssil_normal_rejection(self, normal_rejection:float)->None:
    """"""
    pass

  def get_ssil_normal_rejection(self)->float:
    """"""
    pass

  def set_sdfgi_enabled(self, enabled:bool)->None:
    """"""
    pass

  def is_sdfgi_enabled(self)->bool:
    """"""
    pass

  def set_sdfgi_cascades(self, amount:int)->None:
    """"""
    pass

  def get_sdfgi_cascades(self)->int:
    """"""
    pass

  def set_sdfgi_min_cell_size(self, size:float)->None:
    """"""
    pass

  def get_sdfgi_min_cell_size(self)->float:
    """"""
    pass

  def set_sdfgi_max_distance(self, distance:float)->None:
    """"""
    pass

  def get_sdfgi_max_distance(self)->float:
    """"""
    pass

  def set_sdfgi_cascade0_distance(self, distance:float)->None:
    """"""
    pass

  def get_sdfgi_cascade0_distance(self)->float:
    """"""
    pass

  def set_sdfgi_y_scale(self, scale:int )->None:
    """"""
    pass

  def get_sdfgi_y_scale(self)->int:
    """"""
    pass

  def set_sdfgi_use_occlusion(self, enable:bool)->None:
    """"""
    pass

  def is_sdfgi_using_occlusion(self)->bool:
    """"""
    pass

  def set_sdfgi_bounce_feedback(self, amount:float)->None:
    """"""
    pass

  def get_sdfgi_bounce_feedback(self)->float:
    """"""
    pass

  def set_sdfgi_read_sky_light(self, enable:bool)->None:
    """"""
    pass

  def is_sdfgi_reading_sky_light(self)->bool:
    """"""
    pass

  def set_sdfgi_energy(self, amount:float)->None:
    """"""
    pass

  def get_sdfgi_energy(self)->float:
    """"""
    pass

  def set_sdfgi_normal_bias(self, bias:float)->None:
    """"""
    pass

  def get_sdfgi_normal_bias(self)->float:
    """"""
    pass

  def set_sdfgi_probe_bias(self, bias:float)->None:
    """"""
    pass

  def get_sdfgi_probe_bias(self)->float:
    """"""
    pass

  def set_glow_enabled(self, enabled:bool)->None:
    """"""
    pass

  def is_glow_enabled(self)->bool:
    """"""
    pass

  def set_glow_level(self, idx:int, intensity:float)->None:
    """
				Sets the intensity of the glow level `idx`. A value above `0.0` enables the level. Each level relies on the previous level. This means that enabling higher glow levels will slow down the glow effect rendering, even if previous levels aren't enabled.
			"""
    pass

  def get_glow_level(self, idx:int)->float:
    """
				Returns the intensity of the glow level `idx`.
			"""
    pass

  def set_glow_normalized(self, normalize:bool)->None:
    """"""
    pass

  def is_glow_normalized(self)->bool:
    """"""
    pass

  def set_glow_intensity(self, intensity:float)->None:
    """"""
    pass

  def get_glow_intensity(self)->float:
    """"""
    pass

  def set_glow_strength(self, strength:float)->None:
    """"""
    pass

  def get_glow_strength(self)->float:
    """"""
    pass

  def set_glow_mix(self, mix:float)->None:
    """"""
    pass

  def get_glow_mix(self)->float:
    """"""
    pass

  def set_glow_bloom(self, amount:float)->None:
    """"""
    pass

  def get_glow_bloom(self)->float:
    """"""
    pass

  def set_glow_blend_mode(self, mode:int )->None:
    """"""
    pass

  def get_glow_blend_mode(self)->int:
    """"""
    pass

  def set_glow_hdr_bleed_threshold(self, threshold:float)->None:
    """"""
    pass

  def get_glow_hdr_bleed_threshold(self)->float:
    """"""
    pass

  def set_glow_hdr_bleed_scale(self, scale:float)->None:
    """"""
    pass

  def get_glow_hdr_bleed_scale(self)->float:
    """"""
    pass

  def set_glow_hdr_luminance_cap(self, amount:float)->None:
    """"""
    pass

  def get_glow_hdr_luminance_cap(self)->float:
    """"""
    pass

  def set_glow_map_strength(self, strength:float)->None:
    """"""
    pass

  def get_glow_map_strength(self)->float:
    """"""
    pass

  def set_glow_map(self, mode:__texture__.Texture)->None:
    """"""
    pass

  def get_glow_map(self)->__imagetexture3d__.ImageTexture3D|__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__noisetexture2d__.NoiseTexture2D|__placeholdercubemap__.PlaceholderCubemap|__compressedtexturelayered__.CompressedTextureLayered|__texturecubemaprd__.TextureCubemapRD|__compressedcubemaparray__.CompressedCubemapArray|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__texturelayeredrd__.TextureLayeredRD|__texture3drd__.Texture3DRD|__gradienttexture2d__.GradientTexture2D|__noisetexture3d__.NoiseTexture3D|__cubemap__.Cubemap|__meshtexture__.MeshTexture|__curvetexture__.CurveTexture|__atlastexture__.AtlasTexture|__texture2d__.Texture2D|__imagetexturelayered__.ImageTextureLayered|__compressedtexture2darray__.CompressedTexture2DArray|__placeholdercubemaparray__.PlaceholderCubemapArray|__texturelayered__.TextureLayered|__animatedtexture__.AnimatedTexture|__compressedtexture3d__.CompressedTexture3D|__placeholdertexturelayered__.PlaceholderTextureLayered|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__texture2darrayrd__.Texture2DArrayRD|__texture3d__.Texture3D|__placeholdertexture2darray__.PlaceholderTexture2DArray|__cubemaparray__.CubemapArray|__placeholdertexture3d__.PlaceholderTexture3D|__texture__.Texture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__texture2darray__.Texture2DArray|__texturecubemaparrayrd__.TextureCubemapArrayRD|__compressedcubemap__.CompressedCubemap:
    """"""
    pass

  def set_fog_enabled(self, enabled:bool)->None:
    """"""
    pass

  def is_fog_enabled(self)->bool:
    """"""
    pass

  def set_fog_mode(self, mode:int )->None:
    """"""
    pass

  def get_fog_mode(self)->int:
    """"""
    pass

  def set_fog_light_color(self, light_color:__core__.Color)->None:
    """"""
    pass

  def get_fog_light_color(self)->__core__.Color:
    """"""
    pass

  def set_fog_light_energy(self, light_energy:float)->None:
    """"""
    pass

  def get_fog_light_energy(self)->float:
    """"""
    pass

  def set_fog_sun_scatter(self, sun_scatter:float)->None:
    """"""
    pass

  def get_fog_sun_scatter(self)->float:
    """"""
    pass

  def set_fog_density(self, density:float)->None:
    """"""
    pass

  def get_fog_density(self)->float:
    """"""
    pass

  def set_fog_height(self, height:float)->None:
    """"""
    pass

  def get_fog_height(self)->float:
    """"""
    pass

  def set_fog_height_density(self, height_density:float)->None:
    """"""
    pass

  def get_fog_height_density(self)->float:
    """"""
    pass

  def set_fog_aerial_perspective(self, aerial_perspective:float)->None:
    """"""
    pass

  def get_fog_aerial_perspective(self)->float:
    """"""
    pass

  def set_fog_sky_affect(self, sky_affect:float)->None:
    """"""
    pass

  def get_fog_sky_affect(self)->float:
    """"""
    pass

  def set_fog_depth_curve(self, curve:float)->None:
    """"""
    pass

  def get_fog_depth_curve(self)->float:
    """"""
    pass

  def set_fog_depth_begin(self, begin:float)->None:
    """"""
    pass

  def get_fog_depth_begin(self)->float:
    """"""
    pass

  def set_fog_depth_end(self, end:float)->None:
    """"""
    pass

  def get_fog_depth_end(self)->float:
    """"""
    pass

  def set_volumetric_fog_enabled(self, enabled:bool)->None:
    """"""
    pass

  def is_volumetric_fog_enabled(self)->bool:
    """"""
    pass

  def set_volumetric_fog_emission(self, color:__core__.Color)->None:
    """"""
    pass

  def get_volumetric_fog_emission(self)->__core__.Color:
    """"""
    pass

  def set_volumetric_fog_albedo(self, color:__core__.Color)->None:
    """"""
    pass

  def get_volumetric_fog_albedo(self)->__core__.Color:
    """"""
    pass

  def set_volumetric_fog_density(self, density:float)->None:
    """"""
    pass

  def get_volumetric_fog_density(self)->float:
    """"""
    pass

  def set_volumetric_fog_emission_energy(self, begin:float)->None:
    """"""
    pass

  def get_volumetric_fog_emission_energy(self)->float:
    """"""
    pass

  def set_volumetric_fog_anisotropy(self, anisotropy:float)->None:
    """"""
    pass

  def get_volumetric_fog_anisotropy(self)->float:
    """"""
    pass

  def set_volumetric_fog_length(self, length:float)->None:
    """"""
    pass

  def get_volumetric_fog_length(self)->float:
    """"""
    pass

  def set_volumetric_fog_detail_spread(self, detail_spread:float)->None:
    """"""
    pass

  def get_volumetric_fog_detail_spread(self)->float:
    """"""
    pass

  def set_volumetric_fog_gi_inject(self, gi_inject:float)->None:
    """"""
    pass

  def get_volumetric_fog_gi_inject(self)->float:
    """"""
    pass

  def set_volumetric_fog_ambient_inject(self, enabled:float)->None:
    """"""
    pass

  def get_volumetric_fog_ambient_inject(self)->float:
    """"""
    pass

  def set_volumetric_fog_sky_affect(self, sky_affect:float)->None:
    """"""
    pass

  def get_volumetric_fog_sky_affect(self)->float:
    """"""
    pass

  def set_volumetric_fog_temporal_reprojection_enabled(self, enabled:bool)->None:
    """"""
    pass

  def is_volumetric_fog_temporal_reprojection_enabled(self)->bool:
    """"""
    pass

  def set_volumetric_fog_temporal_reprojection_amount(self, temporal_reprojection_amount:float)->None:
    """"""
    pass

  def get_volumetric_fog_temporal_reprojection_amount(self)->float:
    """"""
    pass

  def set_adjustment_enabled(self, enabled:bool)->None:
    """"""
    pass

  def is_adjustment_enabled(self)->bool:
    """"""
    pass

  def set_adjustment_brightness(self, brightness:float)->None:
    """"""
    pass

  def get_adjustment_brightness(self)->float:
    """"""
    pass

  def set_adjustment_contrast(self, contrast:float)->None:
    """"""
    pass

  def get_adjustment_contrast(self)->float:
    """"""
    pass

  def set_adjustment_saturation(self, saturation:float)->None:
    """"""
    pass

  def get_adjustment_saturation(self)->float:
    """"""
    pass

  def set_adjustment_color_correction(self, color_correction:__texture__.Texture)->None:
    """"""
    pass

  def get_adjustment_color_correction(self)->__imagetexture3d__.ImageTexture3D|__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__noisetexture2d__.NoiseTexture2D|__placeholdercubemap__.PlaceholderCubemap|__compressedtexturelayered__.CompressedTextureLayered|__texturecubemaprd__.TextureCubemapRD|__compressedcubemaparray__.CompressedCubemapArray|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__texturelayeredrd__.TextureLayeredRD|__texture3drd__.Texture3DRD|__gradienttexture2d__.GradientTexture2D|__noisetexture3d__.NoiseTexture3D|__cubemap__.Cubemap|__meshtexture__.MeshTexture|__curvetexture__.CurveTexture|__atlastexture__.AtlasTexture|__texture2d__.Texture2D|__imagetexturelayered__.ImageTextureLayered|__compressedtexture2darray__.CompressedTexture2DArray|__placeholdercubemaparray__.PlaceholderCubemapArray|__texturelayered__.TextureLayered|__animatedtexture__.AnimatedTexture|__compressedtexture3d__.CompressedTexture3D|__placeholdertexturelayered__.PlaceholderTextureLayered|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__texture2darrayrd__.Texture2DArrayRD|__texture3d__.Texture3D|__placeholdertexture2darray__.PlaceholderTexture2DArray|__cubemaparray__.CubemapArray|__placeholdertexture3d__.PlaceholderTexture3D|__texture__.Texture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__texture2darray__.Texture2DArray|__texturecubemaparrayrd__.TextureCubemapArrayRD|__compressedcubemap__.CompressedCubemap:
    """"""
    pass


