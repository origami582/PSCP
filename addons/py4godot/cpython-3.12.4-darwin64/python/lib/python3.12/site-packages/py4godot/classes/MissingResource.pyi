from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Resource as __resource__



class MissingResource(__resource__.Resource):
  """
		This is an internal editor class intended for keeping data of resources of unknown type (most likely this type was supplied by an extension that is no longer loaded). It can't be manually instantiated or placed in a scene.
		**Warning:** Ignore missing resources unless you know what you are doing. Existing properties on a missing resource can be freely modified in code, regardless of the type they are intended to be.
	"""

  @staticmethod
  def constructor()->MissingResource:pass



  @staticmethod
  def cast(other:__object__.Object)->MissingResource:pass


  @property
  def original_class(self)->str:
    """"""
    pass
  @original_class.setter
  def original_class(self,  value:str)->None:
    """"""
    pass
  @property
  def recording_properties(self)->bool:
    """"""
    pass
  @recording_properties.setter
  def recording_properties(self,  value:bool)->None:
    """"""
    pass
  def set_original_class(self, name:str)->None:
    """"""
    pass

  def get_original_class(self)->str:
    """"""
    pass

  def set_recording_properties(self, enable:bool)->None:
    """"""
    pass

  def is_recording_properties(self)->bool:
    """"""
    pass


