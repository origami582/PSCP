from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.PlaceholderTexture2D as __placeholdertexture2d__
import py4godot.classes.Texture2DRD as __texture2drd__
import py4godot.classes.NoiseTexture2D as __noisetexture2d__
import py4godot.classes.PortableCompressedTexture2D as __portablecompressedtexture2d__
import py4godot.classes.ExternalTexture as __externaltexture__
import py4godot.classes.Material as __material__
import py4godot.classes.ViewportTexture as __viewporttexture__
import py4godot.classes.GradientTexture2D as __gradienttexture2d__
import py4godot.classes.MeshTexture as __meshtexture__
import py4godot.classes.CurveTexture as __curvetexture__
import py4godot.classes.AtlasTexture as __atlastexture__
import py4godot.classes.Texture2D as __texture2d__
import py4godot.classes.ParticleProcessMaterial as __particleprocessmaterial__
import py4godot.classes.AnimatedTexture as __animatedtexture__
import py4godot.classes.ImageTexture as __imagetexture__
import py4godot.classes.GradientTexture1D as __gradienttexture1d__
import py4godot.classes.CanvasTexture as __canvastexture__
import py4godot.classes.CameraTexture as __cameratexture__
import py4godot.classes.CurveXYZTexture as __curvexyztexture__
import py4godot.classes.CompressedTexture2D as __compressedtexture2d__


class Parameter:
  PARAM_INITIAL_LINEAR_VELOCITY:int = 0
  PARAM_ANGULAR_VELOCITY:int = 1
  PARAM_ORBIT_VELOCITY:int = 2
  PARAM_LINEAR_ACCEL:int = 3
  PARAM_RADIAL_ACCEL:int = 4
  PARAM_TANGENTIAL_ACCEL:int = 5
  PARAM_DAMPING:int = 6
  PARAM_ANGLE:int = 7
  PARAM_SCALE:int = 8
  PARAM_HUE_VARIATION:int = 9
  PARAM_ANIM_SPEED:int = 10
  PARAM_ANIM_OFFSET:int = 11
  PARAM_RADIAL_VELOCITY:int = 15
  PARAM_DIRECTIONAL_VELOCITY:int = 16
  PARAM_SCALE_OVER_VELOCITY:int = 17
  PARAM_MAX:int = 18
  PARAM_TURB_VEL_INFLUENCE:int = 13
  PARAM_TURB_INIT_DISPLACEMENT:int = 14
  PARAM_TURB_INFLUENCE_OVER_LIFE:int = 12
class ParticleFlags:
  PARTICLE_FLAG_ALIGN_Y_TO_VELOCITY:int = 0
  PARTICLE_FLAG_ROTATE_Y:int = 1
  PARTICLE_FLAG_DISABLE_Z:int = 2
  PARTICLE_FLAG_DAMPING_AS_FRICTION:int = 3
  PARTICLE_FLAG_MAX:int = 4
class EmissionShape:
  EMISSION_SHAPE_POINT:int = 0
  EMISSION_SHAPE_SPHERE:int = 1
  EMISSION_SHAPE_SPHERE_SURFACE:int = 2
  EMISSION_SHAPE_BOX:int = 3
  EMISSION_SHAPE_POINTS:int = 4
  EMISSION_SHAPE_DIRECTED_POINTS:int = 5
  EMISSION_SHAPE_RING:int = 6
  EMISSION_SHAPE_MAX:int = 7
class SubEmitterMode:
  SUB_EMITTER_DISABLED:int = 0
  SUB_EMITTER_CONSTANT:int = 1
  SUB_EMITTER_AT_END:int = 2
  SUB_EMITTER_AT_COLLISION:int = 3
  SUB_EMITTER_AT_START:int = 4
  SUB_EMITTER_MAX:int = 5
class CollisionMode:
  COLLISION_DISABLED:int = 0
  COLLISION_RIGID:int = 1
  COLLISION_HIDE_ON_CONTACT:int = 2
  COLLISION_MAX:int = 3


class ParticleProcessMaterial(__material__.Material):
  """
		`ParticleProcessMaterial` defines particle properties and behavior. It is used in the `process_material` of the `GPUParticles2D` and `GPUParticles3D` nodes. Some of this material's properties are applied to each particle when emitted, while others can have a `CurveTexture` or a `GradientTexture1D` applied to vary numerical or color values over the lifetime of the particle.
	"""
  emission_shape_changed: BuiltinSignal

  @staticmethod
  def constructor()->ParticleProcessMaterial:pass



  @staticmethod
  def cast(other:__object__.Object)->ParticleProcessMaterial:pass


  @property
  def lifetime_randomness(self)->float:
    """"""
    pass
  @lifetime_randomness.setter
  def lifetime_randomness(self,  value:float)->None:
    """"""
    pass
  @property
  def particle_flag_align_y(self)->bool:
    """"""
    pass
  @particle_flag_align_y.setter
  def particle_flag_align_y(self,  value:bool)->None:
    """"""
    pass
  @property
  def particle_flag_rotate_y(self)->bool:
    """"""
    pass
  @particle_flag_rotate_y.setter
  def particle_flag_rotate_y(self,  value:bool)->None:
    """"""
    pass
  @property
  def particle_flag_disable_z(self)->bool:
    """"""
    pass
  @particle_flag_disable_z.setter
  def particle_flag_disable_z(self,  value:bool)->None:
    """"""
    pass
  @property
  def particle_flag_damping_as_friction(self)->bool:
    """"""
    pass
  @particle_flag_damping_as_friction.setter
  def particle_flag_damping_as_friction(self,  value:bool)->None:
    """"""
    pass
  @property
  def emission_shape_offset(self)->__core__.Vector3:
    """"""
    pass
  @emission_shape_offset.setter
  def emission_shape_offset(self,  value:__core__.Vector3)->None:
    """"""
    pass
  @property
  def emission_shape_scale(self)->__core__.Vector3:
    """"""
    pass
  @emission_shape_scale.setter
  def emission_shape_scale(self,  value:__core__.Vector3)->None:
    """"""
    pass
  @property
  def emission_shape(self)->int:
    """"""
    pass
  @emission_shape.setter
  def emission_shape(self,  value:int)->None:
    """"""
    pass
  @property
  def emission_sphere_radius(self)->float:
    """"""
    pass
  @emission_sphere_radius.setter
  def emission_sphere_radius(self,  value:float)->None:
    """"""
    pass
  @property
  def emission_box_extents(self)->__core__.Vector3:
    """"""
    pass
  @emission_box_extents.setter
  def emission_box_extents(self,  value:__core__.Vector3)->None:
    """"""
    pass
  @property
  def emission_point_texture(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass
  @emission_point_texture.setter
  def emission_point_texture(self,  value:__texture2d__.Texture2D)->None:
    """"""
    pass
  @property
  def emission_normal_texture(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass
  @emission_normal_texture.setter
  def emission_normal_texture(self,  value:__texture2d__.Texture2D)->None:
    """"""
    pass
  @property
  def emission_color_texture(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass
  @emission_color_texture.setter
  def emission_color_texture(self,  value:__texture2d__.Texture2D)->None:
    """"""
    pass
  @property
  def emission_point_count(self)->int:
    """"""
    pass
  @emission_point_count.setter
  def emission_point_count(self,  value:int)->None:
    """"""
    pass
  @property
  def emission_ring_axis(self)->__core__.Vector3:
    """"""
    pass
  @emission_ring_axis.setter
  def emission_ring_axis(self,  value:__core__.Vector3)->None:
    """"""
    pass
  @property
  def emission_ring_height(self)->float:
    """"""
    pass
  @emission_ring_height.setter
  def emission_ring_height(self,  value:float)->None:
    """"""
    pass
  @property
  def emission_ring_radius(self)->float:
    """"""
    pass
  @emission_ring_radius.setter
  def emission_ring_radius(self,  value:float)->None:
    """"""
    pass
  @property
  def emission_ring_inner_radius(self)->float:
    """"""
    pass
  @emission_ring_inner_radius.setter
  def emission_ring_inner_radius(self,  value:float)->None:
    """"""
    pass
  @property
  def emission_ring_cone_angle(self)->float:
    """"""
    pass
  @emission_ring_cone_angle.setter
  def emission_ring_cone_angle(self,  value:float)->None:
    """"""
    pass
  @property
  def angle(self)->__core__.Vector2:
    """"""
    pass
  @angle.setter
  def angle(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def angle_min(self)->float:
    """"""
    pass
  @angle_min.setter
  def angle_min(self,  value:float)->None:
    """"""
    pass
  @property
  def angle_max(self)->float:
    """"""
    pass
  @angle_max.setter
  def angle_max(self,  value:float)->None:
    """"""
    pass
  @property
  def angle_curve(self)->__curvetexture__.CurveTexture:
    """"""
    pass
  @angle_curve.setter
  def angle_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def inherit_velocity_ratio(self)->float:
    """"""
    pass
  @inherit_velocity_ratio.setter
  def inherit_velocity_ratio(self,  value:float)->None:
    """"""
    pass
  @property
  def velocity_pivot(self)->__core__.Vector3:
    """"""
    pass
  @velocity_pivot.setter
  def velocity_pivot(self,  value:__core__.Vector3)->None:
    """"""
    pass
  @property
  def direction(self)->__core__.Vector3:
    """"""
    pass
  @direction.setter
  def direction(self,  value:__core__.Vector3)->None:
    """"""
    pass
  @property
  def spread(self)->float:
    """"""
    pass
  @spread.setter
  def spread(self,  value:float)->None:
    """"""
    pass
  @property
  def flatness(self)->float:
    """"""
    pass
  @flatness.setter
  def flatness(self,  value:float)->None:
    """"""
    pass
  @property
  def initial_velocity(self)->__core__.Vector2:
    """"""
    pass
  @initial_velocity.setter
  def initial_velocity(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def initial_velocity_min(self)->float:
    """"""
    pass
  @initial_velocity_min.setter
  def initial_velocity_min(self,  value:float)->None:
    """"""
    pass
  @property
  def initial_velocity_max(self)->float:
    """"""
    pass
  @initial_velocity_max.setter
  def initial_velocity_max(self,  value:float)->None:
    """"""
    pass
  @property
  def angular_velocity(self)->__core__.Vector2:
    """"""
    pass
  @angular_velocity.setter
  def angular_velocity(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def angular_velocity_min(self)->float:
    """"""
    pass
  @angular_velocity_min.setter
  def angular_velocity_min(self,  value:float)->None:
    """"""
    pass
  @property
  def angular_velocity_max(self)->float:
    """"""
    pass
  @angular_velocity_max.setter
  def angular_velocity_max(self,  value:float)->None:
    """"""
    pass
  @property
  def angular_velocity_curve(self)->__curvetexture__.CurveTexture:
    """"""
    pass
  @angular_velocity_curve.setter
  def angular_velocity_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def directional_velocity(self)->__core__.Vector2:
    """"""
    pass
  @directional_velocity.setter
  def directional_velocity(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def directional_velocity_min(self)->float:
    """"""
    pass
  @directional_velocity_min.setter
  def directional_velocity_min(self,  value:float)->None:
    """"""
    pass
  @property
  def directional_velocity_max(self)->float:
    """"""
    pass
  @directional_velocity_max.setter
  def directional_velocity_max(self,  value:float)->None:
    """"""
    pass
  @property
  def directional_velocity_curve(self)->__curvexyztexture__.CurveXYZTexture:
    """"""
    pass
  @directional_velocity_curve.setter
  def directional_velocity_curve(self,  value:__curvexyztexture__.CurveXYZTexture)->None:
    """"""
    pass
  @property
  def orbit_velocity(self)->__core__.Vector2:
    """"""
    pass
  @orbit_velocity.setter
  def orbit_velocity(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def orbit_velocity_min(self)->float:
    """"""
    pass
  @orbit_velocity_min.setter
  def orbit_velocity_min(self,  value:float)->None:
    """"""
    pass
  @property
  def orbit_velocity_max(self)->float:
    """"""
    pass
  @orbit_velocity_max.setter
  def orbit_velocity_max(self,  value:float)->None:
    """"""
    pass
  @property
  def orbit_velocity_curve(self)->CurveTexture,CurveXYZTexture:
    """"""
    pass
  @orbit_velocity_curve.setter
  def orbit_velocity_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def radial_velocity(self)->__core__.Vector2:
    """"""
    pass
  @radial_velocity.setter
  def radial_velocity(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def radial_velocity_min(self)->float:
    """"""
    pass
  @radial_velocity_min.setter
  def radial_velocity_min(self,  value:float)->None:
    """"""
    pass
  @property
  def radial_velocity_max(self)->float:
    """"""
    pass
  @radial_velocity_max.setter
  def radial_velocity_max(self,  value:float)->None:
    """"""
    pass
  @property
  def radial_velocity_curve(self)->__curvetexture__.CurveTexture:
    """"""
    pass
  @radial_velocity_curve.setter
  def radial_velocity_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def velocity_limit_curve(self)->__curvetexture__.CurveTexture:
    """"""
    pass
  @velocity_limit_curve.setter
  def velocity_limit_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def gravity(self)->__core__.Vector3:
    """"""
    pass
  @gravity.setter
  def gravity(self,  value:__core__.Vector3)->None:
    """"""
    pass
  @property
  def linear_accel(self)->__core__.Vector2:
    """"""
    pass
  @linear_accel.setter
  def linear_accel(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def linear_accel_min(self)->float:
    """"""
    pass
  @linear_accel_min.setter
  def linear_accel_min(self,  value:float)->None:
    """"""
    pass
  @property
  def linear_accel_max(self)->float:
    """"""
    pass
  @linear_accel_max.setter
  def linear_accel_max(self,  value:float)->None:
    """"""
    pass
  @property
  def linear_accel_curve(self)->__curvetexture__.CurveTexture:
    """"""
    pass
  @linear_accel_curve.setter
  def linear_accel_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def radial_accel(self)->__core__.Vector2:
    """"""
    pass
  @radial_accel.setter
  def radial_accel(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def radial_accel_min(self)->float:
    """"""
    pass
  @radial_accel_min.setter
  def radial_accel_min(self,  value:float)->None:
    """"""
    pass
  @property
  def radial_accel_max(self)->float:
    """"""
    pass
  @radial_accel_max.setter
  def radial_accel_max(self,  value:float)->None:
    """"""
    pass
  @property
  def radial_accel_curve(self)->__curvetexture__.CurveTexture:
    """"""
    pass
  @radial_accel_curve.setter
  def radial_accel_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def tangential_accel(self)->__core__.Vector2:
    """"""
    pass
  @tangential_accel.setter
  def tangential_accel(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def tangential_accel_min(self)->float:
    """"""
    pass
  @tangential_accel_min.setter
  def tangential_accel_min(self,  value:float)->None:
    """"""
    pass
  @property
  def tangential_accel_max(self)->float:
    """"""
    pass
  @tangential_accel_max.setter
  def tangential_accel_max(self,  value:float)->None:
    """"""
    pass
  @property
  def tangential_accel_curve(self)->__curvetexture__.CurveTexture:
    """"""
    pass
  @tangential_accel_curve.setter
  def tangential_accel_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def damping(self)->__core__.Vector2:
    """"""
    pass
  @damping.setter
  def damping(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def damping_min(self)->float:
    """"""
    pass
  @damping_min.setter
  def damping_min(self,  value:float)->None:
    """"""
    pass
  @property
  def damping_max(self)->float:
    """"""
    pass
  @damping_max.setter
  def damping_max(self,  value:float)->None:
    """"""
    pass
  @property
  def damping_curve(self)->__curvetexture__.CurveTexture:
    """"""
    pass
  @damping_curve.setter
  def damping_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def attractor_interaction_enabled(self)->bool:
    """"""
    pass
  @attractor_interaction_enabled.setter
  def attractor_interaction_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def scale(self)->__core__.Vector2:
    """"""
    pass
  @scale.setter
  def scale(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def scale_min(self)->float:
    """"""
    pass
  @scale_min.setter
  def scale_min(self,  value:float)->None:
    """"""
    pass
  @property
  def scale_max(self)->float:
    """"""
    pass
  @scale_max.setter
  def scale_max(self,  value:float)->None:
    """"""
    pass
  @property
  def scale_curve(self)->CurveTexture,CurveXYZTexture:
    """"""
    pass
  @scale_curve.setter
  def scale_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def scale_over_velocity(self)->__core__.Vector2:
    """"""
    pass
  @scale_over_velocity.setter
  def scale_over_velocity(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def scale_over_velocity_min(self)->float:
    """"""
    pass
  @scale_over_velocity_min.setter
  def scale_over_velocity_min(self,  value:float)->None:
    """"""
    pass
  @property
  def scale_over_velocity_max(self)->float:
    """"""
    pass
  @scale_over_velocity_max.setter
  def scale_over_velocity_max(self,  value:float)->None:
    """"""
    pass
  @property
  def scale_over_velocity_curve(self)->CurveTexture,CurveXYZTexture:
    """"""
    pass
  @scale_over_velocity_curve.setter
  def scale_over_velocity_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def color(self)->__core__.Color:
    """"""
    pass
  @color.setter
  def color(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def color_ramp(self)->__gradienttexture1d__.GradientTexture1D:
    """"""
    pass
  @color_ramp.setter
  def color_ramp(self,  value:__gradienttexture1d__.GradientTexture1D)->None:
    """"""
    pass
  @property
  def color_initial_ramp(self)->__gradienttexture1d__.GradientTexture1D:
    """"""
    pass
  @color_initial_ramp.setter
  def color_initial_ramp(self,  value:__gradienttexture1d__.GradientTexture1D)->None:
    """"""
    pass
  @property
  def alpha_curve(self)->__curvetexture__.CurveTexture:
    """"""
    pass
  @alpha_curve.setter
  def alpha_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def emission_curve(self)->__curvetexture__.CurveTexture:
    """"""
    pass
  @emission_curve.setter
  def emission_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def hue_variation(self)->__core__.Vector2:
    """"""
    pass
  @hue_variation.setter
  def hue_variation(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def hue_variation_min(self)->float:
    """"""
    pass
  @hue_variation_min.setter
  def hue_variation_min(self,  value:float)->None:
    """"""
    pass
  @property
  def hue_variation_max(self)->float:
    """"""
    pass
  @hue_variation_max.setter
  def hue_variation_max(self,  value:float)->None:
    """"""
    pass
  @property
  def hue_variation_curve(self)->__curvetexture__.CurveTexture:
    """"""
    pass
  @hue_variation_curve.setter
  def hue_variation_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def anim_speed(self)->__core__.Vector2:
    """"""
    pass
  @anim_speed.setter
  def anim_speed(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def anim_speed_min(self)->float:
    """"""
    pass
  @anim_speed_min.setter
  def anim_speed_min(self,  value:float)->None:
    """"""
    pass
  @property
  def anim_speed_max(self)->float:
    """"""
    pass
  @anim_speed_max.setter
  def anim_speed_max(self,  value:float)->None:
    """"""
    pass
  @property
  def anim_speed_curve(self)->__curvetexture__.CurveTexture:
    """"""
    pass
  @anim_speed_curve.setter
  def anim_speed_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def anim_offset(self)->__core__.Vector2:
    """"""
    pass
  @anim_offset.setter
  def anim_offset(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def anim_offset_min(self)->float:
    """"""
    pass
  @anim_offset_min.setter
  def anim_offset_min(self,  value:float)->None:
    """"""
    pass
  @property
  def anim_offset_max(self)->float:
    """"""
    pass
  @anim_offset_max.setter
  def anim_offset_max(self,  value:float)->None:
    """"""
    pass
  @property
  def anim_offset_curve(self)->__curvetexture__.CurveTexture:
    """"""
    pass
  @anim_offset_curve.setter
  def anim_offset_curve(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def turbulence_enabled(self)->bool:
    """"""
    pass
  @turbulence_enabled.setter
  def turbulence_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def turbulence_noise_strength(self)->float:
    """"""
    pass
  @turbulence_noise_strength.setter
  def turbulence_noise_strength(self,  value:float)->None:
    """"""
    pass
  @property
  def turbulence_noise_scale(self)->float:
    """"""
    pass
  @turbulence_noise_scale.setter
  def turbulence_noise_scale(self,  value:float)->None:
    """"""
    pass
  @property
  def turbulence_noise_speed(self)->__core__.Vector3:
    """"""
    pass
  @turbulence_noise_speed.setter
  def turbulence_noise_speed(self,  value:__core__.Vector3)->None:
    """"""
    pass
  @property
  def turbulence_noise_speed_random(self)->float:
    """"""
    pass
  @turbulence_noise_speed_random.setter
  def turbulence_noise_speed_random(self,  value:float)->None:
    """"""
    pass
  @property
  def turbulence_influence(self)->__core__.Vector2:
    """"""
    pass
  @turbulence_influence.setter
  def turbulence_influence(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def turbulence_influence_min(self)->float:
    """"""
    pass
  @turbulence_influence_min.setter
  def turbulence_influence_min(self,  value:float)->None:
    """"""
    pass
  @property
  def turbulence_influence_max(self)->float:
    """"""
    pass
  @turbulence_influence_max.setter
  def turbulence_influence_max(self,  value:float)->None:
    """"""
    pass
  @property
  def turbulence_initial_displacement(self)->__core__.Vector2:
    """"""
    pass
  @turbulence_initial_displacement.setter
  def turbulence_initial_displacement(self,  value:__core__.Vector2)->None:
    """"""
    pass
  @property
  def turbulence_initial_displacement_min(self)->float:
    """"""
    pass
  @turbulence_initial_displacement_min.setter
  def turbulence_initial_displacement_min(self,  value:float)->None:
    """"""
    pass
  @property
  def turbulence_initial_displacement_max(self)->float:
    """"""
    pass
  @turbulence_initial_displacement_max.setter
  def turbulence_initial_displacement_max(self,  value:float)->None:
    """"""
    pass
  @property
  def turbulence_influence_over_life(self)->__curvetexture__.CurveTexture:
    """"""
    pass
  @turbulence_influence_over_life.setter
  def turbulence_influence_over_life(self,  value:__curvetexture__.CurveTexture)->None:
    """"""
    pass
  @property
  def collision_mode(self)->int:
    """"""
    pass
  @collision_mode.setter
  def collision_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def collision_friction(self)->float:
    """"""
    pass
  @collision_friction.setter
  def collision_friction(self,  value:float)->None:
    """"""
    pass
  @property
  def collision_bounce(self)->float:
    """"""
    pass
  @collision_bounce.setter
  def collision_bounce(self,  value:float)->None:
    """"""
    pass
  @property
  def collision_use_scale(self)->bool:
    """"""
    pass
  @collision_use_scale.setter
  def collision_use_scale(self,  value:bool)->None:
    """"""
    pass
  @property
  def sub_emitter_mode(self)->int:
    """"""
    pass
  @sub_emitter_mode.setter
  def sub_emitter_mode(self,  value:int)->None:
    """"""
    pass
  @property
  def sub_emitter_frequency(self)->float:
    """"""
    pass
  @sub_emitter_frequency.setter
  def sub_emitter_frequency(self,  value:float)->None:
    """"""
    pass
  @property
  def sub_emitter_amount_at_end(self)->int:
    """"""
    pass
  @sub_emitter_amount_at_end.setter
  def sub_emitter_amount_at_end(self,  value:int)->None:
    """"""
    pass
  @property
  def sub_emitter_amount_at_collision(self)->int:
    """"""
    pass
  @sub_emitter_amount_at_collision.setter
  def sub_emitter_amount_at_collision(self,  value:int)->None:
    """"""
    pass
  @property
  def sub_emitter_amount_at_start(self)->int:
    """"""
    pass
  @sub_emitter_amount_at_start.setter
  def sub_emitter_amount_at_start(self,  value:int)->None:
    """"""
    pass
  @property
  def sub_emitter_keep_velocity(self)->bool:
    """"""
    pass
  @sub_emitter_keep_velocity.setter
  def sub_emitter_keep_velocity(self,  value:bool)->None:
    """"""
    pass
  def set_direction(self, degrees:__core__.Vector3)->None:
    """"""
    pass

  def get_direction(self)->__core__.Vector3:
    """"""
    pass

  def set_inherit_velocity_ratio(self, ratio:float)->None:
    """"""
    pass

  def get_inherit_velocity_ratio(self)->float:
    """"""
    pass

  def set_spread(self, degrees:float)->None:
    """"""
    pass

  def get_spread(self)->float:
    """"""
    pass

  def set_flatness(self, amount:float)->None:
    """"""
    pass

  def get_flatness(self)->float:
    """"""
    pass

  def set_param(self, param:int , value:__core__.Vector2)->None:
    """
				Sets the minimum and maximum values of the given `param`.
				The `x` component of the argument vector corresponds to minimum and the `y` component corresponds to maximum.
			"""
    pass

  def get_param(self, param:int )->__core__.Vector2:
    """
				Returns the minimum and maximum values of the given `param` as a vector.
				The `x` component of the returned vector corresponds to minimum and the `y` component corresponds to maximum.
			"""
    pass

  def set_param_min(self, param:int , value:float)->None:
    """
				Sets the minimum value range for the given parameter.
			"""
    pass

  def get_param_min(self, param:int )->float:
    """
				Returns the minimum value range for the given parameter.
			"""
    pass

  def set_param_max(self, param:int , value:float)->None:
    """
				Sets the maximum value range for the given parameter.
			"""
    pass

  def get_param_max(self, param:int )->float:
    """
				Returns the maximum value range for the given parameter.
			"""
    pass

  def set_param_texture(self, param:int , texture:__texture2d__.Texture2D)->None:
    """
				Sets the `Texture2D` for the specified `enum Parameter`.
			"""
    pass

  def get_param_texture(self, param:int )->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """
				Returns the `Texture2D` used by the specified parameter.
			"""
    pass

  def set_color(self, color:__core__.Color)->None:
    """"""
    pass

  def get_color(self)->__core__.Color:
    """"""
    pass

  def set_color_ramp(self, ramp:__texture2d__.Texture2D)->None:
    """"""
    pass

  def get_color_ramp(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass

  def set_alpha_curve(self, curve:__texture2d__.Texture2D)->None:
    """"""
    pass

  def get_alpha_curve(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass

  def set_emission_curve(self, curve:__texture2d__.Texture2D)->None:
    """"""
    pass

  def get_emission_curve(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass

  def set_color_initial_ramp(self, ramp:__texture2d__.Texture2D)->None:
    """"""
    pass

  def get_color_initial_ramp(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass

  def set_velocity_limit_curve(self, curve:__texture2d__.Texture2D)->None:
    """"""
    pass

  def get_velocity_limit_curve(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass

  def set_particle_flag(self, particle_flag:int , enable:bool)->None:
    """
				Sets the `particle_flag` to `enable`.
			"""
    pass

  def get_particle_flag(self, particle_flag:int )->bool:
    """
				Returns `true` if the specified particle flag is enabled.
			"""
    pass

  def set_velocity_pivot(self, pivot:__core__.Vector3)->None:
    """"""
    pass

  def get_velocity_pivot(self)->__core__.Vector3:
    """"""
    pass

  def set_emission_shape(self, shape:int )->None:
    """"""
    pass

  def get_emission_shape(self)->int:
    """"""
    pass

  def set_emission_sphere_radius(self, radius:float)->None:
    """"""
    pass

  def get_emission_sphere_radius(self)->float:
    """"""
    pass

  def set_emission_box_extents(self, extents:__core__.Vector3)->None:
    """"""
    pass

  def get_emission_box_extents(self)->__core__.Vector3:
    """"""
    pass

  def set_emission_point_texture(self, texture:__texture2d__.Texture2D)->None:
    """"""
    pass

  def get_emission_point_texture(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass

  def set_emission_normal_texture(self, texture:__texture2d__.Texture2D)->None:
    """"""
    pass

  def get_emission_normal_texture(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass

  def set_emission_color_texture(self, texture:__texture2d__.Texture2D)->None:
    """"""
    pass

  def get_emission_color_texture(self)->__placeholdertexture2d__.PlaceholderTexture2D|__texture2drd__.Texture2DRD|__curvetexture__.CurveTexture|__noisetexture2d__.NoiseTexture2D|__animatedtexture__.AnimatedTexture|__imagetexture__.ImageTexture|__gradienttexture1d__.GradientTexture1D|__canvastexture__.CanvasTexture|__portablecompressedtexture2d__.PortableCompressedTexture2D|__externaltexture__.ExternalTexture|__viewporttexture__.ViewportTexture|__gradienttexture2d__.GradientTexture2D|__meshtexture__.MeshTexture|__cameratexture__.CameraTexture|__curvexyztexture__.CurveXYZTexture|__compressedtexture2d__.CompressedTexture2D|__atlastexture__.AtlasTexture|__texture2d__.Texture2D:
    """"""
    pass

  def set_emission_point_count(self, point_count:int)->None:
    """"""
    pass

  def get_emission_point_count(self)->int:
    """"""
    pass

  def set_emission_ring_axis(self, axis:__core__.Vector3)->None:
    """"""
    pass

  def get_emission_ring_axis(self)->__core__.Vector3:
    """"""
    pass

  def set_emission_ring_height(self, height:float)->None:
    """"""
    pass

  def get_emission_ring_height(self)->float:
    """"""
    pass

  def set_emission_ring_radius(self, radius:float)->None:
    """"""
    pass

  def get_emission_ring_radius(self)->float:
    """"""
    pass

  def set_emission_ring_inner_radius(self, inner_radius:float)->None:
    """"""
    pass

  def get_emission_ring_inner_radius(self)->float:
    """"""
    pass

  def set_emission_ring_cone_angle(self, cone_angle:float)->None:
    """"""
    pass

  def get_emission_ring_cone_angle(self)->float:
    """"""
    pass

  def set_emission_shape_offset(self, emission_shape_offset:__core__.Vector3)->None:
    """"""
    pass

  def get_emission_shape_offset(self)->__core__.Vector3:
    """"""
    pass

  def set_emission_shape_scale(self, emission_shape_scale:__core__.Vector3)->None:
    """"""
    pass

  def get_emission_shape_scale(self)->__core__.Vector3:
    """"""
    pass

  def get_turbulence_enabled(self)->bool:
    """"""
    pass

  def set_turbulence_enabled(self, turbulence_enabled:bool)->None:
    """"""
    pass

  def get_turbulence_noise_strength(self)->float:
    """"""
    pass

  def set_turbulence_noise_strength(self, turbulence_noise_strength:float)->None:
    """"""
    pass

  def get_turbulence_noise_scale(self)->float:
    """"""
    pass

  def set_turbulence_noise_scale(self, turbulence_noise_scale:float)->None:
    """"""
    pass

  def get_turbulence_noise_speed_random(self)->float:
    """"""
    pass

  def set_turbulence_noise_speed_random(self, turbulence_noise_speed_random:float)->None:
    """"""
    pass

  def get_turbulence_noise_speed(self)->__core__.Vector3:
    """"""
    pass

  def set_turbulence_noise_speed(self, turbulence_noise_speed:__core__.Vector3)->None:
    """"""
    pass

  def get_gravity(self)->__core__.Vector3:
    """"""
    pass

  def set_gravity(self, accel_vec:__core__.Vector3)->None:
    """"""
    pass

  def set_lifetime_randomness(self, randomness:float)->None:
    """"""
    pass

  def get_lifetime_randomness(self)->float:
    """"""
    pass

  def get_sub_emitter_mode(self)->int:
    """"""
    pass

  def set_sub_emitter_mode(self, mode:int )->None:
    """"""
    pass

  def get_sub_emitter_frequency(self)->float:
    """"""
    pass

  def set_sub_emitter_frequency(self, hz:float)->None:
    """"""
    pass

  def get_sub_emitter_amount_at_end(self)->int:
    """"""
    pass

  def set_sub_emitter_amount_at_end(self, amount:int)->None:
    """"""
    pass

  def get_sub_emitter_amount_at_collision(self)->int:
    """"""
    pass

  def set_sub_emitter_amount_at_collision(self, amount:int)->None:
    """"""
    pass

  def get_sub_emitter_amount_at_start(self)->int:
    """"""
    pass

  def set_sub_emitter_amount_at_start(self, amount:int)->None:
    """"""
    pass

  def get_sub_emitter_keep_velocity(self)->bool:
    """"""
    pass

  def set_sub_emitter_keep_velocity(self, enable:bool)->None:
    """"""
    pass

  def set_attractor_interaction_enabled(self, enabled:bool)->None:
    """"""
    pass

  def is_attractor_interaction_enabled(self)->bool:
    """"""
    pass

  def set_collision_mode(self, mode:int )->None:
    """"""
    pass

  def get_collision_mode(self)->int:
    """"""
    pass

  def set_collision_use_scale(self, radius:bool)->None:
    """"""
    pass

  def is_collision_using_scale(self)->bool:
    """"""
    pass

  def set_collision_friction(self, friction:float)->None:
    """"""
    pass

  def get_collision_friction(self)->float:
    """"""
    pass

  def set_collision_bounce(self, bounce:float)->None:
    """"""
    pass

  def get_collision_bounce(self)->float:
    """"""
    pass


