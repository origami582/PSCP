from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RenderingDevice as __renderingdevice__
import py4godot.classes.RefCounted as __refcounted__



class RDVertexAttribute(__refcounted__.RefCounted):
  """
		This object is used by `RenderingDevice`.
	"""

  @staticmethod
  def constructor()->RDVertexAttribute:pass



  @staticmethod
  def cast(other:__object__.Object)->RDVertexAttribute:pass


  @property
  def location(self)->int:
    """"""
    pass
  @location.setter
  def location(self,  value:int)->None:
    """"""
    pass
  @property
  def offset(self)->int:
    """"""
    pass
  @offset.setter
  def offset(self,  value:int)->None:
    """"""
    pass
  @property
  def format(self)->int:
    """"""
    pass
  @format.setter
  def format(self,  value:int)->None:
    """"""
    pass
  @property
  def stride(self)->int:
    """"""
    pass
  @stride.setter
  def stride(self,  value:int)->None:
    """"""
    pass
  @property
  def frequency(self)->int:
    """"""
    pass
  @frequency.setter
  def frequency(self,  value:int)->None:
    """"""
    pass
  def set_location(self, p_member:int)->None:
    """"""
    pass

  def get_location(self)->int:
    """"""
    pass

  def set_offset(self, p_member:int)->None:
    """"""
    pass

  def get_offset(self)->int:
    """"""
    pass

  def set_format(self, p_member:int )->None:
    """"""
    pass

  def get_format(self)->int:
    """"""
    pass

  def set_stride(self, p_member:int)->None:
    """"""
    pass

  def get_stride(self)->int:
    """"""
    pass

  def set_frequency(self, p_member:int )->None:
    """"""
    pass

  def get_frequency(self)->int:
    """"""
    pass


