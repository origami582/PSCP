from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted as __refcounted__



class RDPipelineSpecializationConstant(__refcounted__.RefCounted):
  """
		A _specialization constant_ is a way to create additional variants of shaders without actually increasing the number of shader versions that are compiled. This allows improving performance by reducing the number of shader versions and reducing `if` branching, while still allowing shaders to be flexible for different use cases.
		This object is used by `RenderingDevice`.
	"""

  @staticmethod
  def constructor()->RDPipelineSpecializationConstant:pass



  @staticmethod
  def cast(other:__object__.Object)->RDPipelineSpecializationConstant:pass


  @property
  def value(self)->Any:
    """"""
    pass
  @value.setter
  def value(self,  value:Any)->None:
    """"""
    pass
  @property
  def constant_id(self)->int:
    """"""
    pass
  @constant_id.setter
  def constant_id(self,  value:int)->None:
    """"""
    pass
  def set_value(self, value:Any)->None:
    """"""
    pass

  def get_value(self)->Any:
    """"""
    pass

  def set_constant_id(self, constant_id:int)->None:
    """"""
    pass

  def get_constant_id(self)->int:
    """"""
    pass


