from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Control as __control__



class Container(__control__.Control):
  """
		Base class for all GUI containers. A `Container` automatically arranges its child controls in a certain way. This class can be inherited to make custom container types.
	"""
  pre_sort_children: BuiltinSignal
  sort_children: BuiltinSignal

  @staticmethod
  def constructor()->Container:pass



  @staticmethod
  def cast(other:__object__.Object)->Container:pass


  def _get_allowed_size_flags_horizontal(self)->__core__.PackedInt32Array:
    """
				Implement to return a list of allowed horizontal `enum Control.SizeFlags` for child nodes. This doesn't technically prevent the usages of any other size flags, if your implementation requires that. This only limits the options available to the user in the Inspector dock.
				**Note:** Having no size flags is equal to having `constant Control.SIZE_SHRINK_BEGIN`. As such, this value is always implicitly allowed.
			"""
    pass

  def _get_allowed_size_flags_vertical(self)->__core__.PackedInt32Array:
    """
				Implement to return a list of allowed vertical `enum Control.SizeFlags` for child nodes. This doesn't technically prevent the usages of any other size flags, if your implementation requires that. This only limits the options available to the user in the Inspector dock.
				**Note:** Having no size flags is equal to having `constant Control.SIZE_SHRINK_BEGIN`. As such, this value is always implicitly allowed.
			"""
    pass

  def queue_sort(self)->None:
    """
				Queue resort of the contained children. This is called automatically anyway, but can be called upon request.
			"""
    pass

  def fit_child_in_rect(self, child:__control__.Control, rect:__core__.Rect2)->None:
    """
				Fit a child control in a given rect. This is mainly a helper for creating custom container classes.
			"""
    pass


