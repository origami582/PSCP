from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Control as __control__



class ColorRect(__control__.Control):
  """
		Displays a rectangle filled with a solid `color`. If you need to display the border alone, consider using a `Panel` instead.
	"""

  @staticmethod
  def constructor()->ColorRect:pass



  @staticmethod
  def cast(other:__object__.Object)->ColorRect:pass


  @property
  def color(self)->__core__.Color:
    """"""
    pass
  @color.setter
  def color(self,  value:__core__.Color)->None:
    """"""
    pass
  def set_color(self, color:__core__.Color)->None:
    """"""
    pass

  def get_color(self)->__core__.Color:
    """"""
    pass


