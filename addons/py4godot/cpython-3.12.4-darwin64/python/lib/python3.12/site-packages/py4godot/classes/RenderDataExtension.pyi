from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RenderData as __renderdata__
import py4godot.classes.RenderSceneBuffersExtension as __renderscenebuffersextension__
import py4godot.classes.RenderSceneData as __renderscenedata__
import py4godot.classes.RenderSceneDataRD as __renderscenedatard__
import py4godot.classes.RenderSceneDataExtension as __renderscenedataextension__
import py4godot.classes.RenderSceneBuffersRD as __renderscenebuffersrd__
import py4godot.classes.RenderSceneBuffers as __renderscenebuffers__



class RenderDataExtension(__renderdata__.RenderData):
  """
		This class allows for a RenderData implementation to be made in GDExtension.
	"""

  @staticmethod
  def constructor()->RenderDataExtension:pass



  @staticmethod
  def cast(other:__object__.Object)->RenderDataExtension:pass


  def _get_render_scene_buffers(self)->__renderscenebuffers__.RenderSceneBuffers|__renderscenebuffersextension__.RenderSceneBuffersExtension|__renderscenebuffersrd__.RenderSceneBuffersRD:
    """
				Implement this in GDExtension to return the implementation's `RenderSceneBuffers` object.
			"""
    pass

  def _get_render_scene_data(self)->__renderscenedata__.RenderSceneData|__renderscenedataextension__.RenderSceneDataExtension|__renderscenedatard__.RenderSceneDataRD:
    """
				Implement this in GDExtension to return the implementation's `RenderSceneDataExtension` object.
			"""
    pass

  def _get_environment(self)->__core__.RID:
    """
				Implement this in GDExtension to return the `RID` of the implementation's environment object.
			"""
    pass

  def _get_camera_attributes(self)->__core__.RID:
    """
				Implement this in GDExtension to return the `RID` for the implementation's camera attributes object.
			"""
    pass


