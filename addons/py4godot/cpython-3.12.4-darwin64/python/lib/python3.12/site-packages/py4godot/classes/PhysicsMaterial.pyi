from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Resource as __resource__



class PhysicsMaterial(__resource__.Resource):
  """
		Holds physics-related properties of a surface, namely its roughness and bounciness. This class is used to apply these properties to a physics body.
	"""

  @staticmethod
  def constructor()->PhysicsMaterial:pass



  @staticmethod
  def cast(other:__object__.Object)->PhysicsMaterial:pass


  @property
  def friction(self)->float:
    """"""
    pass
  @friction.setter
  def friction(self,  value:float)->None:
    """"""
    pass
  @property
  def rough(self)->bool:
    """"""
    pass
  @rough.setter
  def rough(self,  value:bool)->None:
    """"""
    pass
  @property
  def bounce(self)->float:
    """"""
    pass
  @bounce.setter
  def bounce(self,  value:float)->None:
    """"""
    pass
  @property
  def absorbent(self)->bool:
    """"""
    pass
  @absorbent.setter
  def absorbent(self,  value:bool)->None:
    """"""
    pass
  def set_friction(self, friction:float)->None:
    """"""
    pass

  def get_friction(self)->float:
    """"""
    pass

  def set_rough(self, rough:bool)->None:
    """"""
    pass

  def is_rough(self)->bool:
    """"""
    pass

  def set_bounce(self, bounce:float)->None:
    """"""
    pass

  def get_bounce(self)->float:
    """"""
    pass

  def set_absorbent(self, absorbent:bool)->None:
    """"""
    pass

  def is_absorbent(self)->bool:
    """"""
    pass


