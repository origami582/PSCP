from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.PopupPanel as __popuppanel__
import py4godot.classes.ColorPicker as __colorpicker__
import py4godot.classes.Button as __button__



class ColorPickerButton(__button__.Button):
  """
		Encapsulates a `ColorPicker`, making it accessible by pressing a button. Pressing the button will toggle the `ColorPicker`'s visibility.
		See also `BaseButton` which contains common properties and methods associated with this node.
		**Note:** By default, the button may not be wide enough for the color preview swatch to be visible. Make sure to set `Control.custom_minimum_size` to a big enough value to give the button enough space.
	"""
  color_changed: BuiltinSignal
  popup_closed: BuiltinSignal
  picker_created: BuiltinSignal

  @staticmethod
  def constructor()->ColorPickerButton:pass



  @staticmethod
  def cast(other:__object__.Object)->ColorPickerButton:pass


  @property
  def color(self)->__core__.Color:
    """"""
    pass
  @color.setter
  def color(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def edit_alpha(self)->bool:
    """"""
    pass
  @edit_alpha.setter
  def edit_alpha(self,  value:bool)->None:
    """"""
    pass
  def set_pick_color(self, color:__core__.Color)->None:
    """"""
    pass

  def get_pick_color(self)->__core__.Color:
    """"""
    pass

  def get_picker(self)->__colorpicker__.ColorPicker:
    """
				Returns the `ColorPicker` that this node toggles.
				**Warning:** This is a required internal node, removing and freeing it may cause a crash. If you wish to hide it or any of its children, use their `CanvasItem.visible` property.
			"""
    pass

  def get_popup(self)->__popuppanel__.PopupPanel:
    """
				Returns the control's `PopupPanel` which allows you to connect to popup signals. This allows you to handle events when the ColorPicker is shown or hidden.
				**Warning:** This is a required internal node, removing and freeing it may cause a crash. If you wish to hide it or any of its children, use their `Window.visible` property.
			"""
    pass

  def set_edit_alpha(self, show:bool)->None:
    """"""
    pass

  def is_editing_alpha(self)->bool:
    """"""
    pass


