from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.RefCounted as __refcounted__
import py4godot.classes.MeshConvexDecompositionSettings as __meshconvexdecompositionsettings__


class Mode:
  CONVEX_DECOMPOSITION_MODE_VOXEL:int = 0
  CONVEX_DECOMPOSITION_MODE_TETRAHEDRON:int = 1


class MeshConvexDecompositionSettings(__refcounted__.RefCounted):
  """
		Parameters to be used with a `Mesh` convex decomposition operation.
	"""

  @staticmethod
  def constructor()->MeshConvexDecompositionSettings:pass



  @staticmethod
  def cast(other:__object__.Object)->MeshConvexDecompositionSettings:pass


  @property
  def max_concavity(self)->float:
    """"""
    pass
  @max_concavity.setter
  def max_concavity(self,  value:float)->None:
    """"""
    pass
  @property
  def symmetry_planes_clipping_bias(self)->float:
    """"""
    pass
  @symmetry_planes_clipping_bias.setter
  def symmetry_planes_clipping_bias(self,  value:float)->None:
    """"""
    pass
  @property
  def revolution_axes_clipping_bias(self)->float:
    """"""
    pass
  @revolution_axes_clipping_bias.setter
  def revolution_axes_clipping_bias(self,  value:float)->None:
    """"""
    pass
  @property
  def min_volume_per_convex_hull(self)->float:
    """"""
    pass
  @min_volume_per_convex_hull.setter
  def min_volume_per_convex_hull(self,  value:float)->None:
    """"""
    pass
  @property
  def resolution(self)->int:
    """"""
    pass
  @resolution.setter
  def resolution(self,  value:int)->None:
    """"""
    pass
  @property
  def max_num_vertices_per_convex_hull(self)->int:
    """"""
    pass
  @max_num_vertices_per_convex_hull.setter
  def max_num_vertices_per_convex_hull(self,  value:int)->None:
    """"""
    pass
  @property
  def plane_downsampling(self)->int:
    """"""
    pass
  @plane_downsampling.setter
  def plane_downsampling(self,  value:int)->None:
    """"""
    pass
  @property
  def convex_hull_downsampling(self)->int:
    """"""
    pass
  @convex_hull_downsampling.setter
  def convex_hull_downsampling(self,  value:int)->None:
    """"""
    pass
  @property
  def normalize_mesh(self)->bool:
    """"""
    pass
  @normalize_mesh.setter
  def normalize_mesh(self,  value:bool)->None:
    """"""
    pass
  @property
  def mode(self)->int:
    """"""
    pass
  @mode.setter
  def mode(self,  value:int)->None:
    """"""
    pass
  @property
  def convex_hull_approximation(self)->bool:
    """"""
    pass
  @convex_hull_approximation.setter
  def convex_hull_approximation(self,  value:bool)->None:
    """"""
    pass
  @property
  def max_convex_hulls(self)->int:
    """"""
    pass
  @max_convex_hulls.setter
  def max_convex_hulls(self,  value:int)->None:
    """"""
    pass
  @property
  def project_hull_vertices(self)->bool:
    """"""
    pass
  @project_hull_vertices.setter
  def project_hull_vertices(self,  value:bool)->None:
    """"""
    pass
  def set_max_concavity(self, max_concavity:float)->None:
    """"""
    pass

  def get_max_concavity(self)->float:
    """"""
    pass

  def set_symmetry_planes_clipping_bias(self, symmetry_planes_clipping_bias:float)->None:
    """"""
    pass

  def get_symmetry_planes_clipping_bias(self)->float:
    """"""
    pass

  def set_revolution_axes_clipping_bias(self, revolution_axes_clipping_bias:float)->None:
    """"""
    pass

  def get_revolution_axes_clipping_bias(self)->float:
    """"""
    pass

  def set_min_volume_per_convex_hull(self, min_volume_per_convex_hull:float)->None:
    """"""
    pass

  def get_min_volume_per_convex_hull(self)->float:
    """"""
    pass

  def set_resolution(self, min_volume_per_convex_hull:int)->None:
    """"""
    pass

  def get_resolution(self)->int:
    """"""
    pass

  def set_max_num_vertices_per_convex_hull(self, max_num_vertices_per_convex_hull:int)->None:
    """"""
    pass

  def get_max_num_vertices_per_convex_hull(self)->int:
    """"""
    pass

  def set_plane_downsampling(self, plane_downsampling:int)->None:
    """"""
    pass

  def get_plane_downsampling(self)->int:
    """"""
    pass

  def set_convex_hull_downsampling(self, convex_hull_downsampling:int)->None:
    """"""
    pass

  def get_convex_hull_downsampling(self)->int:
    """"""
    pass

  def set_normalize_mesh(self, normalize_mesh:bool)->None:
    """"""
    pass

  def get_normalize_mesh(self)->bool:
    """"""
    pass

  def set_mode(self, mode:int )->None:
    """"""
    pass

  def get_mode(self)->int:
    """"""
    pass

  def set_convex_hull_approximation(self, convex_hull_approximation:bool)->None:
    """"""
    pass

  def get_convex_hull_approximation(self)->bool:
    """"""
    pass

  def set_max_convex_hulls(self, max_convex_hulls:int)->None:
    """"""
    pass

  def get_max_convex_hulls(self)->int:
    """"""
    pass

  def set_project_hull_vertices(self, project_hull_vertices:bool)->None:
    """"""
    pass

  def get_project_hull_vertices(self)->bool:
    """"""
    pass


