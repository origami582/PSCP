from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNodeTextureParameterTriplanar as __visualshadernodetextureparametertriplanar__
import py4godot.classes.VisualShaderNodeTexture3DParameter as __visualshadernodetexture3dparameter__
import py4godot.classes.VisualShaderNodeParameter as __visualshadernodeparameter__
import py4godot.classes.VisualShaderNodeCubemapParameter as __visualshadernodecubemapparameter__
import py4godot.classes.VisualShaderNodeTexture2DArrayParameter as __visualshadernodetexture2darrayparameter__
import py4godot.classes.VisualShaderNodeTexture2DParameter as __visualshadernodetexture2dparameter__
import py4godot.classes.VisualShaderNodeTextureParameter as __visualshadernodetextureparameter__


class TextureType:
  KIND_DATA:int = 0
  KIND_COLOR:int = 1
  KIND_NORMAL_MAP:int = 2
  KIND_ANISOTROPY:int = 3
  KIND_MAX:int = 4
class ColorDefault:
  COLOR_DEFAULT_WHITE:int = 0
  COLOR_DEFAULT_BLACK:int = 1
  COLOR_DEFAULT_TRANSPARENT:int = 2
  COLOR_DEFAULT_MAX:int = 3
class TextureFilter:
  FILTER_DEFAULT:int = 0
  FILTER_NEAREST:int = 1
  FILTER_LINEAR:int = 2
  FILTER_NEAREST_MIPMAP:int = 3
  FILTER_LINEAR_MIPMAP:int = 4
  FILTER_NEAREST_MIPMAP_ANISOTROPIC:int = 5
  FILTER_LINEAR_MIPMAP_ANISOTROPIC:int = 6
  FILTER_MAX:int = 7
class TextureRepeat:
  REPEAT_DEFAULT:int = 0
  REPEAT_ENABLED:int = 1
  REPEAT_DISABLED:int = 2
  REPEAT_MAX:int = 3
class TextureSource:
  SOURCE_NONE:int = 0
  SOURCE_SCREEN:int = 1
  SOURCE_DEPTH:int = 2
  SOURCE_NORMAL_ROUGHNESS:int = 3
  SOURCE_MAX:int = 4


class VisualShaderNodeTextureParameter(__visualshadernodeparameter__.VisualShaderNodeParameter):
  """
		Performs a lookup operation on the texture provided as a uniform for the shader.
	"""

  @staticmethod
  def constructor()->VisualShaderNodeTextureParameter:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeTextureParameter:pass


  @property
  def texture_type(self)->int:
    """"""
    pass
  @texture_type.setter
  def texture_type(self,  value:int)->None:
    """"""
    pass
  @property
  def color_default(self)->int:
    """"""
    pass
  @color_default.setter
  def color_default(self,  value:int)->None:
    """"""
    pass
  @property
  def texture_filter(self)->int:
    """"""
    pass
  @texture_filter.setter
  def texture_filter(self,  value:int)->None:
    """"""
    pass
  @property
  def texture_repeat(self)->int:
    """"""
    pass
  @texture_repeat.setter
  def texture_repeat(self,  value:int)->None:
    """"""
    pass
  @property
  def texture_source(self)->int:
    """"""
    pass
  @texture_source.setter
  def texture_source(self,  value:int)->None:
    """"""
    pass
  def set_texture_type(self, type:int )->None:
    """"""
    pass

  def get_texture_type(self)->int:
    """"""
    pass

  def set_color_default(self, color:int )->None:
    """"""
    pass

  def get_color_default(self)->int:
    """"""
    pass

  def set_texture_filter(self, filter:int )->None:
    """"""
    pass

  def get_texture_filter(self)->int:
    """"""
    pass

  def set_texture_repeat(self, repeat:int )->None:
    """"""
    pass

  def get_texture_repeat(self)->int:
    """"""
    pass

  def set_texture_source(self, source:int )->None:
    """"""
    pass

  def get_texture_source(self)->int:
    """"""
    pass


