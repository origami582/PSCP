from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNodeResizableBase as __visualshadernoderesizablebase__



class VisualShaderNodeFrame(__visualshadernoderesizablebase__.VisualShaderNodeResizableBase):
  """
		A rectangular frame that can be used to group visual shader nodes together to improve organization.
		Nodes attached to the frame will move with it when it is dragged and it can automatically resize to enclose all attached nodes.
		Its title, description and color can be customized.
	"""

  @staticmethod
  def constructor()->VisualShaderNodeFrame:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeFrame:pass


  @property
  def title(self)->str:
    """"""
    pass
  @title.setter
  def title(self,  value:str)->None:
    """"""
    pass
  @property
  def tint_color_enabled(self)->bool:
    """"""
    pass
  @tint_color_enabled.setter
  def tint_color_enabled(self,  value:bool)->None:
    """"""
    pass
  @property
  def tint_color(self)->__core__.Color:
    """"""
    pass
  @tint_color.setter
  def tint_color(self,  value:__core__.Color)->None:
    """"""
    pass
  @property
  def autoshrink(self)->bool:
    """"""
    pass
  @autoshrink.setter
  def autoshrink(self,  value:bool)->None:
    """"""
    pass
  @property
  def attached_nodes(self)->__core__.PackedInt32Array:
    """"""
    pass
  @attached_nodes.setter
  def attached_nodes(self,  value:__core__.PackedInt32Array)->None:
    """"""
    pass
  def set_title(self, title:str)->None:
    """"""
    pass

  def get_title(self)->str:
    """"""
    pass

  def set_tint_color_enabled(self, enable:bool)->None:
    """"""
    pass

  def is_tint_color_enabled(self)->bool:
    """"""
    pass

  def set_tint_color(self, color:__core__.Color)->None:
    """"""
    pass

  def get_tint_color(self)->__core__.Color:
    """"""
    pass

  def set_autoshrink_enabled(self, enable:bool)->None:
    """"""
    pass

  def is_autoshrink_enabled(self)->bool:
    """"""
    pass

  def add_attached_node(self, node:int)->None:
    """
				Adds a node to the list of nodes attached to the frame. Should not be called directly, use the `VisualShader.attach_node_to_frame` method instead.
			"""
    pass

  def remove_attached_node(self, node:int)->None:
    """
				Removes a node from the list of nodes attached to the frame. Should not be called directly, use the `VisualShader.detach_node_from_frame` method instead.
			"""
    pass

  def set_attached_nodes(self, attached_nodes:__core__.PackedInt32Array)->None:
    """"""
    pass

  def get_attached_nodes(self)->__core__.PackedInt32Array:
    """"""
    pass


