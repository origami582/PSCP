from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.Joint2D as __joint2d__



class GrooveJoint2D(__joint2d__.Joint2D):
  """
		A physics joint that restricts the movement of two 2D physics bodies to a fixed axis. For example, a `StaticBody2D` representing a piston base can be attached to a `RigidBody2D` representing the piston head, moving up and down.
	"""

  @staticmethod
  def constructor()->GrooveJoint2D:pass



  @staticmethod
  def cast(other:__object__.Object)->GrooveJoint2D:pass


  @property
  def length(self)->float:
    """"""
    pass
  @length.setter
  def length(self,  value:float)->None:
    """"""
    pass
  @property
  def initial_offset(self)->float:
    """"""
    pass
  @initial_offset.setter
  def initial_offset(self,  value:float)->None:
    """"""
    pass
  def set_length(self, length:float)->None:
    """"""
    pass

  def get_length(self)->float:
    """"""
    pass

  def set_initial_offset(self, offset:float)->None:
    """"""
    pass

  def get_initial_offset(self)->float:
    """"""
    pass


