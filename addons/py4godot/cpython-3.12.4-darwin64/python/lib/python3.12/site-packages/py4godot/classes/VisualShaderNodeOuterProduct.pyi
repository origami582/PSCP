from py4godot.utils.VariantTypeWrapper4 import *
import py4godot.classes.Object as __object__
from typing import Any

import py4godot.classes.core as __core__
from py4godot.signals import BuiltinSignal
import py4godot.classes.VisualShaderNode as __visualshadernode__



class VisualShaderNodeOuterProduct(__visualshadernode__.VisualShaderNode):
  """
		`OuterProduct` treats the first parameter `c` as a column vector (matrix with one column) and the second parameter `r` as a row vector (matrix with one row) and does a linear algebraic matrix multiply `c * r`, yielding a matrix whose number of rows is the number of components in `c` and whose number of columns is the number of components in `r`.
	"""

  @staticmethod
  def constructor()->VisualShaderNodeOuterProduct:pass



  @staticmethod
  def cast(other:__object__.Object)->VisualShaderNodeOuterProduct:pass


